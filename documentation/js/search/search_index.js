var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AdddeviceComponent.html",[0,1.09,1,1.488]],["body/components/AdddeviceComponent.html",[0,1.795,1,2.603,2,2.511,3,0.272,4,0.24,5,2.217,6,2.217,7,2.217,8,2.217,9,0.24,10,3.312,11,2.344,12,3.258,13,2.217,14,3.862,15,3.576,16,5.125,17,2.916,18,5.727,19,2.916,20,5.125,21,0.272,22,1.339,23,3.461,24,1.408,25,1.113,26,3.898,27,3.898,28,0.958,29,0.024,30,1.512,31,0.956,32,0.607,33,2.927,34,2.639,35,2.217,36,3.312,37,1.221,38,1.91,39,5.125,40,3.898,41,3.898,42,3.898,43,2.026,44,5.371,45,5.727,46,3.898,47,2.053,48,5.125,49,3.898,50,3.312,51,3.898,52,2.409,53,4.746,54,3.898,55,2.409,56,3.898,57,0.272,58,0.651,59,5.125,60,1.26,61,4.356,62,1.91,63,2.7,64,2.916,65,2.217,66,2.603,67,2.217,68,0.916,69,2.217,70,1.668,71,2.217,72,1.668,73,2.217,74,1.563,75,2.217,76,1.668,77,2.217,78,1.668,79,2.217,80,1.563,81,1.91,82,2.217,83,2.217,84,0.013,85,0.017,86,0.013]],["title/interfaces/Address.html",[87,0.365,88,1.978]],["body/interfaces/Address.html",[3,0.114,4,0.1,9,0.1,21,0.114,25,0.354,29,0.024,30,0.789,31,0.962,32,0.254,37,0.511,38,0.798,43,1.559,47,1.41,52,1.007,55,1.007,57,0.114,58,0.447,60,0.837,66,2.509,84,0.013,85,0.009,86,0.011,87,0.357,88,2.243,89,0.511,90,1.41,91,1.522,92,0.858,93,0.493,94,2.669,95,1.932,96,2.669,97,2.669,98,2.669,99,2.669,100,2.669,101,2.669,102,2.669,103,2.243,104,2.669,105,1.385,106,2.305,107,0.935,108,1.385,109,0.509,110,1.283,111,0.332,112,0.745,113,1.581,114,1.103,115,1.687,116,2.243,117,2.669,118,0.614,119,1.812,120,1.007,121,1.687,122,1.103,123,1.803,124,0.927,125,0.697,126,0.927,127,1.41,128,1.812,129,0.858,130,0.927,131,1.522,132,1.224,133,0.798,134,1.557,135,0.798,136,2.077,137,1.103,138,1.41,139,1.654,140,1.41,141,1.522,142,1.103,143,1.937,144,1.103,145,1.457,146,1.103,147,2.105,148,1.103,149,1.103,150,1.103,151,1.074,152,0.453,153,0.426,154,0.798,155,0.543,156,0.858,157,1.223,158,1.103,159,1.103,160,1.007,161,1.103,162,1.103,163,1.103,164,1.103,165,1.103,166,1.529,167,1.103,168,1.103,169,1.103,170,1.103,171,1.878,172,2.105,173,1.103,174,2.669,175,1.103,176,2.669,177,1.007,178,1.812,179,1.007,180,1.007,181,1.007,182,1.007,183,1.103,184,0.927,185,1.007,186,1.007,187,1.103,188,2.305,189,1.103,190,1.103,191,1.103,192,1.103,193,1.103,194,2.294,195,1.103,196,1.103,197,1.812,198,1.007,199,1.103,200,1.103,201,1.103,202,1.103,203,1.103,204,2.663,205,3.899,206,1.103,207,1.103,208,2.305,209,1.103,210,1.103,211,1.103,212,2.305,213,1.103,214,1.103,215,1.812,216,2.305,217,2.893,218,1.103,219,2.305,220,3.559,221,2.105,222,0.927,223,3.169,224,2.077,225,3.621,226,3.348,227,3.496,228,2.477,229,2.436,230,2.305,231,1.103,232,1.522,233,1.937,234,1.103,235,2.669,236,1.812,237,2.53,238,1.812,239,1.812,240,1.103,241,1.103,242,1.103,243,1.557,244,0.927,245,0.927,246,0.927,247,1.103,248,1.103,249,0.927,250,1.103,251,1.103,252,1.007,253,1.103,254,1.103,255,1.812,256,1.103,257,1.007,258,2.669,259,2.305,260,3.621,261,2.669,262,2.669,263,1.103,264,1.103,265,1.103,266,1.103,267,1.103,268,1.103,269,1.103,270,1.812,271,1.103,272,1.103,273,1.103,274,2.305,275,1.103,276,1.103,277,1.103,278,1.103,279,1.103,280,1.103,281,1.103,282,1.103,283,1.812,284,1.103,285,0.745,286,1.103,287,0.798,288,0.798,289,0.798,290,2.305,291,2.669,292,1.522,293,1.103,294,1.812,295,1.103,296,1.103,297,2.305,298,2.305,299,1.103,300,1.103,301,2.305,302,1.812,303,1.103,304,1.103,305,1.103,306,1.103,307,1.103,308,1.103,309,1.103,310,1.103,311,1.103,312,1.654,313,1.812,314,1.812,315,1.103,316,1.103,317,1.103,318,1.103,319,1.103,320,1.103,321,1.103,322,1.812,323,1.812,324,1.103,325,1.103,326,1.103,327,1.103,328,1.103,329,1.103,330,1.812,331,1.812,332,1.103,333,1.103,334,1.103,335,1.103,336,0.927,337,0.798,338,1.103,339,1.103,340,1.103,341,1.007,342,0.481,343,1.103,344,1.103,345,1.007,346,1.812,347,1.812,348,1.103,349,1.103,350,1.103,351,1.103,352,2.305,353,1.812,354,2.669,355,1.812,356,1.812,357,1.103,358,1.812,359,1.103,360,2.305,361,1.103,362,1.103]],["title/interfaces/Animal.html",[87,0.365,363,2.149]],["body/interfaces/Animal.html",[3,0.342,4,0.301,9,0.301,21,0.342,29,0.023,57,0.342,60,1.565,68,1.182,84,0.016,85,0.019,86,0.016,87,0.514,89,1.535,93,0.857,107,0.963,109,0.587,363,3.659,364,4.163,365,6.611,366,4.964,367,4.475,368,6.611]],["title/components/AppComponent.html",[0,1.09,70,1.488]],["body/components/AppComponent.html",[0,1.783,1,1.647,2,2.491,3,0.268,4,0.237,5,2.189,6,2.189,7,2.189,8,2.189,9,0.237,11,2.324,12,3.238,13,2.189,14,3.852,15,3.568,17,2.891,19,2.891,21,0.268,22,1.328,23,3.444,24,0.946,25,1.315,28,1.25,29,0.024,30,1.679,31,1.011,32,0.599,57,0.268,58,0.643,62,1.886,63,2.678,64,2.891,65,2.189,66,2.59,67,2.189,68,1.017,69,2.189,70,2.59,71,2.189,72,1.647,73,2.189,74,1.544,75,2.189,76,2.175,77,2.189,78,1.647,79,2.189,80,1.544,81,1.886,82,2.189,83,2.189,84,0.013,85,0.017,86,0.013,93,0.736,107,0.517,109,0.441,153,1.328,155,1.281,157,1.006,369,3.27,370,5.691,371,5.083,372,5.691,373,6.053,374,2.89,375,2.768,376,4.836,377,6.053,378,5.083,379,1.006,380,0.946,381,3.141,382,3.848,383,3.848,384,1.886,385,1.76,386,3.817,387,2.89,388,3.27,389,3.27,390,3.848,391,3.848]],["title/modules/AppModule.html",[392,2.354,393,2.354]],["body/modules/AppModule.html",[1,2.585,2,1.508,3,0.215,4,0.189,9,0.189,15,1.621,29,0.024,31,1.194,32,0.479,35,1.751,36,3.707,37,0.964,57,0.215,58,0.514,62,1.508,70,2.86,72,2.585,74,2.423,76,2.585,78,2.585,80,2.423,84,0.01,85,0.014,86,0.01,91,1.751,113,1.235,139,1.902,154,2.96,229,1.902,243,1.408,387,2.311,388,2.616,392,2.084,393,4.791,394,1.902,395,2.084,396,4.305,397,3.804,398,4.305,399,2.311,400,2.616,401,2.616,402,2.616,403,2.616,404,2.616,405,3.734,406,3.734,407,3.707,408,2.616,409,1.751,410,3.078,411,3.707,412,3.707,413,4.362,414,3.707,415,2.084,416,3.078,417,4.362,418,4.362,419,4.362,420,2.616,421,3.078,422,3.078,423,3.078,424,3.078,425,2.616,426,2.616,427,4.362,428,3.078,429,4.362,430,3.078,431,4.362,432,3.078,433,4.362,434,3.078,435,4.362,436,3.078,437,5.066,438,3.078,439,4.362,440,3.078,441,2.616,442,4.362,443,3.078,444,4.362,445,3.078,446,4.362,447,3.078,448,4.362,449,4.362,450,3.078,451,3.078,452,4.362,453,3.078,454,4.362,455,4.362,456,2.616,457,2.616,458,4.362,459,3.078,460,4.362,461,3.078,462,3.078,463,3.078,464,4.362,465,2.616,466,2.616,467,5.066,468,4.362,469,3.078,470,3.078,471,3.078,472,3.078]],["title/modules/AppRoutingModule.html",[392,2.354,405,2.149]],["body/modules/AppRoutingModule.html",[0,1.923,3,0.315,4,0.278,9,0.278,29,0.024,31,1.126,32,0.703,57,0.315,58,0.754,74,2.259,78,2.41,80,2.259,81,2.212,84,0.015,85,0.019,86,0.015,121,2.626,171,1.503,394,2.79,399,3.39,405,3.481,411,3.837,412,4.786,425,3.837,426,3.837,457,3.837,473,4.515,474,4.515,475,5.632,476,4.155,477,2.569,478,3.813,479,4.515,480,3.553,481,2.79,482,3.837,483,4.515,484,5.632,485,4.515,486,3.837,487,4.515]],["title/interceptors/AuthInterceptorService.html",[406,2.149,488,2.955]],["body/interceptors/AuthInterceptorService.html",[3,0.262,4,0.231,9,0.231,11,1.72,21,0.262,22,1.308,24,0.925,25,1.222,28,1.231,29,0.024,31,1.043,32,0.585,37,1.178,57,0.262,58,0.628,68,1.006,84,0.012,85,0.016,86,0.012,107,0.756,109,0.488,111,0.621,115,2.407,118,1.416,121,1.609,152,1.044,153,0.983,155,1.252,157,0.983,166,1.849,285,2.573,374,2.824,375,2.743,379,1.47,380,1.383,381,3.093,406,3.093,477,2.139,489,3.76,490,5.097,491,3.196,492,5.005,493,5.005,494,4.438,495,3.76,496,5.005,497,5.998,498,5.998,499,3.76,500,5.005,501,5.005,502,3.76,503,1.981,504,3.389,505,3.76,506,5.005,507,3.76,508,3.76,509,3.76,510,5.005,511,5.626,512,3.76,513,3.76,514,3.76,515,2.824,516,2.824,517,3.76,518,3.76,519,5.005,520,3.76,521,3.76,522,3.76,523,3.76,524,4.254,525,5.626,526,3.76,527,3.76,528,3.76,529,3.76,530,3.76]],["title/injectables/AuthenticationService.html",[111,0.432,375,1.59]],["body/injectables/AuthenticationService.html",[3,0.151,4,0.133,9,0.133,21,0.151,22,0.878,24,0.533,25,1.383,28,1.504,29,0.024,30,1.689,31,0.561,32,0.337,37,0.679,43,2.069,53,1.627,57,0.151,58,0.362,60,1.14,68,1.094,81,1.647,84,0.007,85,0.011,86,0.007,87,0.227,93,0.487,107,0.944,109,0.539,110,2,111,0.417,151,1.348,152,0.602,153,0.566,155,0.721,157,1.721,166,1.59,171,1.544,285,1.882,287,2.017,288,2.017,289,2.017,336,1.233,342,1.368,375,1.537,379,1.448,380,1.362,384,1.647,385,2.429,409,1.233,481,2.544,503,2.168,504,2.275,515,1.627,516,1.627,531,0.816,532,1.627,533,3.091,534,3.498,535,3.941,536,3.941,537,3.941,538,3.36,539,4.266,540,3.36,541,3.36,542,3.36,543,3.941,544,2.167,545,2.167,546,2.167,547,2.167,548,2.856,549,4.068,550,2.167,551,3.877,552,3.595,553,2.167,554,2.856,555,2.167,556,2.167,557,2.856,558,4.513,559,2.715,560,2.167,561,2.167,562,2.856,563,3.14,564,2.167,565,2.856,566,2.167,567,2.856,568,2.167,569,2.856,570,3.769,571,3.769,572,2.167,573,3.091,574,2.856,575,2.167,576,2.856,577,2.866,578,2.167,579,3.941,580,1.841,581,1.841,582,1.841,583,1.841,584,3.498,585,3.498,586,3.498,587,4.513,588,3.498,589,3.091,590,3.482,591,3.498,592,2.856,593,3.498,594,2.856,595,3.498,596,3.498,597,1.841,598,1.841,599,2.856,600,2.856,601,1.841,602,2.856,603,1.841,604,1.841,605,1.841,606,1.841,607,1.841,608,1.841,609,1.841,610,1.841,611,3.498,612,1.841,613,1.841,614,1.841,615,1.841,616,1.841,617,4.266,618,1.841,619,1.841,620,1.841,621,1.841,622,1.841,623,1.841,624,1.841,625,2.856,626,1.841,627,1.841,628,1.841,629,4.266,630,2.856,631,2.856,632,1.841,633,1.841,634,2.856,635,1.841,636,1.841,637,1.841,638,1.841]],["title/interfaces/BoundingBox.html",[87,0.365,143,1.978]],["body/interfaces/BoundingBox.html",[3,0.118,4,0.104,9,0.104,21,0.118,29,0.024,30,0.816,31,0.973,32,0.264,37,0.532,38,1.979,43,1.589,47,2.344,52,2.496,55,1.049,57,0.118,58,0.462,60,0.861,66,2.536,84,0.013,85,0.009,86,0.012,87,0.367,88,1.992,89,0.532,90,0.894,91,0.965,92,0.894,93,0.507,94,1.149,95,0.831,96,1.149,97,1.149,98,1.149,99,1.149,100,1.149,101,1.149,102,1.149,103,0.965,104,1.149,106,1.873,107,0.916,109,0.437,110,1.319,111,0.343,112,0.776,113,1.62,114,1.149,115,1.728,116,2.298,117,2.735,118,0.639,119,1.873,120,1.049,121,1.728,122,1.149,123,1.847,124,0.965,125,0.726,126,0.965,127,1.457,128,1.873,129,0.894,130,0.965,131,1.574,132,1.265,133,0.831,134,1.602,135,0.831,136,2.128,137,1.149,138,1.457,139,1.71,140,1.457,141,1.574,142,1.149,143,2.298,144,1.149,145,1.498,146,1.149,147,2.164,148,1.149,149,1.149,150,1.149,151,1.785,152,0.471,153,0.443,154,0.831,155,0.565,156,0.894,157,1.247,158,1.149,159,1.149,160,1.049,161,1.149,162,1.149,163,1.149,164,1.149,165,1.149,166,1.549,167,1.149,168,1.149,169,1.149,170,1.149,171,1.902,172,2.164,173,1.149,174,2.735,175,1.149,176,2.735,177,1.049,178,1.873,179,1.049,180,1.049,181,1.049,182,1.049,183,1.149,184,0.965,185,1.049,186,1.049,187,1.149,188,2.371,189,1.149,190,1.149,191,1.149,192,1.149,193,1.149,194,2.344,195,1.149,196,1.149,197,1.873,198,1.049,199,1.149,200,1.149,201,1.149,202,1.149,203,1.149,204,2.714,205,3.945,206,1.149,207,1.149,208,2.371,209,1.149,210,1.149,211,1.149,212,2.371,213,1.149,214,1.149,215,1.873,216,2.371,217,2.949,218,1.149,219,2.371,220,3.601,221,2.164,222,0.965,223,3.23,224,2.128,225,3.674,226,3.406,227,3.552,228,2.531,229,2.496,230,2.371,231,1.149,232,1.574,233,1.992,234,1.149,235,2.735,236,1.873,237,2.571,238,1.873,239,1.873,240,1.149,241,1.149,242,1.149,243,1.602,244,0.965,245,0.965,246,0.965,247,1.149,248,1.149,249,0.965,250,1.149,251,1.149,252,1.049,253,1.149,254,1.149,255,1.873,256,1.149,257,1.049,258,2.735,259,2.371,260,3.674,261,2.735,262,2.735,263,1.149,264,1.149,265,1.149,266,1.149,267,1.149,268,1.149,269,1.149,270,1.873,271,1.149,272,1.149,273,1.149,274,2.371,275,1.149,276,1.149,277,1.149,278,1.149,279,1.149,280,1.149,281,1.149,282,1.149,283,1.873,284,1.149,285,0.776,286,1.149,287,0.831,288,0.831,289,0.831,290,2.371,291,2.735,292,1.574,293,1.149,294,1.873,295,1.149,296,1.149,297,2.371,298,2.371,299,1.149,300,1.149,301,2.371,302,1.873,303,1.149,304,1.149,305,1.149,306,1.149,307,1.149,308,1.149,309,1.149,310,1.149,311,1.149,312,1.71,313,1.873,314,1.873,315,1.149,316,1.149,317,1.149,318,1.149,319,1.149,320,1.149,321,1.149,322,1.873,323,1.873,324,1.149,325,1.149,326,1.149,327,1.149,328,1.149,329,1.149,330,1.873,331,1.873,332,1.149,333,1.149,334,1.149,335,1.149,336,0.965,337,0.831,338,1.149,339,1.149,340,1.149,341,1.049,342,0.501,343,1.149,344,1.149,345,1.049,346,1.873,347,1.873,348,1.149,349,1.149,350,1.149,351,1.149,352,2.371,353,1.873,354,2.735,355,1.873,356,1.873,357,1.149,358,1.873,359,1.149,360,2.371,361,1.149,362,1.149]],["title/interfaces/Box.html",[87,0.365,123,1.59]],["body/interfaces/Box.html",[3,0.281,4,0.248,9,0.248,21,0.281,29,0.024,57,0.281,60,1.795,68,1.102,84,0.013,85,0.017,86,0.013,87,0.423,89,1.263,93,0.759,107,0.947,109,0.616,123,2.662,367,4.325,639,3.425,640,6.163,641,6.163,642,6.388,643,6.163,644,3.808,645,3.808,646,6.388,647,6.163,648,6.163,649,4.03,650,4.03,651,3.026,652,4.03,653,4.03,654,4.03,655,4.03,656,4.03,657,4.03,658,4.03]],["title/injectables/BoxApiService.html",[111,0.432,127,1.832]],["body/injectables/BoxApiService.html",[3,0.295,4,0.261,9,0.261,21,0.295,22,1.414,24,1.042,25,1.364,28,1.33,29,0.024,31,1.049,32,0.66,37,1.328,57,0.295,58,0.708,68,0.758,84,0.014,85,0.018,86,0.014,93,0.783,107,0.801,109,0.469,110,2.365,111,0.672,115,2.886,118,1.596,123,1.938,124,2.411,127,2.85,129,3.418,130,3.691,152,1.177,153,1.107,157,1.696,166,1.503,342,1.758,379,1.107,380,1.042,503,2.85,531,1.596,659,2.967,660,2.619,661,6.28,662,6.28,663,3.182,664,4.476,665,4.598,666,3.601,667,4.238,668,2.869,669,4.238,670,4.598,671,4.238,672,3.182,673,4.238,674,4.238]],["title/injectables/BoxMarkerService.html",[111,0.432,138,1.832]],["body/injectables/BoxMarkerService.html",[3,0.214,4,0.189,9,0.189,21,0.214,22,1.138,24,1.244,25,1.401,28,1.353,29,0.024,31,0.919,32,0.478,43,1.449,44,2.608,57,0.214,58,0.513,60,1.353,68,1.039,84,0.01,85,0.014,86,0.01,90,3.446,92,1.617,93,0.732,107,0.834,108,2.608,109,0.568,111,0.54,112,1.403,113,1.231,123,3.081,124,1.746,129,3.446,138,2.293,152,0.852,153,0.802,157,1.811,166,1.528,177,2.69,179,1.897,180,2.69,181,1.897,182,2.69,184,1.746,185,2.69,186,1.897,237,1.504,244,2.476,245,1.746,246,1.746,249,1.746,342,0.905,379,1.438,380,1.353,384,2.697,385,2.517,531,1.156,672,3.268,675,5.058,676,5.058,677,5.058,678,5.058,679,4.353,680,3.699,681,3.699,682,4.353,683,4.353,684,4.353,685,4.353,686,2.608,687,4.938,688,4.353,689,3.069,690,3.069,691,4.353,692,3.069,693,5.058,694,3.069,695,2.608,696,3.069,697,3.069,698,2.608,699,3.069,700,3.069,701,4.353,702,3.069,703,2.608,704,3.069,705,3.069,706,3.069,707,3.069,708,3.699,709,4.353,710,4.353,711,3.069,712,3.069,713,3.069,714,3.069,715,3.069,716,3.069,717,3.069,718,3.069,719,2.304,720,4.353,721,4.353,722,4.353,723,3.699,724,4.353,725,2.608,726,4.353,727,3.069,728,3.069,729,2.608,730,2.608,731,3.069]],["title/interfaces/Country.html",[87,0.365,95,1.704]],["body/interfaces/Country.html",[3,0.328,4,0.29,9,0.29,21,0.328,29,0.023,57,0.328,60,1.675,68,1.165,84,0.015,85,0.019,86,0.015,87,0.493,89,1.474,93,0.836,95,2.831,107,0.967,109,0.599,367,4.414,651,4.896,732,3.998,733,6.52,734,6.52,735,6.52,736,6.52]],["title/injectables/DetectionMarkerService.html",[111,0.432,140,1.832]],["body/injectables/DetectionMarkerService.html",[3,0.266,4,0.235,9,0.235,21,0.266,22,1.322,24,1.394,25,1.311,28,1.394,29,0.024,31,1.049,32,0.595,43,1.272,57,0.266,58,0.638,68,1.014,84,0.013,85,0.017,86,0.013,90,3.308,92,2.013,93,0.553,107,0.679,109,0.545,111,0.628,112,1.747,113,1.533,125,2.922,126,2.174,134,1.747,140,2.665,145,1.635,152,1.061,153,0.999,157,1.482,166,1.575,171,1.272,198,2.361,217,2.361,222,3.434,237,1.872,244,2.174,245,2.174,246,2.174,249,2.174,342,1.127,379,1.482,380,1.394,531,1.439,680,4.299,681,4.299,686,3.247,695,3.247,723,3.247,729,3.247,730,3.247,737,5.336,738,5.059,739,3.821,740,5.059,741,3.821,742,4.299,743,5.059,744,5.059,745,2.869,746,3.821,747,2.869,748,3.821,749,3.821,750,3.821,751,4.299,752,3.821,753,5.059,754,3.821,755,3.821,756,3.821,757,3.821,758,3.821,759,3.821,760,3.821,761,3.821,762,3.821,763,3.821,764,3.821,765,3.247,766,3.247,767,3.821,768,3.821,769,3.821,770,3.247]],["title/components/DetectionlistComponent.html",[0,1.09,72,1.488]],["body/components/DetectionlistComponent.html",[0,1.489,1,1.175,2,1.968,3,0.191,4,0.169,5,1.562,6,1.562,7,1.562,8,1.562,9,0.169,11,1.837,12,2.702,13,1.562,14,3.572,15,3.308,17,2.285,19,2.285,21,0.191,22,1.05,23,2.974,24,0.675,25,1.304,28,0.675,29,0.024,30,1.185,31,0.929,32,0.427,38,1.345,43,1.338,57,0.191,58,0.459,62,1.345,63,2.116,64,2.974,65,1.562,66,2.237,67,1.562,68,0.849,69,1.562,70,1.175,71,1.562,72,2.237,73,1.562,74,1.101,75,1.562,76,1.175,77,1.562,78,1.175,79,1.562,80,1.101,81,1.345,82,1.562,83,1.562,84,0.009,85,0.013,86,0.009,93,0.582,103,1.562,109,0.483,118,1.034,121,1.175,125,2.033,131,1.562,132,2.391,133,1.345,134,1.837,135,1.345,151,1.906,155,0.914,237,1.968,337,1.345,366,2.062,379,0.718,380,0.675,384,2.562,385,2.391,415,2.72,559,1.968,577,2.483,659,1.256,771,2.333,772,4.017,773,4.751,774,4.017,775,4.751,776,4.751,777,4.751,778,4.751,779,4.751,780,2.746,781,2.746,782,5.228,783,2.746,784,2.285,785,3.414,786,3.231,787,3.231,788,2.746,789,5.228,790,3.016,791,2.746,792,4.017,793,4.017,794,2.746,795,2.746,796,4.017,797,4.017,798,4.017,799,4.017,800,2.746,801,2.746,802,2.746,803,2.746,804,2.746,805,2.333,806,2.746,807,2.746,808,2.746,809,2.746,810,4.017,811,2.746,812,2.746,813,2.746,814,2.746,815,2.746,816,2.746,817,2.746,818,2.746,819,2.746,820,2.746,821,3.414,822,4.017,823,4.017,824,4.017,825,2.746,826,4.017,827,4.017,828,3.414,829,3.414,830,4.017,831,4.017,832,4.017,833,4.017,834,4.017,835,4.017,836,4.017,837,4.017,838,4.017,839,4.017,840,4.017,841,4.017,842,4.017,843,2.333,844,2.72,845,2.746,846,4.017,847,4.017,848,3.016,849,4.017,850,4.017,851,4.017,852,2.746,853,4.017,854,2.746,855,2.746,856,2.746,857,5.563,858,2.746,859,2.746,860,2.746,861,2.746,862,2.746,863,1.859,864,1.859,865,2.746,866,1.859,867,2.746,868,2.746,869,2.746,870,2.746,871,2.746,872,2.746,873,1.859,874,2.062,875,2.062,876,2.333,877,2.333]],["title/injectables/DeviceApiService.html",[111,0.432,878,2.611]],["body/injectables/DeviceApiService.html",[3,0.363,4,0.321,9,0.321,24,1.606,25,1.131,29,0.023,31,0.87,32,0.811,57,0.363,58,0.87,84,0.017,85,0.02,86,0.017,111,0.763,152,1.446,153,1.361,531,1.962,659,2.809,660,3.219,878,4.612,879,5.219,880,5.219,881,5.209]],["title/injectables/GeoadminmapService.html",[111,0.432,882,2.611]],["body/injectables/GeoadminmapService.html",[3,0.277,4,0.244,9,0.244,21,0.277,22,1.356,24,0.976,25,1.127,28,0.976,29,0.024,30,1.171,31,0.965,32,0.618,37,1.244,57,0.277,58,0.663,68,0.927,84,0.013,85,0.017,86,0.013,107,0.533,109,0.45,110,2.308,111,0.644,112,1.815,113,1.592,116,2.258,121,2.22,152,1.102,153,1.038,155,1.322,156,2.733,171,1.727,204,2.258,228,3.287,342,1.171,379,1.356,380,1.275,420,3.374,480,2.091,531,1.495,659,2.642,882,3.895,883,3.374,884,4.408,885,2.981,886,3.97,887,4.408,888,5.207,889,3.97,890,3.97,891,3.97,892,3.97,893,3.97,894,3.97,895,3.97,896,4.339,897,3.374,898,3.374,899,3.97,900,5.188,901,3.97,902,3.97,903,3.97,904,5.188,905,3.97,906,3.97,907,3.97,908,3.97,909,3.97,910,3.97,911,3.97,912,3.97,913,3.97,914,4.408,915,3.895,916,5.778,917,3.97,918,3.97,919,3.97,920,3.97,921,3.97,922,3.97,923,3.97,924,3.97,925,3.97,926,3.97,927,3.97,928,3.97,929,3.97,930,3.97,931,3.97,932,3.97,933,3.97,934,3.97,935,3.97,936,3.97,937,3.97,938,3.97,939,3.97,940,3.97]],["title/injectables/LocationService.html",[111,0.432,136,1.832]],["body/injectables/LocationService.html",[3,0.245,4,0.217,9,0.217,21,0.245,22,1.251,24,1.338,25,1.4,28,1.435,29,0.024,30,1.605,31,0.908,32,0.548,47,1.854,57,0.245,58,0.588,63,1.854,68,0.972,84,0.012,85,0.016,86,0.012,93,0.693,109,0.53,111,0.594,112,1.609,113,1.92,121,2.696,136,2.522,145,2.048,151,1.92,152,0.977,153,0.92,157,1.422,166,0.977,171,1.811,184,2.723,204,3.783,221,2.175,222,2.723,224,1.854,232,2.002,237,2.861,243,1.609,252,2.175,379,1.422,380,1.338,531,1.325,687,4.068,941,2.99,942,5.44,943,5.44,944,5.838,945,4.787,946,4.787,947,4.787,948,3.519,949,3.519,950,5.44,951,4.787,952,3.519,953,4.787,954,3.519,955,4.787,956,5.838,957,3.519,958,4.962,959,3.519,960,3.519,961,3.519,962,3.519,963,3.519,964,3.519,965,3.519,966,3.519,967,3.519,968,3.519,969,4.787,970,3.519,971,4.787,972,3.519,973,3.519,974,3.519,975,3.519,976,3.519,977,3.519,978,3.519,979,3.519,980,3.519,981,4.787,982,4.787,983,3.519,984,3.519,985,3.519,986,4.068,987,4.962,988,3.519,989,2.99,990,4.787,991,2.99,992,3.519]],["title/components/LoginComponent.html",[0,1.09,74,1.395]],["body/components/LoginComponent.html",[0,1.59,1,1.321,2,2.142,3,0.215,4,0.19,5,1.756,6,1.756,7,1.756,8,1.756,9,0.19,11,1.999,12,2.886,13,1.756,14,3.675,15,3.403,17,2.486,19,2.486,21,0.215,22,1.142,23,3.139,24,0.759,25,1.265,28,1.248,29,0.024,30,1.628,31,0.921,32,0.481,33,4.143,34,2.09,35,1.756,57,0.215,58,0.515,62,1.513,63,2.302,64,2.486,65,1.756,66,2.361,67,1.756,68,0.907,69,1.756,70,1.321,71,1.756,72,1.321,73,1.756,74,2.213,75,1.756,76,1.321,77,1.756,78,1.321,79,1.756,80,1.238,81,1.513,82,1.756,83,1.756,84,0.01,85,0.014,86,0.01,93,0.633,107,0.587,109,0.268,151,2.035,155,1.028,157,1.522,171,1.028,233,1.756,292,1.756,337,1.513,342,1.289,375,2.523,379,0.807,380,0.759,381,3.136,384,1.513,385,1.412,477,1.756,481,3.737,494,4.209,524,2.623,549,3.943,551,3.943,844,3.736,848,2.318,863,3.435,864,2.959,866,2.09,873,3.736,874,2.318,875,2.318,993,2.623,994,5.074,995,4.371,996,5.074,997,4.689,998,4.689,999,2.623,1000,3.087,1001,3.714,1002,3.087,1003,3.087,1004,3.087,1005,3.714,1006,4.143,1007,3.087,1008,2.623,1009,2.318,1010,3.714,1011,3.087,1012,3.087,1013,3.087,1014,3.087,1015,2.623,1016,2.623,1017,2.623,1018,3.714,1019,3.714,1020,3.282,1021,3.714,1022,3.714,1023,3.714,1024,3.087,1025,3.714,1026,3.714,1027,3.714,1028,2.318,1029,2.318,1030,2.318,1031,2.623,1032,2.623,1033,2.623,1034,2.623,1035,2.623,1036,3.714,1037,2.623,1038,3.714,1039,2.623,1040,2.318,1041,3.282,1042,2.623,1043,2.623,1044,3.087]],["title/guards/LoginGuard.html",[478,2.354,1045,2.611]],["body/guards/LoginGuard.html",[3,0.303,4,0.268,9,0.268,11,1.989,21,0.303,22,1.438,24,1.069,25,1.195,28,1.069,29,0.024,31,1.059,32,0.677,57,0.303,58,0.726,68,0.983,84,0.014,85,0.018,86,0.014,103,3.433,109,0.477,111,0.683,115,2.582,118,1.638,152,1.208,153,1.137,155,1.448,157,1.137,166,1.528,243,1.989,374,3.266,375,2.9,379,1.438,380,1.353,381,3.4,389,3.696,477,2.474,478,3.724,482,5.389,494,4.593,504,3.724,552,3.724,1009,3.266,1046,4.35,1047,3.696,1048,4.35,1049,5.501,1050,6.341,1051,6.341,1052,4.35,1053,4.35,1054,6.034,1055,4.35]],["title/components/ManualreportingComponent.html",[0,1.09,76,1.488]],["body/components/ManualreportingComponent.html",[0,1.248,1,0.881,2,1.582,3,0.143,4,0.127,5,1.171,6,1.171,7,1.171,8,1.171,9,0.127,11,1.476,12,2.266,13,1.171,14,3.292,15,3.049,17,1.836,19,1.836,21,0.143,22,0.844,23,2.566,24,0.506,25,1.351,28,1.205,29,0.024,30,1.331,31,0.94,32,0.32,34,1.393,35,1.171,43,2.235,57,0.143,58,0.344,60,0.794,61,2.743,62,1.008,63,1.701,64,1.836,65,1.171,66,1.93,67,1.171,68,1.006,69,1.171,70,0.881,71,1.171,72,0.881,73,1.171,74,0.826,75,1.171,76,1.93,77,1.171,78,0.881,79,1.171,80,0.826,81,1.008,82,1.171,83,1.171,84,0.007,85,0.011,86,0.007,93,0.467,107,0.698,109,0.502,115,1.704,118,0.775,120,1.995,121,0.881,131,1.836,132,2.063,133,1.008,134,1.476,135,1.008,147,1.272,157,1.421,160,2.462,166,0.896,171,1.075,224,2.098,232,1.836,243,0.941,337,1.008,342,1.331,345,1.272,363,3.478,376,3.385,379,1.179,380,1.456,384,2.401,385,2.486,387,1.545,441,1.749,486,1.749,559,2.401,577,2.462,644,1.272,645,1.272,659,1.476,668,1.393,742,2.743,751,2.743,765,3.833,766,3.833,784,2.566,785,5.13,786,3.028,787,3.73,844,2.697,863,2.185,864,3.054,873,2.185,876,1.749,877,1.749,1006,4.728,1028,1.545,1029,1.545,1030,1.545,1040,1.545,1041,1.545,1056,1.749,1057,3.228,1058,3.983,1059,3.228,1060,3.983,1061,3.983,1062,3.983,1063,3.983,1064,3.983,1065,3.228,1066,3.228,1067,4.51,1068,2.058,1069,3.228,1070,4.51,1071,3.983,1072,3.054,1073,3.228,1074,3.228,1075,2.058,1076,3.228,1077,2.058,1078,2.058,1079,3.228,1080,2.058,1081,1.749,1082,2.058,1083,3.228,1084,3.228,1085,3.228,1086,2.058,1087,2.058,1088,3.983,1089,6.221,1090,3.228,1091,5.199,1092,3.317,1093,3.679,1094,2.058,1095,2.058,1096,2.058,1097,3.228,1098,3.228,1099,2.058,1100,2.058,1101,3.228,1102,2.058,1103,1.749,1104,3.028,1105,1.749,1106,1.545,1107,1.545,1108,2.058,1109,2.058,1110,2.058,1111,2.058,1112,2.058,1113,2.058,1114,2.058,1115,2.058,1116,2.058,1117,2.058,1118,2.058,1119,2.058,1120,2.058,1121,2.058,1122,2.058,1123,2.058,1124,2.058,1125,2.058,1126,2.058,1127,2.058,1128,1.545,1129,2.058,1130,2.058,1131,1.749,1132,2.058,1133,2.058,1134,2.058,1135,2.058,1136,1.393,1137,2.058,1138,1.393,1139,2.058,1140,2.058,1141,2.058,1142,3.228,1143,2.058,1144,2.058,1145,2.058,1146,2.058,1147,2.058,1148,3.228,1149,3.228,1150,3.228,1151,3.228,1152,3.228,1153,5.199,1154,5.199,1155,5.199,1156,3.228,1157,2.058,1158,2.058,1159,2.058,1160,2.058,1161,2.058]],["title/injectables/MapMarkerService.html",[111,0.432,154,1.704]],["body/injectables/MapMarkerService.html",[3,0.109,4,0.096,9,0.096,21,0.109,22,0.675,24,0.383,25,1.143,28,1.247,29,0.024,30,1.431,31,0.949,32,0.243,37,0.489,38,0.764,43,1.526,47,1.36,52,0.964,55,0.964,57,0.109,58,0.431,60,0.812,66,2.478,68,0.686,84,0.013,85,0.008,86,0.011,87,0.346,88,1.878,90,2.857,91,3.085,92,0.821,93,0.226,94,1.056,95,0.764,96,1.056,97,1.056,98,1.056,99,1.056,100,1.056,101,1.056,102,1.056,103,0.887,104,1.056,106,1.747,107,0.881,109,0.421,110,1.601,111,0.32,112,0.713,113,1.54,114,1.056,115,1.96,116,2.183,117,2.598,118,0.587,119,1.747,120,0.964,121,1.96,122,1.056,123,1.755,124,0.887,125,0.667,126,0.887,127,2.022,128,1.747,129,0.821,130,0.887,131,1.468,132,1.755,133,0.764,134,1.51,135,0.764,136,2.673,137,1.056,138,2.022,139,1.595,140,2.022,141,1.468,142,1.056,143,1.878,144,1.056,145,1.413,146,1.056,147,2.041,148,1.056,149,1.056,150,1.056,151,1.035,152,0.433,153,0.408,154,1.265,155,0.519,156,1.36,157,1.326,158,2.235,159,2.235,160,2.041,161,2.235,162,1.056,163,1.056,164,1.056,165,2.598,166,1.506,167,1.056,168,1.056,169,1.056,170,1.056,171,1.852,172,2.041,173,1.056,174,2.598,175,1.056,176,2.598,177,0.964,178,1.747,179,0.964,180,0.964,181,0.964,182,0.964,183,1.056,184,0.887,185,0.964,186,0.964,187,1.056,188,2.235,189,2.598,190,1.056,191,1.056,192,1.056,193,1.056,194,2.24,195,1.056,196,1.056,197,1.747,198,0.964,199,1.056,200,1.056,201,1.056,202,1.056,203,1.747,204,3.233,205,3.848,206,1.056,207,1.747,208,2.235,209,1.056,210,1.056,211,1.747,212,2.235,213,1.056,214,2.598,215,1.747,216,2.235,217,2.832,218,1.056,219,2.235,220,3.512,221,2.041,222,0.887,223,3.102,224,2.022,225,3.562,226,3.284,227,3.435,228,2.419,229,2.372,230,2.235,231,1.056,232,1.468,233,1.878,234,1.056,235,2.598,236,1.747,237,2.486,238,1.747,239,1.747,240,1.056,241,1.056,242,1.056,243,1.51,244,0.887,245,0.887,246,0.887,247,1.056,248,1.056,249,0.887,250,1.056,251,1.056,252,0.964,253,1.056,254,1.056,255,1.747,256,1.056,257,0.964,258,2.598,259,2.235,260,3.562,261,2.598,262,2.598,263,1.056,264,1.056,265,1.056,266,2.598,267,1.056,268,1.056,269,1.056,270,1.747,271,1.056,272,1.056,273,1.056,274,2.235,275,1.056,276,1.056,277,1.056,278,1.056,279,1.056,280,1.056,281,1.056,282,1.056,283,1.747,284,1.056,285,0.713,286,1.056,287,0.764,288,0.764,289,0.764,290,2.235,291,2.598,292,1.468,293,1.056,294,1.747,295,1.056,296,1.056,297,2.235,298,2.235,299,1.056,300,1.056,301,2.235,302,1.747,303,1.056,304,1.056,305,1.056,306,1.056,307,1.056,308,1.056,309,1.056,310,1.056,311,1.056,312,1.595,313,1.747,314,1.747,315,1.056,316,1.056,317,1.056,318,1.056,319,1.056,320,1.056,321,1.056,322,1.747,323,1.747,324,1.056,325,1.056,326,1.056,327,1.056,328,1.056,329,1.056,330,1.747,331,1.747,332,1.056,333,1.056,334,1.056,335,1.056,336,0.887,337,0.764,338,1.056,339,2.598,340,1.056,341,0.964,342,0.46,343,1.056,344,1.056,345,0.964,346,1.747,347,1.747,348,1.056,349,1.056,350,1.056,351,1.056,352,2.235,353,1.747,354,2.598,355,1.747,356,1.747,357,1.056,358,1.747,359,1.056,360,2.235,361,1.056,362,1.056,379,1.003,380,0.944,531,0.587,885,1.171,1162,2.581,1163,2.581,1164,2.581,1165,1.559,1166,1.559,1167,1.559,1168,1.559,1169,1.559,1170,1.559,1171,1.559,1172,1.559,1173,1.559,1174,1.559]],["title/interfaces/Position.html",[87,0.365,194,1.832]],["body/interfaces/Position.html",[3,0.285,4,0.251,9,0.251,21,0.285,29,0.024,57,0.285,60,1.785,84,0.013,85,0.017,86,0.013,87,0.428,89,1.28,93,0.765,107,0.94,109,0.613,145,2.65,194,2.784,312,3.265,367,4.193,380,1.299,644,3.828,645,3.828,786,3.828,787,3.828,790,4.651,829,4.49,1092,4.193,1128,4.651,1136,4.193,1138,4.193,1175,3.47,1176,5.264,1177,5.264,1178,5.264,1179,4.084]],["title/injectables/PublicApiService.html",[111,0.432,1072,2.354]],["body/injectables/PublicApiService.html",[3,0.283,4,0.25,9,0.25,21,0.283,22,1.673,24,0.998,25,1.391,28,1.294,29,0.024,31,1.032,32,0.632,37,1.272,57,0.283,58,0.678,68,0.726,84,0.013,85,0.017,86,0.013,93,0.762,107,0.784,109,0.507,110,2.328,111,0.654,115,2.927,118,1.529,152,1.128,153,1.061,157,1.769,166,1.462,363,2.509,379,1.061,380,0.998,503,2.773,531,1.529,659,3,660,2.509,663,3.049,664,4.386,665,4.474,666,3.451,668,2.749,1072,3.564,1103,3.451,1106,4.927,1107,4.927,1180,5.842,1181,6.18,1182,6.18,1183,4.06,1184,4.06,1185,3.451,1186,3.451,1187,5.264,1188,4.06,1189,4.474,1190,5.264,1191,4.06]],["title/interfaces/RainViewerImagePathResponse.html",[87,0.365,1192,1.832]],["body/interfaces/RainViewerImagePathResponse.html",[3,0.326,4,0.288,9,0.288,21,0.326,29,0.024,57,0.326,60,1.533,84,0.015,85,0.019,86,0.015,87,0.682,89,1.464,93,0.833,107,0.925,109,0.58,480,2.462,559,2.29,784,2.658,1192,3.031,1193,2.888,1194,4.02,1195,4.404,1196,4.404,1197,4.404,1198,4.02,1199,3.701,1200,3.701,1201,3.164,1202,3.701,1203,3.164,1204,3.164]],["title/interfaces/RainViewerRadaObject.html",[87,0.365,1199,1.978]],["body/interfaces/RainViewerRadaObject.html",[3,0.342,4,0.301,9,0.301,21,0.342,29,0.023,57,0.342,60,1.204,84,0.016,85,0.019,86,0.016,87,0.693,89,1.535,93,0.857,107,0.855,109,0.514,480,2.58,559,2.4,784,2.786,1192,2.58,1193,3.027,1194,3.027,1195,3.316,1196,3.316,1197,3.316,1198,3.027,1199,3.62,1200,3.368,1201,4.475,1202,3.993,1203,4.475,1204,3.316]],["title/interfaces/RainViewerSatelliteObject.html",[87,0.365,1200,1.978]],["body/interfaces/RainViewerSatelliteObject.html",[3,0.347,4,0.306,9,0.306,21,0.347,29,0.023,57,0.347,60,1.224,84,0.016,85,0.02,86,0.016,87,0.697,89,1.56,93,0.866,107,0.861,109,0.432,480,2.622,559,2.439,784,2.832,1192,2.622,1193,3.076,1194,3.076,1195,3.37,1196,3.37,1197,3.37,1198,3.076,1199,3.401,1200,3.645,1201,3.37,1202,3.927,1203,3.37,1204,4.5]],["title/injectables/RainviewermapService.html",[111,0.432,1205,2.611]],["body/injectables/RainviewermapService.html",[3,0.273,4,0.241,9,0.241,21,0.273,22,1.344,24,0.964,25,1.324,28,1.412,29,0.024,30,1.694,31,1.018,32,0.61,37,1.228,43,1.305,57,0.273,58,0.654,68,1.026,84,0.013,85,0.017,86,0.013,109,0.498,110,2.296,111,0.639,112,1.792,113,1.572,152,1.088,153,1.024,155,1.305,156,2.71,166,1.088,171,1.713,228,2.926,285,1.792,287,1.92,288,1.92,289,1.92,342,1.156,379,1.501,380,1.412,480,2.065,531,1.476,552,3.482,589,2.943,590,2.943,659,2.895,884,4.371,885,2.943,887,4.371,888,5.522,914,4.371,915,3.862,1192,2.71,1205,3.862,1206,3.33,1207,5.144,1208,6.097,1209,3.919,1210,5.144,1211,3.919,1212,3.919,1213,3.919,1214,3.919,1215,3.919,1216,5.144,1217,3.919,1218,5.742,1219,5.144,1220,2.943,1221,3.919,1222,3.919,1223,3.919,1224,3.919,1225,3.919,1226,3.919,1227,3.919,1228,3.919]],["title/interfaces/Report.html",[87,0.365,1104,2.149]],["body/interfaces/Report.html",[3,0.31,4,0.273,9,0.273,21,0.31,29,0.023,57,0.31,60,1.782,84,0.015,85,0.018,86,0.015,87,0.466,89,1.391,93,0.807,107,0.934,109,0.608,644,3.948,645,3.948,786,3.948,787,3.948,1092,4.325,1093,4.797,1104,3.444,1128,4.797,1131,5.429,1136,4.325,1138,4.325,1229,3.773]],["title/interfaces/SearchResult.html",[87,0.365,141,1.978]],["body/interfaces/SearchResult.html",[3,0.113,4,0.099,9,0.099,21,0.113,25,0.351,29,0.024,30,0.784,31,0.959,32,0.252,37,0.506,38,0.792,43,1.552,47,1.4,52,0.999,55,0.999,57,0.113,58,0.724,60,1.311,66,2.503,84,0.013,85,0.009,86,0.011,87,0.355,88,2.928,89,0.506,90,1.4,91,1.512,92,0.851,93,0.49,94,1.094,95,0.792,96,1.094,97,1.094,98,1.094,99,1.094,100,1.094,101,1.094,102,1.094,103,0.919,104,1.094,105,1.373,106,2.292,107,0.925,109,0.54,110,1.275,111,0.33,112,0.739,113,1.573,114,1.094,115,1.678,116,2.231,117,2.656,118,0.609,119,1.799,120,0.999,121,1.678,122,1.094,123,1.794,124,0.919,125,0.691,126,0.919,127,1.4,128,1.799,129,0.851,130,0.919,131,1.512,132,1.215,133,0.792,134,1.548,135,0.792,136,2.066,137,1.094,138,1.4,139,1.643,140,1.4,141,1.926,142,2.656,143,2.928,144,2.656,145,1.995,146,2.656,147,2.881,148,2.656,149,2.656,150,2.656,151,1.066,152,0.449,153,0.422,154,0.792,155,0.538,156,0.851,157,1.218,158,1.094,159,1.094,160,0.999,161,1.094,162,1.094,163,1.094,164,1.094,165,1.094,166,1.524,167,1.094,168,1.094,169,1.094,170,1.094,171,1.873,172,2.092,173,1.094,174,2.656,175,1.094,176,2.656,177,0.999,178,1.799,179,0.999,180,0.999,181,0.999,182,0.999,183,1.094,184,0.919,185,0.999,186,0.999,187,1.094,188,2.292,189,1.094,190,1.094,191,1.094,192,1.094,193,1.094,194,2.284,195,1.094,196,1.094,197,1.799,198,0.999,199,1.094,200,1.094,201,1.094,202,1.094,203,1.094,204,2.652,205,3.889,206,1.094,207,1.094,208,2.292,209,1.094,210,1.094,211,1.094,212,2.292,213,1.094,214,1.094,215,1.799,216,2.292,217,2.881,218,1.094,219,2.292,220,3.55,221,2.092,222,0.919,223,3.156,224,2.066,225,3.61,226,3.336,227,3.484,228,2.466,229,2.424,230,2.292,231,1.094,232,1.512,233,1.926,234,1.094,235,2.656,236,1.799,237,2.522,238,1.799,239,1.799,240,1.094,241,1.094,242,1.094,243,1.548,244,0.919,245,0.919,246,0.919,247,1.094,248,1.094,249,0.919,250,1.094,251,1.094,252,0.999,253,1.094,254,1.094,255,1.799,256,1.094,257,0.999,258,2.656,259,2.292,260,3.61,261,2.656,262,2.656,263,1.094,264,1.094,265,1.094,266,1.094,267,1.094,268,1.094,269,1.094,270,1.799,271,1.094,272,1.094,273,1.094,274,2.292,275,1.094,276,1.094,277,1.094,278,1.094,279,1.094,280,1.094,281,1.094,282,1.094,283,1.799,284,1.094,285,0.739,286,1.094,287,0.792,288,0.792,289,0.792,290,2.292,291,2.656,292,1.512,293,1.094,294,1.799,295,1.094,296,1.094,297,2.292,298,2.292,299,1.094,300,1.094,301,2.292,302,1.799,303,1.094,304,1.094,305,1.094,306,1.094,307,1.094,308,1.094,309,1.094,310,1.094,311,1.094,312,1.643,313,1.799,314,1.799,315,1.094,316,1.094,317,1.094,318,1.094,319,1.094,320,1.094,321,1.094,322,1.799,323,1.799,324,1.094,325,1.094,326,1.094,327,1.094,328,1.094,329,1.094,330,1.799,331,1.799,332,1.094,333,1.094,334,1.094,335,1.094,336,0.919,337,0.792,338,1.094,339,1.094,340,1.094,341,0.999,342,0.477,343,1.094,344,1.094,345,0.999,346,1.799,347,1.799,348,1.094,349,1.094,350,1.094,351,1.094,352,2.292,353,1.799,354,2.656,355,1.799,356,1.799,357,1.094,358,1.799,359,1.094,360,2.292,361,1.094,362,1.094,1230,1.616]],["title/components/SignupComponent.html",[0,1.09,80,1.395]],["body/components/SignupComponent.html",[0,1.379,1,1.033,2,1.789,3,0.168,4,0.149,5,1.373,6,1.373,7,1.373,8,1.373,9,0.149,11,1.669,12,2.504,13,1.373,14,3.451,15,3.196,17,2.076,19,2.076,21,0.168,22,0.954,23,2.791,24,0.593,25,1.318,28,1.363,29,0.024,30,1.635,31,0.926,32,0.376,33,3.684,34,1.634,35,1.373,37,0.756,57,0.168,58,0.403,62,1.183,63,1.923,64,2.076,65,1.373,66,2.099,67,1.373,68,1.059,69,1.373,70,1.033,71,1.373,72,1.033,73,1.373,74,0.968,75,1.373,76,1.033,77,1.373,78,1.033,79,1.373,80,1.968,81,2.157,82,1.373,83,1.373,84,0.008,85,0.012,86,0.008,93,0.529,95,2.716,107,0.796,109,0.382,110,1.848,151,1.766,155,0.804,156,2.319,157,1.664,166,0.67,171,1.634,172,1.492,233,1.373,285,1.104,287,1.183,288,1.183,289,1.183,292,1.373,337,1.183,342,1.447,375,2.244,379,0.954,380,0.897,381,2.72,384,1.789,385,1.669,477,1.373,481,2.256,494,3.897,533,1.812,549,3.752,551,3.752,570,3.684,571,1.812,573,3.305,577,1.492,672,1.812,719,2.741,725,3.102,821,2.051,844,3.322,848,1.812,863,2.98,864,2.471,866,1.634,873,3.322,874,1.812,875,1.812,997,4.17,998,4.17,999,2.051,1001,3.102,1005,3.102,1006,4.643,1008,2.051,1009,1.812,1010,3.102,1015,2.051,1016,2.051,1017,2.051,1018,3.102,1019,3.102,1020,2.741,1021,3.102,1022,3.102,1023,3.102,1025,3.102,1026,4.17,1027,4.17,1028,1.812,1029,1.812,1030,1.812,1031,2.051,1032,2.051,1033,2.051,1034,2.051,1035,2.051,1036,3.102,1037,2.051,1038,3.102,1039,2.051,1040,1.812,1041,2.741,1042,2.051,1043,2.051,1231,2.051,1232,4.402,1233,3.65,1234,4.402,1235,4.402,1236,4.907,1237,3.65,1238,4.907,1239,2.414,1240,2.414,1241,3.65,1242,2.414,1243,2.414,1244,2.414,1245,2.414,1246,2.414,1247,2.414,1248,2.414,1249,2.414,1250,2.414,1251,2.414,1252,2.414,1253,2.414,1254,2.414,1255,2.414,1256,2.414,1257,2.414,1258,2.414,1259,2.414,1260,2.414,1261,2.414,1262,2.414,1263,2.414,1264,2.414,1265,2.414,1266,2.414,1267,2.414,1268,2.414,1269,2.414,1270,2.414,1271,2.414,1272,3.65,1273,2.414,1274,3.65,1275,2.414,1276,2.414,1277,2.414,1278,2.414,1279,2.414,1280,2.414,1281,2.414,1282,3.65,1283,3.65,1284,3.65]],["title/interfaces/TimePath.html",[87,0.365,1202,1.978]],["body/interfaces/TimePath.html",[3,0.342,4,0.301,9,0.301,21,0.342,29,0.023,57,0.342,60,1.204,84,0.016,85,0.019,86,0.016,87,0.693,89,1.535,93,0.857,107,0.909,109,0.514,480,3.483,559,3.118,784,3.761,1192,2.58,1193,3.027,1194,3.027,1195,3.316,1196,3.316,1197,3.316,1198,3.027,1199,3.368,1200,3.368,1201,3.316,1202,3.85,1203,3.316,1204,3.316]],["title/interfaces/Token.html",[87,0.365,563,2.354]],["body/interfaces/Token.html",[3,0.185,4,0.163,9,0.163,21,0.185,29,0.024,30,1.373,31,0.654,32,0.413,37,0.831,43,2.163,53,1.99,57,0.185,58,0.443,60,1.264,68,0.7,84,0.009,85,0.013,86,0.009,87,0.278,89,0.831,93,0.567,107,0.931,109,0.529,110,1.753,111,0.486,151,1.57,152,0.736,153,0.693,155,0.882,157,1.5,166,1.692,171,1.711,285,2.128,287,2.28,288,2.28,289,2.28,336,1.508,342,1.373,375,1.212,385,1.79,409,1.508,481,1.638,503,2.452,504,1.794,515,1.99,516,1.99,532,1.99,533,1.99,534,2.252,535,2.252,536,2.252,537,2.252,539,4.66,543,2.252,548,2.252,549,3.885,551,3.712,552,3.151,554,2.252,557,2.252,558,4.368,559,2.687,562,2.252,563,3.151,565,2.252,567,2.252,569,2.252,570,3.495,571,3.495,573,2.939,574,2.252,576,2.252,577,2.419,579,4.368,580,2.252,581,4.368,582,4.368,583,4.368,584,3.955,585,3.955,586,3.955,587,4.877,588,3.955,589,3.495,590,3.859,591,3.955,592,3.326,593,3.955,594,3.326,595,3.955,596,3.955,597,2.252,598,2.252,599,3.326,600,3.326,601,2.252,602,3.326,603,2.252,604,2.252,605,2.252,606,2.252,607,2.252,608,2.252,609,2.252,610,2.252,611,3.955,612,2.252,613,2.252,614,2.252,615,2.252,616,2.252,617,4.66,618,2.252,619,2.252,620,2.252,621,2.252,622,2.252,623,2.252,624,2.252,625,3.326,626,2.252,627,2.252,628,2.252,629,4.66,630,3.326,631,3.326,632,2.252,633,2.252,634,3.326,635,2.252,636,2.252,637,2.252,638,2.252,1285,4.654]],["title/interfaces/WildlifeDetection.html",[87,0.365,125,1.488]],["body/interfaces/WildlifeDetection.html",[3,0.289,4,0.255,9,0.255,21,0.289,29,0.024,57,0.289,60,1.772,84,0.014,85,0.018,86,0.014,87,0.434,89,1.297,93,0.772,107,0.966,109,0.614,125,2.281,145,2.664,366,4.675,644,3.847,645,3.847,786,3.847,787,3.847,790,4.675,1092,4.215,1093,4.675,1136,4.215,1138,4.215,1176,5.29,1177,5.01,1178,5.29,1286,3.517,1287,4.139]],["title/injectables/WildlifeDetectionApiService.html",[111,0.432,132,1.59]],["body/injectables/WildlifeDetectionApiService.html",[3,0.269,4,0.238,9,0.238,21,0.269,22,1.332,24,0.95,25,1.368,28,1.402,29,0.024,30,1.139,31,1.052,32,0.601,37,1.21,57,0.269,58,0.645,68,0.911,84,0.013,85,0.017,86,0.013,93,0.738,107,0.766,109,0.495,110,2.283,111,0.633,115,2.824,118,1.455,125,1.653,126,2.197,132,2.33,133,3.171,134,3.207,135,3.171,152,1.073,153,1.009,157,1.647,166,1.415,342,1.682,379,1.332,380,1.253,503,2.684,531,1.455,659,2.959,660,2.387,663,2.9,664,4.281,668,2.615,670,4.845,958,4.845,1104,3.746,1105,3.282,1185,3.282,1186,3.282,1189,3.282,1288,5.095,1289,6.062,1290,6.062,1291,5.095,1292,5.095,1293,3.862,1294,3.862,1295,3.862,1296,3.862,1297,3.862]],["title/coverage.html",[1220,3.566]],["body/coverage.html",[0,1.957,1,1.342,9,0.193,10,2.665,29,0.024,43,1.044,70,1.342,72,1.342,74,1.258,76,1.342,78,1.342,80,1.258,84,0.01,85,0.015,86,0.01,87,0.714,88,1.784,90,3.202,91,3.162,92,3.202,95,1.537,109,0.272,111,0.825,123,1.434,125,1.342,127,1.652,129,2.329,130,1.784,132,1.434,133,1.537,134,2.021,135,1.537,136,1.652,138,1.652,140,1.652,141,1.784,143,1.784,151,2.91,154,1.537,194,1.652,220,3.163,363,1.938,364,2.665,369,2.665,375,1.434,406,1.938,478,2.123,488,2.665,490,2.665,491,2.665,532,3.319,563,2.123,639,2.665,659,2.78,660,3.434,732,2.665,737,2.665,745,2.355,747,2.355,771,2.665,843,2.665,878,2.355,879,2.665,880,2.665,882,2.355,883,2.665,941,2.665,993,2.665,1045,2.355,1047,2.665,1056,2.665,1072,2.123,1104,1.938,1106,2.355,1107,2.355,1175,2.665,1192,1.652,1193,3.434,1199,1.784,1200,1.784,1202,1.784,1205,2.355,1206,2.665,1220,2.355,1229,2.665,1231,2.665,1286,2.665,1298,2.665,1299,3.137,1300,3.137,1301,5.859,1302,5.859,1303,5.119,1304,6.079,1305,3.137,1306,4.979,1307,3.137,1308,6.246,1309,2.665,1310,6.572,1311,2.665,1312,2.665,1313,2.665,1314,5.119,1315,4.42,1316,5.119,1317,4.42,1318,4.42,1319,3.137,1320,2.665,1321,2.665,1322,3.319,1323,3.319,1324,2.665,1325,2.665,1326,2.665,1327,3.756,1328,2.665,1329,3.137]],["title/dependencies.html",[395,2.832,1330,2.467]],["body/dependencies.html",[29,0.024,32,0.752,35,2.749,84,0.016,85,0.019,86,0.016,113,2.537,118,1.82,395,3.271,397,3.628,414,4.99,415,3.975,456,4.106,465,4.106,466,4.106,477,2.749,805,4.106,866,3.271,1331,7.002,1332,4.832,1333,5.872,1334,4.832,1335,4.832,1336,4.832,1337,4.832,1338,4.832,1339,4.832,1340,4.832,1341,4.832,1342,4.832,1343,4.832,1344,4.832,1345,4.832,1346,4.832,1347,4.832,1348,4.832,1349,4.832,1350,4.832]],["title/miscellaneous/functions.html",[1351,1.965,1352,3.555]],["body/miscellaneous/functions.html",[21,0.359,28,1.265,29,0.023,68,1.162,84,0.017,85,0.02,86,0.017,145,2.202,342,1.518,379,1.698,380,1.598,503,2.711,745,4.579,747,4.579,770,4.373,1320,4.373,1321,4.373,1322,3.864,1323,4.579,1324,5.182,1351,3.484,1352,4.373,1353,5.146,1354,5.146,1355,4.373,1356,5.146,1357,5.146,1358,5.146]],["title/index.html",[21,0.202,1359,2.467,1360,2.467]],["body/index.html",[0,1.912,4,0.274,11,2.039,29,0.018,43,1.485,50,3.789,68,0.797,84,0.015,85,0.018,86,0.015,257,2.755,341,2.755,386,3.348,409,2.536,651,3.348,698,4.749,719,3.348,896,4.583,1020,3.348,1194,2.755,1198,2.755,1330,3.789,1361,5.588,1362,6.103,1363,6.103,1364,4.459,1365,4.459,1366,5.588,1367,6.589,1368,6.822,1369,4.459,1370,4.459,1371,4.459,1372,4.459,1373,4.459,1374,4.459,1375,4.459,1376,4.459,1377,3.789,1378,4.459,1379,6.103,1380,4.459,1381,6.398,1382,4.459,1383,4.459,1384,4.459,1385,4.459,1386,5.588,1387,5.588,1388,6.398,1389,4.459,1390,5.588,1391,4.459,1392,6.723,1393,4.459,1394,4.459,1395,5.588,1396,4.459,1397,4.459,1398,4.459,1399,6.103,1400,4.459,1401,4.459,1402,3.348,1403,4.459,1404,4.459]],["title/license.html",[1359,2.467,1360,2.467,1405,2.467]],["body/license.html",[29,0.019,84,0.015,85,0.019,86,0.015,116,2.591,386,3.419,409,2.591,703,3.87,708,3.87,896,4.251,897,3.87,898,3.87,915,4.251,1081,3.87,1298,3.87,1377,3.87,1405,3.87,1406,4.554,1407,6.162,1408,4.554,1409,5.662,1410,4.554,1411,4.554,1412,4.554,1413,4.554,1414,6.984,1415,4.554,1416,4.554,1417,6.162,1418,4.554,1419,5.662,1420,4.554,1421,4.554,1422,4.554,1423,4.554,1424,4.554,1425,4.554,1426,4.554,1427,4.554,1428,4.554,1429,5.662,1430,4.554,1431,4.554,1432,4.554,1433,4.554,1434,4.554,1435,4.554,1436,5.662,1437,5.662,1438,4.554,1439,4.554,1440,4.554,1441,4.554,1442,4.554,1443,4.554,1444,4.554,1445,4.554,1446,4.554,1447,4.554,1448,4.554,1449,4.554,1450,4.554,1451,4.554,1452,4.554,1453,4.554,1454,4.554,1455,4.554,1456,4.554,1457,4.554,1458,4.554,1459,4.554,1460,4.554,1461,4.554,1462,4.554,1463,4.554,1464,4.554,1465,4.554]],["title/modules.html",[394,2.935]],["body/modules.html",[29,0.021,84,0.018,85,0.021,86,0.018,393,3.736,394,3.41,405,3.41,415,3.736,828,4.689,986,4.689,1466,6.352,1467,5.518,1468,5.518]],["title/overview.html",[1402,3.566]],["body/overview.html",[1,2.624,2,2.208,29,0.023,38,2.208,47,2.374,62,2.208,70,2.926,72,2.624,74,2.46,76,2.624,78,2.624,80,2.46,84,0.015,85,0.018,86,0.015,89,1.412,154,3.005,392,3.05,393,4.924,394,2.784,395,3.05,396,3.829,397,3.383,398,3.829,399,3.383,400,3.829,401,3.829,402,3.829,403,3.829,404,3.829,405,3.79,406,3.79,407,4.78,408,3.829,409,2.563,476,3.05,531,1.697,1045,3.383,1402,3.383,1469,4.506,1470,4.506,1471,4.506,1472,4.506]],["title/routes.html",[476,3.215]],["body/routes.html",[29,0.021,84,0.019,85,0.021,86,0.019,476,3.825]],["title/miscellaneous/variables.html",[1351,1.965,1473,3.555]],["body/miscellaneous/variables.html",[21,0.301,29,0.024,38,2.114,84,0.014,85,0.018,86,0.014,107,0.807,109,0.578,145,1.846,224,2.273,243,1.973,384,3.318,385,3.097,987,3.667,989,3.667,991,3.667,1306,3.667,1309,4.651,1311,5.109,1312,5.109,1313,5.109,1322,3.24,1323,4.11,1325,4.651,1326,3.667,1327,5.373,1328,3.667,1351,2.921,1355,3.667,1473,3.667,1474,4.315,1475,4.315,1476,6.322,1477,5.473,1478,5.473,1479,4.315,1480,4.315,1481,6.322,1482,4.315,1483,4.315,1484,4.315,1485,4.315,1486,4.315,1487,4.315,1488,6.011,1489,4.315,1490,4.315,1491,4.315,1492,6.011,1493,6.011,1494,6.011,1495,6.011]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/Animal.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"injectables/PublicApiService.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"injectables/RainviewermapService.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":151,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"components/DetectionlistComponent.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{},"coverage.html":{}}}],["0.0",{"_index":819,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["0.11.4",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":820,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["0.3.3",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":918,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["0/1",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1314,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["0/37",{"_index":1307,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1319,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1303,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":811,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["0}}/10",{"_index":1155,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["1",{"_index":38,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"components/DetectionlistComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.4em",{"_index":1038,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["1.5.3",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["10,000",{"_index":906,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["100",{"_index":337,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{}}}],["1000",{"_index":614,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["1000).todatestring().split",{"_index":722,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["1000).tolocaletimestring",{"_index":724,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["11",{"_index":1470,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.0.1",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["13.3.0",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["13.3.4",{"_index":1364,"title":{},"body":{"index.html":{}}}],["13.3.9",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1471,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":875,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["16",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16px",{"_index":877,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{}}}],["2",{"_index":47,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/LocationService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"overview.html":{}}}],["2.3.0",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":988,"title":{},"body":{"injectables/LocationService.html":{}}}],["2022",{"_index":1408,"title":{},"body":{"license.html":{}}}],["25",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2lvl4",{"_index":100,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["2x.png",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":52,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["3000",{"_index":185,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["300px",{"_index":1158,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["305d63",{"_index":180,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["33",{"_index":181,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["34",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.7.0",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":520,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["403",{"_index":521,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["41",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":308,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["5.1.3",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["50px",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["5e8b7e",{"_index":182,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["6",{"_index":1472,"title":{},"body":{"overview.html":{}}}],["60)*1000",{"_index":628,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["7",{"_index":1469,"title":{},"body":{"overview.html":{}}}],["7.5.0",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":179,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["800px",{"_index":1032,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["80vw",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["8px",{"_index":1161,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["_addlocationinput",{"_index":339,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["_addsearchbar",{"_index":266,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["_checkcoverage",{"_index":1207,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["_checkcoverage(control",{"_index":1210,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["a_span",{"_index":319,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["a_span.innertext",{"_index":321,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["above",{"_index":1435,"title":{},"body":{"license.html":{}}}],["accept",{"_index":588,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["accesstoken",{"_index":581,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["account",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["acquisition",{"_index":895,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["action",{"_index":1459,"title":{},"body":{"license.html":{}}}],["activatedroutesnapshot",{"_index":1050,"title":{},"body":{"guards/LoginGuard.html":{}}}],["active",{"_index":255,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["actual_component",{"_index":83,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["add",{"_index":341,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"index.html":{}}}],["adddevice",{"_index":16,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["adddevice'},{'name",{"_index":69,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["adddevice.component.html",{"_index":20,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["adddevice.component.scss",{"_index":18,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["adddevicecomponent",{"_index":1,"title":{"components/AdddeviceComponent.html":{}},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addinputtoggle",{"_index":214,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["addlistener(a",{"_index":323,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["addlistener(a_span",{"_index":324,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["addlistener(button",{"_index":360,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["addlistener(input",{"_index":297,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["addlistener(label",{"_index":259,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["addlocationinput",{"_index":1162,"title":{},"body":{"injectables/MapMarkerService.html":{}}}],["addlocationinput(map",{"_index":211,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["address",{"_index":88,"title":{"interfaces/Address.html":{}},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["addresssearch(searchstring",{"_index":930,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["addsearchbar",{"_index":1163,"title":{},"body":{"injectables/MapMarkerService.html":{}}}],["addsearchbar(mapleaf",{"_index":207,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["addto(map",{"_index":188,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["addto(mapleaf",{"_index":210,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["admin",{"_index":51,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["allowinputmarkers",{"_index":1164,"title":{},"body":{"injectables/MapMarkerService.html":{}}}],["allowinputmarkers(map",{"_index":203,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["already",{"_index":1284,"title":{},"body":{"components/SignupComponent.html":{}}}],["and/or",{"_index":1427,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1362,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":805,"title":{},"body":{"components/DetectionlistComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":37,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["angular/compiler",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":35,"title":{},"body":{"components/AdddeviceComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ManualreportingComponent.html":{}}}],["angular/material/form",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slider",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":477,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["animal",{"_index":363,"title":{"interfaces/Animal.html":{}},"body":{"interfaces/Animal.html":{},"components/ManualreportingComponent.html":{},"injectables/PublicApiService.html":{},"coverage.html":{}}}],["animalid",{"_index":1128,"title":{},"body":{"components/ManualreportingComponent.html":{},"interfaces/Position.html":{},"interfaces/Report.html":{}}}],["animalname",{"_index":790,"title":{},"body":{"components/DetectionlistComponent.html":{},"interfaces/Position.html":{},"interfaces/WildlifeDetection.html":{}}}],["animals",{"_index":1180,"title":{},"body":{"injectables/PublicApiService.html":{}}}],["animate",{"_index":801,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["animate('225ms",{"_index":816,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["animations",{"_index":807,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["any).httpclient",{"_index":275,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["any).locationinput",{"_index":212,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["any).locationinput(options",{"_index":362,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["any).locationservice",{"_index":356,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["any).results[0",{"_index":938,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["any).searchbar",{"_index":208,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["any).searchbar(options",{"_index":338,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["any).toggleinput",{"_index":215,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["any).toggleinput().addto(map",{"_index":206,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["any).toggleinput(options",{"_index":265,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["api",{"_index":128,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["api.service",{"_index":131,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["api.service.ts",{"_index":660,"title":{},"body":{"injectables/BoxApiService.html":{},"injectables/DeviceApiService.html":{},"injectables/PublicApiService.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{}}}],["api.service.ts:11",{"_index":1184,"title":{},"body":{"injectables/PublicApiService.html":{}}}],["api.service.ts:12",{"_index":665,"title":{},"body":{"injectables/BoxApiService.html":{},"injectables/PublicApiService.html":{}}}],["api.service.ts:13",{"_index":1291,"title":{},"body":{"injectables/WildlifeDetectionApiService.html":{}}}],["api.service.ts:17",{"_index":666,"title":{},"body":{"injectables/BoxApiService.html":{},"injectables/PublicApiService.html":{}}}],["api.service.ts:20",{"_index":1294,"title":{},"body":{"injectables/WildlifeDetectionApiService.html":{}}}],["api.service.ts:22",{"_index":667,"title":{},"body":{"injectables/BoxApiService.html":{}}}],["api.service.ts:23",{"_index":1183,"title":{},"body":{"injectables/PublicApiService.html":{}}}],["api.service.ts:27",{"_index":1293,"title":{},"body":{"injectables/WildlifeDetectionApiService.html":{}}}],["api.service.ts:31",{"_index":1295,"title":{},"body":{"injectables/WildlifeDetectionApiService.html":{}}}],["api.service.ts:6",{"_index":881,"title":{},"body":{"injectables/DeviceApiService.html":{}}}],["api/box",{"_index":130,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["api/device",{"_index":880,"title":{},"body":{"injectables/DeviceApiService.html":{},"coverage.html":{}}}],["api/public",{"_index":1107,"title":{},"body":{"components/ManualreportingComponent.html":{},"injectables/PublicApiService.html":{},"coverage.html":{}}}],["api/wildlife",{"_index":135,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{}}}],["apicountryurl",{"_index":1263,"title":{},"body":{"components/SignupComponent.html":{}}}],["apipath",{"_index":1222,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["apiurl",{"_index":533,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["app.component",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":70,"title":{"components/AppComponent.html":{}},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1373,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":587,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["applications",{"_index":904,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["appmodule",{"_index":393,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":405,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arealstatistik",{"_index":920,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["areas",{"_index":929,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["arising",{"_index":1463,"title":{},"body":{"license.html":{}}}],["artifacts",{"_index":1382,"title":{},"body":{"index.html":{}}}],["assets/icons/search.png",{"_index":296,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["assets/marker",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":1415,"title":{},"body":{"license.html":{}}}],["asymmetrik/ngx",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["attribution",{"_index":914,"title":{},"body":{"injectables/GeoadminmapService.html":{},"injectables/RainviewermapService.html":{}}}],["audio",{"_index":829,"title":{},"body":{"components/DetectionlistComponent.html":{},"interfaces/Position.html":{}}}],["authentication.service",{"_index":509,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["authenticationservice",{"_index":375,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{},"coverage.html":{}}}],["authinterceptorservice",{"_index":406,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["authorization",{"_index":515,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["authors",{"_index":1452,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/SignupComponent.html":{}}}],["auto",{"_index":1041,"title":{},"body":{"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["auto_icon",{"_index":365,"title":{},"body":{"interfaces/Animal.html":{}}}],["automatically",{"_index":1374,"title":{},"body":{"index.html":{}}}],["available",{"_index":1468,"title":{},"body":{"modules.html":{}}}],["average",{"_index":905,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["awesome",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["backend",{"_index":1261,"title":{},"body":{"components/SignupComponent.html":{}}}],["backend_url",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["background",{"_index":853,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["battery",{"_index":693,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["battery:${data.batterystatus",{"_index":728,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["battery_status",{"_index":658,"title":{},"body":{"interfaces/Box.html":{}}}],["batterystatus",{"_index":640,"title":{},"body":{"interfaces/Box.html":{}}}],["bearer",{"_index":516,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["bezier(0.4",{"_index":818,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["bindpopup(string(boxpopup(box",{"_index":187,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["bindpopup(string(positionpopup(position",{"_index":202,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["bindpopup(this.boxpopup(box",{"_index":713,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["bindpopup(this.destinationpopup(d",{"_index":755,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["biologists",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["block",{"_index":1036,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["blur",{"_index":335,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["blur_time",{"_index":301,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["bold",{"_index":868,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["boolean",{"_index":504,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"guards/LoginGuard.html":{},"interfaces/Token.html":{}}}],["bootstrap",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":859,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["bottom",{"_index":860,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["bottomright",{"_index":340,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["boundingbox",{"_index":143,"title":{"interfaces/BoundingBox.html":{}},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["box",{"_index":123,"title":{"interfaces/Box.html":{}},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["box.battery_status",{"_index":178,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["box.location_lat",{"_index":173,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["box.location_long",{"_index":175,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["box.locationlat",{"_index":709,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["box.locationlong",{"_index":710,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["boxapi",{"_index":158,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["boxapiservice",{"_index":127,"title":{"injectables/BoxApiService.html":{}},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["boxes",{"_index":690,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["boxes.map(box",{"_index":706,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["boxmarker",{"_index":159,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["boxmarkerservice",{"_index":138,"title":{"injectables/BoxMarkerService.html":{}},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["boxpopup",{"_index":679,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["boxpopup(data",{"_index":684,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["boxradius",{"_index":675,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["browse",{"_index":1466,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"components/DetectionlistComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1381,"title":{},"body":{"index.html":{}}}],["button",{"_index":343,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["button.innerhtml",{"_index":352,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["button.setattribute('aria",{"_index":351,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["button.setattribute('color",{"_index":349,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["button.setattribute('mat",{"_index":348,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["c",{"_index":708,"title":{},"body":{"injectables/BoxMarkerService.html":{},"license.html":{}}}],["c.feature",{"_index":714,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["canactivate",{"_index":482,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuard.html":{}}}],["canactivate(route",{"_index":1049,"title":{},"body":{"guards/LoginGuard.html":{}}}],["cancel",{"_index":61,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/ManualreportingComponent.html":{}}}],["capabilities",{"_index":1397,"title":{},"body":{"index.html":{}}}],["catch((err",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["catch(err",{"_index":526,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["catcherror",{"_index":508,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["center",{"_index":1039,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["ch')?.id",{"_index":1277,"title":{},"body":{"components/SignupComponent.html":{}}}],["change",{"_index":1376,"title":{},"body":{"index.html":{}}}],["char",{"_index":1279,"title":{},"body":{"components/SignupComponent.html":{}}}],["char.charcodeat(0",{"_index":1281,"title":{},"body":{"components/SignupComponent.html":{}}}],["charge",{"_index":898,"title":{},"body":{"injectables/GeoadminmapService.html":{},"license.html":{}}}],["check",{"_index":257,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"index.html":{}}}],["checked",{"_index":223,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["children",{"_index":483,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choice",{"_index":1394,"title":{},"body":{"index.html":{}}}],["choose",{"_index":231,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["city",{"_index":94,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["claim",{"_index":1455,"title":{},"body":{"license.html":{}}}],["class",{"_index":58,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["classname",{"_index":992,"title":{},"body":{"injectables/LocationService.html":{}}}],["cleartimeout(blur_time",{"_index":333,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["cleartimeout(this.refreshtimeout",{"_index":626,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["cli",{"_index":1363,"title":{},"body":{"index.html":{}}}],["click",{"_index":260,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["client",{"_index":664,"title":{},"body":{"injectables/BoxApiService.html":{},"injectables/PublicApiService.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["cluster_appmodule",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":651,"title":{},"body":{"interfaces/Box.html":{},"interfaces/Country.html":{},"index.html":{}}}],["collapsed",{"_index":815,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["color",{"_index":186,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["column",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["columnnames",{"_index":775,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["columnnames[i",{"_index":823,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["columnstodisplay",{"_index":776,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["columnstodisplaywithexpand",{"_index":777,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["command",{"_index":1395,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1093,"title":{},"body":{"components/ManualreportingComponent.html":{},"interfaces/Report.html":{},"interfaces/WildlifeDetection.html":{}}}],["component",{"_index":0,"title":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":67,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["components/adddevice/adddevice.component",{"_index":463,"title":{},"body":{"modules/AppModule.html":{}}}],["components/detectionlist/detectionlist.component",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.component",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/manualreporting/manualreporting.component",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/map/map.component",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/signup/signup.component",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["conditions",{"_index":1434,"title":{},"body":{"license.html":{}}}],["config",{"_index":699,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["connection",{"_index":1464,"title":{},"body":{"license.html":{}}}],["connectivity:${data.connectivitystatus}/5",{"_index":727,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["connectivity_status",{"_index":657,"title":{},"body":{"interfaces/Box.html":{}}}],["connectivitystatus",{"_index":641,"title":{},"body":{"interfaces/Box.html":{}}}],["console.error(e",{"_index":968,"title":{},"body":{"injectables/LocationService.html":{}}}],["console.error(err",{"_index":289,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["console.log('get",{"_index":271,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["console.log('logging",{"_index":598,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["console.log(data);this.setcookiesfromdata(data",{"_index":597,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["console.log(err",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["const",{"_index":171,"title":{},"body":{"interfaces/Address.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/DetectionMarkerService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"components/SignupComponent.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["constructor(@inject(\"backend_url",{"_index":1186,"title":{},"body":{"injectables/PublicApiService.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["constructor(@inject('backend_url",{"_index":669,"title":{},"body":{"injectables/BoxApiService.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":1108,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["constructor(authservice",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"guards/LoginGuard.html":{}}}],["constructor(data",{"_index":1068,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["constructor(fb",{"_index":999,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(http",{"_index":885,"title":{},"body":{"injectables/GeoadminmapService.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{}}}],["constructor(httpclient",{"_index":544,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(private",{"_index":155,"title":{},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"components/DetectionlistComponent.html":{},"injectables/GeoadminmapService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["constructor(url",{"_index":663,"title":{},"body":{"injectables/BoxApiService.html":{},"injectables/PublicApiService.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["constructor(wildlife",{"_index":780,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["container",{"_index":1157,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["content",{"_index":586,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["continent",{"_index":733,"title":{},"body":{"interfaces/Country.html":{}}}],["continue",{"_index":309,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["contract",{"_index":1460,"title":{},"body":{"license.html":{}}}],["control",{"_index":228,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/GeoadminmapService.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{}}}],["control.addoverlay(gjl",{"_index":939,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["control.addoverlay(tile",{"_index":1219,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["control.addoverlay(tilearealstatistik",{"_index":919,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["control.addoverlay(tilegemeinde",{"_index":926,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["controldiv",{"_index":225,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["controlui",{"_index":227,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["controlui.classlist.add('leaflet",{"_index":263,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["controlui.classlist.remove('leaflet",{"_index":254,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["controlui.title",{"_index":230,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["cookie",{"_index":633,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["cookie.split(\"=\")[0].trim",{"_index":635,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["cookie.split(\"=\")[1",{"_index":636,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["cookiename",{"_index":634,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["cookies",{"_index":631,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["cookiestr",{"_index":629,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["cookiestr.split",{"_index":632,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["coordinates",{"_index":246,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["copies",{"_index":1429,"title":{},"body":{"license.html":{}}}],["copy",{"_index":915,"title":{},"body":{"injectables/GeoadminmapService.html":{},"injectables/RainviewermapService.html":{},"license.html":{}}}],["copyright",{"_index":1407,"title":{},"body":{"license.html":{}}}],["corresponds",{"_index":911,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["countries",{"_index":1234,"title":{},"body":{"components/SignupComponent.html":{}}}],["country",{"_index":95,"title":{"interfaces/Country.html":{}},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"interfaces/Country.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["country.code",{"_index":1274,"title":{},"body":{"components/SignupComponent.html":{}}}],["country.name",{"_index":1283,"title":{},"body":{"components/SignupComponent.html":{}}}],["country_code",{"_index":96,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["countrycode",{"_index":1243,"title":{},"body":{"components/SignupComponent.html":{}}}],["countrycode.touppercase().replace(/./g",{"_index":1278,"title":{},"body":{"components/SignupComponent.html":{}}}],["countryid",{"_index":571,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["countryid).then((success",{"_index":1259,"title":{},"body":{"components/SignupComponent.html":{}}}],["county",{"_index":97,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["coverage",{"_index":1220,"title":{"coverage.html":{}},"body":{"injectables/RainviewermapService.html":{},"coverage.html":{}}}],["create",{"_index":39,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["createdetection",{"_index":1288,"title":{},"body":{"injectables/WildlifeDetectionApiService.html":{}}}],["createdetection(detection",{"_index":1292,"title":{},"body":{"injectables/WildlifeDetectionApiService.html":{}}}],["createmarker",{"_index":680,"title":{},"body":{"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{}}}],["createmarker(box",{"_index":685,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["createmarker(d",{"_index":740,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["createmarkers",{"_index":681,"title":{},"body":{"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{}}}],["createmarkers(boxes",{"_index":688,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["createmarkers(detection",{"_index":743,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["criboffspring",{"_index":840,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["criticalcolor",{"_index":676,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["cubic",{"_index":817,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["currency",{"_index":734,"title":{},"body":{"interfaces/Country.html":{}}}],["currencysymbol",{"_index":735,"title":{},"body":{"interfaces/Country.html":{}}}],["currentcountry",{"_index":1272,"title":{},"body":{"components/SignupComponent.html":{}}}],["customer",{"_index":701,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["d",{"_index":742,"title":{},"body":{"injectables/DetectionMarkerService.html":{},"components/ManualreportingComponent.html":{}}}],["d.locationlat",{"_index":757,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["d.locationlong",{"_index":753,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["damages",{"_index":1456,"title":{},"body":{"license.html":{}}}],["data",{"_index":342,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/GeoadminmapService.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{},"miscellaneous/functions.html":{}}}],["data.accesstoken",{"_index":620,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["data.animalname",{"_index":758,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["data.expiresin",{"_index":619,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["data.male",{"_index":768,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["data.name",{"_index":718,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["data.offspring",{"_index":769,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["data.refreshtoken",{"_index":621,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["data:image/svg+xml;charset=utf8,%3csvg%20xmlns='http://www.w3.org/2000/svg'%3e%3c/svg%3e",{"_index":315,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["date",{"_index":559,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{}}}],["date(b.recordedat).tolocalestring",{"_index":799,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["date(data.lastheartbeat",{"_index":726,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["date(data.recordedat).todatestring().split",{"_index":761,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["date(data.recordedat).tolocaletimestring",{"_index":762,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["date(data.registeredat",{"_index":721,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["date(expirationdate.setseconds(expirationdate.getseconds",{"_index":618,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["date(this.readcookie('tokenexpires",{"_index":610,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["date(this.reportform.value.date",{"_index":1125,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["date.now",{"_index":613,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["date.sethours(values.time.split(\":\")[0",{"_index":1126,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["date.setminutes(values.time.split(\":\")[1",{"_index":1127,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["date.toisostring",{"_index":1132,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["day",{"_index":909,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["deal",{"_index":1416,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1465,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":114,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["debouncetime(1100",{"_index":281,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["debugtoken",{"_index":583,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["decide",{"_index":704,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["declarations",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/BoxMarkerService.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":25,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["delete",{"_index":673,"title":{},"body":{"injectables/BoxApiService.html":{}}}],["deletedelete",{"_index":830,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["dependencies",{"_index":395,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":702,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["description",{"_index":366,"title":{},"body":{"interfaces/Animal.html":{},"components/DetectionlistComponent.html":{},"interfaces/WildlifeDetection.html":{}}}],["desktop",{"_index":910,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["destinationpopup",{"_index":738,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["destinationpopup(data",{"_index":744,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["detail",{"_index":846,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["detected",{"_index":759,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["detectedat",{"_index":1131,"title":{},"body":{"components/ManualreportingComponent.html":{},"interfaces/Report.html":{}}}],["detection",{"_index":134,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{}}}],["detection.map(d",{"_index":749,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["detectionapi",{"_index":160,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["detectioncount",{"_index":642,"title":{},"body":{"interfaces/Box.html":{}}}],["detectionlist",{"_index":772,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["detectionlist'},{'name",{"_index":73,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["detectionlist.component.html",{"_index":774,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["detectionlist.component.scss",{"_index":773,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["detectionlistcomponent",{"_index":72,"title":{"components/DetectionlistComponent.html":{}},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["detectionmarker",{"_index":161,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["detectionmarkerservice",{"_index":140,"title":{"injectables/DetectionMarkerService.html":{}},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/DetectionMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["detectionmethods",{"_index":1060,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["detections",{"_index":822,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["detections:${data.detectioncount",{"_index":731,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["dev",{"_index":1370,"title":{},"body":{"index.html":{}}}],["development",{"_index":1365,"title":{},"body":{"index.html":{}}}],["device",{"_index":44,"title":{},"body":{"components/AdddeviceComponent.html":{},"injectables/BoxMarkerService.html":{}}}],["deviceapiservice",{"_index":878,"title":{"injectables/DeviceApiService.html":{}},"body":{"injectables/DeviceApiService.html":{},"coverage.html":{}}}],["diagram",{"_index":871,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["dialogref",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/ManualreportingComponent.html":{}}}],["direction",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["directive",{"_index":65,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["directives",{"_index":82,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1380,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1385,"title":{},"body":{"index.html":{}}}],["display",{"_index":863,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["display_name",{"_index":144,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["displaydate",{"_index":789,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["displayfn",{"_index":1065,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["displayfn(species",{"_index":1074,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["dist",{"_index":1384,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":119,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["distribute",{"_index":1425,"title":{},"body":{"license.html":{}}}],["document.cookie",{"_index":630,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["documentation",{"_index":1298,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["don't",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{}}}],["dynamic",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":237,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/LocationService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["e.accuracy",{"_index":973,"title":{},"body":{"injectables/LocationService.html":{}}}],["e.latlng",{"_index":252,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/LocationService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["e.latlng.lat",{"_index":247,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["e.latlng.lng",{"_index":248,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["e.target.value",{"_index":299,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["e2e",{"_index":1393,"title":{},"body":{"index.html":{}}}],["ecdsa",{"_index":40,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["editedit",{"_index":831,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["efefef",{"_index":856,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["element",{"_index":64,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["element.comment",{"_index":842,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["element.female",{"_index":837,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["element.locationlat",{"_index":833,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["element.locationlong",{"_index":835,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["element.male",{"_index":839,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["element.offspring",{"_index":841,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["element[column",{"_index":824,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["email",{"_index":551,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["empty",{"_index":316,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["enablehighaccuracy",{"_index":962,"title":{},"body":{"injectables/LocationService.html":{}}}],["end",{"_index":1392,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":288,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["err.status",{"_index":519,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["error",{"_index":287,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["event",{"_index":1081,"title":{},"body":{"components/ManualreportingComponent.html":{},"license.html":{}}}],["event.target.files[0",{"_index":1111,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["example",{"_index":1159,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["exceed",{"_index":1153,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["execute",{"_index":1390,"title":{},"body":{"index.html":{}}}],["expand",{"_index":793,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["expanded",{"_index":851,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["expandedelement",{"_index":778,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["expirationdate",{"_index":617,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["expirationdate.toutcstring",{"_index":623,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["expirationseconds",{"_index":567,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["expires",{"_index":558,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["expires.gettime",{"_index":612,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["expires.toutcstring",{"_index":638,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["expiresin",{"_index":582,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["export",{"_index":57,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/Animal.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"injectables/PublicApiService.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"injectables/RainviewermapService.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["exports",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":1443,"title":{},"body":{"license.html":{}}}],["fab",{"_index":347,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["fair",{"_index":900,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["fall",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":224,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/LocationService.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/variables.html":{}}}],["false}).addto(map",{"_index":980,"title":{},"body":{"injectables/LocationService.html":{}}}],["fb",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["feature",{"_index":244,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["female",{"_index":1138,"title":{},"body":{"components/ManualreportingComponent.html":{},"interfaces/Position.html":{},"interfaces/Report.html":{},"interfaces/WildlifeDetection.html":{}}}],["femalefemales",{"_index":836,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["females",{"_index":765,"title":{},"body":{"injectables/DetectionMarkerService.html":{},"components/ManualreportingComponent.html":{}}}],["fetch",{"_index":1260,"title":{},"body":{"components/SignupComponent.html":{}}}],["ff3333",{"_index":177,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["field",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/Animal.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"injectables/PublicApiService.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"injectables/RainviewermapService.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{}}}],["files",{"_index":1377,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":120,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["filter(name",{"_index":1076,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["filter(searchtext",{"_index":279,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["filteredoptions",{"_index":1061,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["first",{"_index":719,"title":{},"body":{"injectables/BoxMarkerService.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["firstname",{"_index":573,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["fitness",{"_index":1448,"title":{},"body":{"license.html":{}}}],["flaeche.fill/default/current/3857/{z}/{x}/{y}.png",{"_index":925,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["flex",{"_index":864,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["focus",{"_index":332,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["following",{"_index":1433,"title":{},"body":{"license.html":{}}}],["font",{"_index":866,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["form",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["format=json&polygon=1&addressdetails=1",{"_index":277,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["formbuilder",{"_index":33,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["formcontrol",{"_index":1089,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["formcontrol(0",{"_index":1091,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["formcontrol(1",{"_index":1090,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["formgroup",{"_index":1088,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["formsmodule",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["free",{"_index":897,"title":{},"body":{"injectables/GeoadminmapService.html":{},"license.html":{}}}],["full",{"_index":486,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ManualreportingComponent.html":{}}}],["function",{"_index":220,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["functions",{"_index":1352,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1432,"title":{},"body":{"license.html":{}}}],["further",{"_index":1398,"title":{},"body":{"index.html":{}}}],["gemeinde",{"_index":924,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["generate",{"_index":1379,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1194,"title":{},"body":{"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{},"index.html":{}}}],["geo",{"_index":940,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["geoadmin",{"_index":916,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["geoadminmapservice",{"_index":882,"title":{"injectables/GeoadminmapService.html":{}},"body":{"injectables/GeoadminmapService.html":{},"coverage.html":{}}}],["geojson",{"_index":697,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["geometry",{"_index":245,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["geoservices",{"_index":902,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["getanimals",{"_index":1181,"title":{},"body":{"injectables/PublicApiService.html":{}}}],["getapiimagepath",{"_index":1208,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["getboxes",{"_index":661,"title":{},"body":{"injectables/BoxApiService.html":{}}}],["getboxmarkers",{"_index":165,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["getcurrentlocation",{"_index":1236,"title":{},"body":{"components/SignupComponent.html":{}}}],["getdetectionmethods",{"_index":1182,"title":{},"body":{"injectables/PublicApiService.html":{}}}],["getflagemoji",{"_index":1237,"title":{},"body":{"components/SignupComponent.html":{}}}],["getflagemoji(country.code",{"_index":1282,"title":{},"body":{"components/SignupComponent.html":{}}}],["getflagemoji(countrycode",{"_index":1241,"title":{},"body":{"components/SignupComponent.html":{}}}],["geticon",{"_index":944,"title":{},"body":{"injectables/LocationService.html":{}}}],["geticonwithiconurl",{"_index":745,"title":{},"body":{"injectables/DetectionMarkerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["geticonwithiconurl(d.icon",{"_index":754,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["geticonwithiconurl(position",{"_index":200,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["geticonwithiconurl(url",{"_index":1356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmediadisplayhtml",{"_index":747,"title":{},"body":{"injectables/DetectionMarkerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmediadisplayhtml(data",{"_index":770,"title":{},"body":{"injectables/DetectionMarkerService.html":{},"miscellaneous/functions.html":{}}}],["getmockboxes",{"_index":662,"title":{},"body":{"injectables/BoxApiService.html":{}}}],["getting",{"_index":1359,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":535,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["getwildlifedata",{"_index":1289,"title":{},"body":{"injectables/WildlifeDetectionApiService.html":{}}}],["getwildlifemarkers",{"_index":189,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["gjl",{"_index":936,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["go",{"_index":1401,"title":{},"body":{"index.html":{}}}],["goodcolor",{"_index":677,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["granted",{"_index":1411,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1467,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":1045,"title":{"guards/LoginGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1046,"title":{},"body":{"guards/LoginGuard.html":{}}}],["guards/login.guard",{"_index":479,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hardcoded",{"_index":1262,"title":{},"body":{"components/SignupComponent.html":{}}}],["hashlocationstrategy",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["headers",{"_index":585,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["height",{"_index":848,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["height:15vh",{"_index":872,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["help",{"_index":1399,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1410,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":862,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["highway",{"_index":98,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["holders",{"_index":1453,"title":{},"body":{"license.html":{}}}],["host",{"_index":1195,"title":{},"body":{"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{}}}],["html",{"_index":63,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["http",{"_index":156,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/GeoadminmapService.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{}}}],["http://localhost:4200",{"_index":1372,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":110,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["httpclient).get('https://nominatim.openstreetmap.org/search?q",{"_index":276,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["httpclientmodule",{"_index":36,"title":{},"body":{"components/AdddeviceComponent.html":{},"modules/AppModule.html":{}}}],["httpevent",{"_index":505,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httphandler",{"_index":498,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httpheaders",{"_index":579,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["httpinterceptor",{"_index":506,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httpoptions",{"_index":584,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["httpoptions).subscribe",{"_index":593,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["httpparams",{"_index":1250,"title":{},"body":{"components/SignupComponent.html":{}}}],["httprequest",{"_index":497,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httpresponse",{"_index":507,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["https://api.synature.ch/api",{"_index":472,"title":{},"body":{"modules/AppModule.html":{}}}],["https://api.synature.ch/api/devices",{"_index":49,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["https://api.synature.ch/api/devices/register",{"_index":56,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["https://api.synature.ch/test/keys",{"_index":46,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["https://api.synature.ch:443/api/accounts",{"_index":574,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["https://api.synature.ch:443/api/public/countries",{"_index":1264,"title":{},"body":{"components/SignupComponent.html":{}}}],["https://api3.geo.admin.ch/rest/services/api/mapserver/find?layer=ch.swisstopo.amtliches",{"_index":933,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["https://ipapi.co/country",{"_index":1268,"title":{},"body":{"components/SignupComponent.html":{}}}],["https://tilecache.rainviewer.com/v2/coverage/0/256/{z}/{x}/{y}/0/0_0.png",{"_index":1215,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["https://tilecache.rainviewer.com/v2/radar/${path}/512/{z}/{x}/{y}/1/0_0.png",{"_index":1223,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["https://www.geo.admin.ch/en/geo",{"_index":891,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["icon",{"_index":145,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/DetectionMarkerService.html":{},"injectables/LocationService.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"interfaces/SearchResult.html":{},"interfaces/WildlifeDetection.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["icon.png",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.src",{"_index":295,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["iconanchor",{"_index":989,"title":{},"body":{"injectables/LocationService.html":{},"miscellaneous/variables.html":{}}}],["icondefault",{"_index":1309,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconretinaurl",{"_index":1311,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconsize",{"_index":987,"title":{},"body":{"injectables/LocationService.html":{},"miscellaneous/variables.html":{}}}],["iconsize/2",{"_index":990,"title":{},"body":{"injectables/LocationService.html":{}}}],["iconurl",{"_index":1312,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["icon}).addto(map",{"_index":977,"title":{},"body":{"injectables/LocationService.html":{}}}],["id",{"_index":367,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/Box.html":{},"interfaces/Country.html":{},"interfaces/Position.html":{}}}],["identifier",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":982,"title":{},"body":{"injectables/LocationService.html":{}}}],["image",{"_index":317,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["img",{"_index":312,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"interfaces/SearchResult.html":{}}}],["img\"|\"audio",{"_index":1179,"title":{},"body":{"interfaces/Position.html":{}}}],["img.alt",{"_index":318,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["img.src",{"_index":314,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["implied",{"_index":1444,"title":{},"body":{"license.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["importance",{"_index":146,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["imports",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["included",{"_index":1438,"title":{},"body":{"license.html":{}}}],["including",{"_index":1419,"title":{},"body":{"license.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/Animal.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"injectables/PublicApiService.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"injectables/RainviewermapService.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"injectables/WildlifeDetectionApiService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":105,"title":{},"body":{"interfaces/Address.html":{},"interfaces/SearchResult.html":{}}}],["individuals",{"_index":1152,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["individuals:${data.total",{"_index":764,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/Animal.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"injectables/PublicApiService.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"injectables/RainviewermapService.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["infrared",{"_index":1204,"title":{},"body":{"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{}}}],["init",{"_index":884,"title":{},"body":{"injectables/GeoadminmapService.html":{},"injectables/RainviewermapService.html":{}}}],["init(control",{"_index":887,"title":{},"body":{"injectables/GeoadminmapService.html":{},"injectables/RainviewermapService.html":{}}}],["inject",{"_index":668,"title":{},"body":{"injectables/BoxApiService.html":{},"components/ManualreportingComponent.html":{},"injectables/PublicApiService.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["injectable",{"_index":111,"title":{"injectables/AuthenticationService.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"injectables/WildlifeDetectionApiService.html":{}},"body":{"interfaces/Address.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"guards/LoginGuard.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{}}}],["injectables",{"_index":531,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"injectables/WildlifeDetectionApiService.html":{},"overview.html":{}}}],["inline",{"_index":1160,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["input",{"_index":292,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"components/LoginComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{}}}],["input.innertext",{"_index":329,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["input.value?.length",{"_index":1154,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["integration",{"_index":901,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["intercept",{"_index":492,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["intercept(req",{"_index":496,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor",{"_index":488,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":491,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:10",{"_index":495,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.service.ts:15",{"_index":499,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.service.ts:46",{"_index":502,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptors",{"_index":489,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interface",{"_index":87,"title":{"interfaces/Address.html":{},"interfaces/Animal.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"interfaces/Country.html":{},"interfaces/Position.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{}},"body":{"interfaces/Address.html":{},"interfaces/Animal.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"interfaces/Country.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"coverage.html":{}}}],["interfaces",{"_index":89,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Animal.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"interfaces/Country.html":{},"interfaces/Position.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"overview.html":{}}}],["interfaces/wildlifedetection",{"_index":806,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["invalidatecache",{"_index":1290,"title":{},"body":{"injectables/WildlifeDetectionApiService.html":{}}}],["is_active",{"_index":354,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["isauthroute",{"_index":493,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["isauthroute(url",{"_index":501,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["islocationpicker",{"_index":242,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["isloggedin",{"_index":536,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["iso3166",{"_index":99,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["karma",{"_index":1391,"title":{},"body":{"index.html":{}}}],["keyboard_arrow_down",{"_index":826,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["keyboard_arrow_up",{"_index":827,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["keys",{"_index":42,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["keyup",{"_index":298,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["kind",{"_index":703,"title":{},"body":{"injectables/BoxMarkerService.html":{},"license.html":{}}}],["l",{"_index":112,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{}}}],["l.circle",{"_index":687,"title":{},"body":{"injectables/BoxMarkerService.html":{},"injectables/LocationService.html":{}}}],["l.circle([lat",{"_index":183,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.circle(latlng",{"_index":978,"title":{},"body":{"injectables/LocationService.html":{}}}],["l.control",{"_index":205,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.control.extend",{"_index":216,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.control.layers",{"_index":888,"title":{},"body":{"injectables/GeoadminmapService.html":{},"injectables/RainviewermapService.html":{}}}],["l.divicon",{"_index":950,"title":{},"body":{"injectables/LocationService.html":{}}}],["l.domevent",{"_index":258,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.domevent.addlistener(input",{"_index":331,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.domevent.preventdefault",{"_index":262,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.domevent.stoppropagation",{"_index":261,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.domutil.create('a",{"_index":311,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.domutil.create('button",{"_index":344,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.domutil.create('div",{"_index":226,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.domutil.create('img",{"_index":294,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.domutil.create('input",{"_index":293,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.domutil.create('label",{"_index":234,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.domutil.create('span",{"_index":320,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.geojson((data",{"_index":937,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["l.icon",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.leafletmouseevent",{"_index":238,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.map",{"_index":204,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.marker",{"_index":222,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/DetectionMarkerService.html":{},"injectables/LocationService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.marker([d.locationlat",{"_index":752,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["l.marker([lat",{"_index":201,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.marker(e.latlng).addto(map",{"_index":240,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.marker(latlng",{"_index":976,"title":{},"body":{"injectables/LocationService.html":{}}}],["l.markeroptions",{"_index":198,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/DetectionMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["l.tilelayer('https://wmts0.geo.admin.ch/1.0.0/ch.bfs.arealstatistik/default/2018/3857/{z}/{x}/{y}.png",{"_index":913,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["l.tilelayer('https://wmts0.geo.admin.ch/1.0.0/ch.swisstopo.swissboundaries3d",{"_index":923,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["l.tilelayer(apipath",{"_index":1224,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["l.tilelayer(path",{"_index":1217,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["label",{"_index":233,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"components/LoginComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{}}}],["label.innerhtml",{"_index":256,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["label.innertext",{"_index":235,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["last",{"_index":725,"title":{},"body":{"injectables/BoxMarkerService.html":{},"components/SignupComponent.html":{}}}],["last_heartbeat",{"_index":654,"title":{},"body":{"interfaces/Box.html":{}}}],["lastheartbeat",{"_index":643,"title":{},"body":{"interfaces/Box.html":{}}}],["lastname",{"_index":570,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["lat",{"_index":147,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["latlng",{"_index":974,"title":{},"body":{"injectables/LocationService.html":{}}}],["leaflet",{"_index":113,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{}}}],["leaflet.markercluster",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["leafletmarkerclustermodule",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":1040,"title":{},"body":{"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["legend",{"_index":62,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["liability",{"_index":1457,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1454,"title":{},"body":{"license.html":{}}}],["license",{"_index":1405,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1420,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1445,"title":{},"body":{"license.html":{}}}],["line",{"_index":869,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["list",{"_index":821,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/SignupComponent.html":{}}}],["literal",{"_index":1069,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["lng",{"_index":1109,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["loadcountries",{"_index":1238,"title":{},"body":{"components/SignupComponent.html":{}}}],["loading",{"_index":1062,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["locate",{"_index":945,"title":{},"body":{"injectables/LocationService.html":{}}}],["locate(map",{"_index":951,"title":{},"body":{"injectables/LocationService.html":{}}}],["location",{"_index":232,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/LocationService.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["location.service",{"_index":137,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["location:${data.locationlat",{"_index":729,"title":{},"body":{"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{}}}],["location_disabled",{"_index":353,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["location_lat",{"_index":656,"title":{},"body":{"interfaces/Box.html":{}}}],["location_long",{"_index":655,"title":{},"body":{"interfaces/Box.html":{}}}],["locationcircle",{"_index":942,"title":{},"body":{"injectables/LocationService.html":{}}}],["locationevent",{"_index":956,"title":{},"body":{"injectables/LocationService.html":{}}}],["locationlat",{"_index":644,"title":{},"body":{"interfaces/Box.html":{},"components/ManualreportingComponent.html":{},"interfaces/Position.html":{},"interfaces/Report.html":{},"interfaces/WildlifeDetection.html":{}}}],["locationlong",{"_index":645,"title":{},"body":{"interfaces/Box.html":{},"components/ManualreportingComponent.html":{},"interfaces/Position.html":{},"interfaces/Report.html":{},"interfaces/WildlifeDetection.html":{}}}],["locationmarker",{"_index":943,"title":{},"body":{"injectables/LocationService.html":{}}}],["locationpicker",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["locationservice",{"_index":136,"title":{"injectables/LocationService.html":{}},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/LocationService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["locationservice).locate(map",{"_index":357,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["locationservice).stoplocaton(map",{"_index":359,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["locationstrategy",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["logged",{"_index":54,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["login",{"_index":481,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["login'},{'name",{"_index":75,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["login(email",{"_index":548,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["login.component.html",{"_index":995,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":994,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":74,"title":{"components/LoginComponent.html":{}},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginguard",{"_index":478,"title":{"guards/LoginGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuard.html":{},"coverage.html":{}}}],["logout",{"_index":537,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["lon",{"_index":148,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["long",{"_index":174,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["m",{"_index":751,"title":{},"body":{"injectables/DetectionMarkerService.html":{},"components/ManualreportingComponent.html":{}}}],["m.feature",{"_index":756,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["m.includes(\"smart_",{"_index":1085,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["makesearchcall",{"_index":269,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["makesearchcall(searchtext).subscribe",{"_index":284,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["male",{"_index":1136,"title":{},"body":{"components/ManualreportingComponent.html":{},"interfaces/Position.html":{},"interfaces/Report.html":{},"interfaces/WildlifeDetection.html":{}}}],["malemales",{"_index":838,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["males",{"_index":766,"title":{},"body":{"injectables/DetectionMarkerService.html":{},"components/ManualreportingComponent.html":{}}}],["mangement",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["manual_icon",{"_index":368,"title":{},"body":{"interfaces/Animal.html":{}}}],["manualreporting",{"_index":1057,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["manualreporting'},{'name",{"_index":77,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["manualreporting.component.html",{"_index":1059,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["manualreporting.component.scss",{"_index":1058,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["manualreportingcomponent",{"_index":76,"title":{"components/ManualreportingComponent.html":{}},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":121,"title":{},"body":{"interfaces/Address.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/BoundingBox.html":{},"components/DetectionlistComponent.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["map'},{'name",{"_index":79,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["map(bs",{"_index":168,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["map(dts",{"_index":191,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["map(name",{"_index":1119,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["map(v",{"_index":1117,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["map(value",{"_index":1114,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["map(wildlifedetectionlist",{"_index":797,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["map.fireevent('location",{"_index":250,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["map.flytobounds([[+result.boundingbox[0",{"_index":325,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["map.flytobounds(e.latlng.tobounds(e.accuracy",{"_index":964,"title":{},"body":{"injectables/LocationService.html":{}}}],["map.locate({watch",{"_index":961,"title":{},"body":{"injectables/LocationService.html":{}}}],["map.once('click",{"_index":264,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["map.removelayer(this.locationcircle",{"_index":972,"title":{},"body":{"injectables/LocationService.html":{}}}],["map.removelayer(this.locationmarker",{"_index":970,"title":{},"body":{"injectables/LocationService.html":{}}}],["map.stoplocate",{"_index":985,"title":{},"body":{"injectables/LocationService.html":{}}}],["mapcomponent",{"_index":78,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapleaf",{"_index":1171,"title":{},"body":{"injectables/MapMarkerService.html":{}}}],["mapmarkerservice",{"_index":154,"title":{"injectables/MapMarkerService.html":{}},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{},"overview.html":{}}}],["mapping",{"_index":705,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["maps.json').subscribe",{"_index":1227,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["mapstatustocolor",{"_index":682,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["mapstatustocolor(battery",{"_index":691,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["maptoseason",{"_index":1324,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["maptoseason(month",{"_index":1357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["margin",{"_index":873,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["margin:auto",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["marker",{"_index":221,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/LocationService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["marker.feature",{"_index":241,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["marker.on('click",{"_index":253,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["marker.remove",{"_index":239,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["marker.service",{"_index":139,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["marker.service.ts",{"_index":92,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["marker.service.ts:10",{"_index":739,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["marker.service.ts:115",{"_index":1172,"title":{},"body":{"injectables/MapMarkerService.html":{}}}],["marker.service.ts:119",{"_index":1170,"title":{},"body":{"injectables/MapMarkerService.html":{}}}],["marker.service.ts:123",{"_index":1169,"title":{},"body":{"injectables/MapMarkerService.html":{}}}],["marker.service.ts:127",{"_index":1168,"title":{},"body":{"injectables/MapMarkerService.html":{}}}],["marker.service.ts:13",{"_index":694,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["marker.service.ts:14",{"_index":696,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["marker.service.ts:15",{"_index":695,"title":{},"body":{"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{}}}],["marker.service.ts:18",{"_index":683,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["marker.service.ts:186",{"_index":1167,"title":{},"body":{"injectables/MapMarkerService.html":{}}}],["marker.service.ts:19",{"_index":741,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["marker.service.ts:23",{"_index":689,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["marker.service.ts:27",{"_index":686,"title":{},"body":{"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{}}}],["marker.service.ts:286",{"_index":1166,"title":{},"body":{"injectables/MapMarkerService.html":{}}}],["marker.service.ts:29",{"_index":1230,"title":{},"body":{"interfaces/SearchResult.html":{}}}],["marker.service.ts:39",{"_index":692,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["marker.service.ts:43",{"_index":108,"title":{},"body":{"interfaces/Address.html":{},"injectables/BoxMarkerService.html":{}}}],["marker.service.ts:58",{"_index":1165,"title":{},"body":{"injectables/MapMarkerService.html":{}}}],["marker.service.ts:72",{"_index":1173,"title":{},"body":{"injectables/MapMarkerService.html":{}}}],["marker.service.ts:95",{"_index":1174,"title":{},"body":{"injectables/MapMarkerService.html":{}}}],["marker_options",{"_index":197,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["marker_options['icon",{"_index":199,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["markeraddtogglehandler",{"_index":236,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["markercluster",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["mat",{"_index":345,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["mat_dialog_data",{"_index":1100,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["matautocompletemodule",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":85,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/Animal.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"injectables/PublicApiService.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"injectables/RainviewermapService.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["matdialogmodule",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":1070,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["matformfieldmodule",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["math.max(timedelta",{"_index":615,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["maticonmodule",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidermodule",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["media",{"_index":1176,"title":{},"body":{"interfaces/Position.html":{},"interfaces/WildlifeDetection.html":{}}}],["mediatype",{"_index":1177,"title":{},"body":{"interfaces/Position.html":{},"interfaces/WildlifeDetection.html":{}}}],["mediatype:string",{"_index":1287,"title":{},"body":{"interfaces/WildlifeDetection.html":{}}}],["merchantability",{"_index":1447,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1423,"title":{},"body":{"license.html":{}}}],["message",{"_index":1285,"title":{},"body":{"interfaces/Token.html":{}}}],["message:string",{"_index":580,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["method",{"_index":786,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{},"interfaces/Position.html":{},"interfaces/Report.html":{},"interfaces/WildlifeDetection.html":{}}}],["method:${data.method",{"_index":763,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["methods",{"_index":22,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"components/SignupComponent.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["methods.filter(m",{"_index":1084,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["minheight",{"_index":812,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["mini",{"_index":346,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["miscellaneous",{"_index":1351,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1406,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1422,"title":{},"body":{"license.html":{}}}],["module",{"_index":392,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":394,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["monitoring",{"_index":1151,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["month",{"_index":1358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["monthtoseasonmap",{"_index":1325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1400,"title":{},"body":{"index.html":{}}}],["multi",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["municipal",{"_index":928,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["my_location",{"_index":361,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["n",{"_index":834,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["n,${data.locationlong",{"_index":730,"title":{},"body":{"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{}}}],["name",{"_index":68,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Animal.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":305,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["names.includes(result.display_name",{"_index":306,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["names.length",{"_index":307,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["names.push(result.display_name",{"_index":310,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["navigate",{"_index":1371,"title":{},"body":{"index.html":{}}}],["nbsp",{"_index":825,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["need",{"_index":50,"title":{},"body":{"components/AdddeviceComponent.html":{},"index.html":{}}}],["new",{"_index":43,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"interfaces/Token.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":285,"title":{},"body":{"interfaces/Address.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["next.handle(req",{"_index":511,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["next.handle(req).pipe(catcherror(err",{"_index":518,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["ng",{"_index":1368,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":23,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["noninfringement",{"_index":1451,"title":{},"body":{"license.html":{}}}],["normal",{"_index":870,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["normalcolor",{"_index":678,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["notice",{"_index":1436,"title":{},"body":{"license.html":{}}}],["nowcast",{"_index":1203,"title":{},"body":{"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{}}}],["null",{"_index":577,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["number",{"_index":60,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/Animal.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{}}}],["o.name.tolowercase().includes(name",{"_index":1147,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["object",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":115,"title":{},"body":{"interfaces/Address.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"interfaces/SearchResult.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["obtaining",{"_index":1413,"title":{},"body":{"license.html":{}}}],["of(err",{"_index":525,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["offspring",{"_index":1092,"title":{},"body":{"components/ManualreportingComponent.html":{},"interfaces/Position.html":{},"interfaces/Report.html":{},"interfaces/WildlifeDetection.html":{}}}],["offspring:${data.female",{"_index":767,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["old",{"_index":649,"title":{},"body":{"interfaces/Box.html":{}}}],["on('locationerror",{"_index":967,"title":{},"body":{"injectables/LocationService.html":{}}}],["on('locationfound",{"_index":965,"title":{},"body":{"injectables/LocationService.html":{}}}],["on:${new",{"_index":760,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["onadd",{"_index":219,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["once('locationfound",{"_index":963,"title":{},"body":{"injectables/LocationService.html":{}}}],["onfileselected",{"_index":1066,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["onfileselected(event",{"_index":1079,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["onsave",{"_index":1067,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["onsubmit",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["opacity",{"_index":917,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["opendialog",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["option.name",{"_index":1148,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["optional",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"components/SignupComponent.html":{},"injectables/WildlifeDetectionApiService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":217,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/DetectionMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["osm_id",{"_index":149,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["osm_type",{"_index":150,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["otherwise",{"_index":1462,"title":{},"body":{"license.html":{}}}],["out",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Token.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overflow",{"_index":861,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["overview",{"_index":1402,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1330,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":876,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{}}}],["page",{"_index":1404,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"components/SignupComponent.html":{},"injectables/WildlifeDetectionApiService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1449,"title":{},"body":{"license.html":{}}}],["password",{"_index":549,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{}}}],["password).then",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{}}}],["past",{"_index":1201,"title":{},"body":{"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{}}}],["path",{"_index":480,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/GeoadminmapService.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"injectables/RainviewermapService.html":{},"interfaces/TimePath.html":{}}}],["pathmatch",{"_index":485,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":908,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["permission",{"_index":1409,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1430,"title":{},"body":{"license.html":{}}}],["person",{"_index":1412,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1431,"title":{},"body":{"license.html":{}}}],["phone",{"_index":736,"title":{},"body":{"interfaces/Country.html":{}}}],["picked",{"_index":251,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["pin_droplocation",{"_index":832,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["ping",{"_index":646,"title":{},"body":{"interfaces/Box.html":{}}}],["place_id",{"_index":142,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["platform",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["please",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["point",{"_index":249,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["popupanchor",{"_index":991,"title":{},"body":{"injectables/LocationService.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1440,"title":{},"body":{"license.html":{}}}],["position",{"_index":194,"title":{"interfaces/Position.html":{}},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["position.locationlat",{"_index":195,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["position.locationlong",{"_index":196,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["post",{"_index":48,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["postcode",{"_index":101,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["primary",{"_index":350,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["private",{"_index":157,"title":{},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["production",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1361,"title":{},"body":{"index.html":{}}}],["promise",{"_index":552,"title":{},"body":{"injectables/AuthenticationService.html":{},"guards/LoginGuard.html":{},"injectables/RainviewermapService.html":{},"interfaces/Token.html":{}}}],["promise((_",{"_index":604,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["promise((resolve",{"_index":589,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/RainviewermapService.html":{},"interfaces/Token.html":{}}}],["properties",{"_index":93,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Animal.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"injectables/PublicApiService.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["provide",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1441,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":152,"title":{},"body":{"interfaces/Address.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"guards/LoginGuard.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["providers",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provisions",{"_index":899,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["public/private",{"_index":41,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["public_key",{"_index":652,"title":{},"body":{"interfaces/Box.html":{}}}],["publicapi",{"_index":1071,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["publicapiservice",{"_index":1072,"title":{"injectables/PublicApiService.html":{}},"body":{"components/ManualreportingComponent.html":{},"injectables/PublicApiService.html":{},"coverage.html":{}}}],["publish",{"_index":1424,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1450,"title":{},"body":{"license.html":{}}}],["radar",{"_index":1196,"title":{},"body":{"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{}}}],["radius",{"_index":184,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/LocationService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["rain",{"_index":1225,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["rainviewer",{"_index":1218,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["rainviewerimagepathresponse",{"_index":1192,"title":{"interfaces/RainViewerImagePathResponse.html":{}},"body":{"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"injectables/RainviewermapService.html":{},"interfaces/TimePath.html":{},"coverage.html":{}}}],["rainviewermapservice",{"_index":1205,"title":{"injectables/RainviewermapService.html":{}},"body":{"injectables/RainviewermapService.html":{},"coverage.html":{}}}],["rainviewerradaobject",{"_index":1199,"title":{"interfaces/RainViewerRadaObject.html":{}},"body":{"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{},"coverage.html":{}}}],["rainviewersatelliteobject",{"_index":1200,"title":{"interfaces/RainViewerSatelliteObject.html":{}},"body":{"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{},"coverage.html":{}}}],["range",{"_index":700,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["rangers",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reactiveformsmodule",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["readcookie",{"_index":538,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["readcookie(name",{"_index":554,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["recordedat",{"_index":1178,"title":{},"body":{"interfaces/Position.html":{},"interfaces/WildlifeDetection.html":{}}}],["redirect",{"_index":998,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["redirectto",{"_index":484,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1403,"title":{},"body":{"index.html":{}}}],["refreshtimeout",{"_index":534,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["refreshtoken",{"_index":539,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["register",{"_index":53,"title":{},"body":{"components/AdddeviceComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["registered_at",{"_index":653,"title":{},"body":{"interfaces/Box.html":{}}}],["registeredat",{"_index":647,"title":{},"body":{"interfaces/Box.html":{}}}],["reject",{"_index":590,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/RainviewermapService.html":{},"interfaces/Token.html":{}}}],["reject(err",{"_index":596,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["reject(false",{"_index":605,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["reload",{"_index":1375,"title":{},"body":{"index.html":{}}}],["report",{"_index":1104,"title":{"interfaces/Report.html":{}},"body":{"components/ManualreportingComponent.html":{},"interfaces/Report.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{}}}],["reportform",{"_index":1063,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["req",{"_index":500,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.clone",{"_index":513,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.url.startswith('https://api.synature.ch",{"_index":512,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.url.startswith('https://api.synature.ch:443/api",{"_index":522,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["request",{"_index":272,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["res",{"_index":172,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{}}}],["reset",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve(data.radar.nowcast[0].path",{"_index":1228,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["resolve(true",{"_index":595,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["responsetype",{"_index":1270,"title":{},"body":{"components/SignupComponent.html":{}}}],["restriction",{"_index":1418,"title":{},"body":{"license.html":{}}}],["result",{"_index":84,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/Animal.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"injectables/PublicApiService.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"injectables/RainviewermapService.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.boundingbox[1",{"_index":327,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["result.boundingbox[2",{"_index":326,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["result.boundingbox[3",{"_index":328,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["result.display_name",{"_index":322,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["result.icon",{"_index":313,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["results",{"_index":86,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/Animal.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"injectables/PublicApiService.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"injectables/RainviewermapService.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resultsdiv",{"_index":302,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["resultsdiv.classlist.add('hidden",{"_index":330,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["resultsdiv.classlist.remove('hidden",{"_index":334,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["resultsdiv.innerhtml",{"_index":304,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["resultsubject",{"_index":268,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["resultsubject.next(res",{"_index":286,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["resultsubject.subscribe(results",{"_index":303,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["return",{"_index":166,"title":{},"body":{"interfaces/Address.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/LocationService.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["returns",{"_index":28,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"components/SignupComponent.html":{},"injectables/WildlifeDetectionApiService.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":576,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["right",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["rights",{"_index":1421,"title":{},"body":{"license.html":{}}}],["road",{"_index":102,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["root",{"_index":153,"title":{},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"guards/LoginGuard.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["root'},{'name",{"_index":71,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["route",{"_index":1053,"title":{},"body":{"guards/LoginGuard.html":{}}}],["router",{"_index":494,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/SignupComponent.html":{}}}],["routermodule",{"_index":475,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":487,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1051,"title":{},"body":{"guards/LoginGuard.html":{}}}],["routes",{"_index":476,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":474,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":847,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["row):active",{"_index":855,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["row):hover",{"_index":852,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["row:not(.example",{"_index":850,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["run",{"_index":1367,"title":{},"body":{"index.html":{}}}],["running",{"_index":1386,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":118,"title":{},"body":{"interfaces/Address.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"components/DetectionlistComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/PublicApiService.html":{},"interfaces/SearchResult.html":{},"injectables/WildlifeDetectionApiService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":122,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["s.name",{"_index":1149,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["samesite=strict",{"_index":637,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["satellite",{"_index":1197,"title":{},"body":{"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{}}}],["save",{"_index":1156,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["scaffolding",{"_index":1378,"title":{},"body":{"index.html":{}}}],["search",{"_index":291,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["searchbar",{"_index":290,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["searchresult",{"_index":141,"title":{"interfaces/SearchResult.html":{}},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["searchtext",{"_index":283,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["searchtext.length",{"_index":280,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["season.mapper.ts",{"_index":1323,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":1150,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["selectedfile",{"_index":1064,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["sell",{"_index":1428,"title":{},"body":{"license.html":{}}}],["serial",{"_index":59,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["serialnumber",{"_index":648,"title":{},"body":{"interfaces/Box.html":{}}}],["serve",{"_index":1369,"title":{},"body":{"index.html":{}}}],["server",{"_index":1366,"title":{},"body":{"index.html":{}}}],["services",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeoadminmapService.html":{}}}],["services/authentication.service",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"guards/LoginGuard.html":{}}}],["services/box",{"_index":129,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["services/detection",{"_index":737,"title":{},"body":{"injectables/DetectionMarkerService.html":{},"coverage.html":{}}}],["services/device",{"_index":879,"title":{},"body":{"injectables/DeviceApiService.html":{},"coverage.html":{}}}],["services/geo",{"_index":892,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["services/geoadminmap.service.ts",{"_index":883,"title":{},"body":{"injectables/GeoadminmapService.html":{},"coverage.html":{}}}],["services/geoadminmap.service.ts:18",{"_index":889,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["services/geoadminmap.service.ts:8",{"_index":886,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["services/interceptors/auth",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["services/map",{"_index":91,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["services/marker",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["services/public",{"_index":1106,"title":{},"body":{"components/ManualreportingComponent.html":{},"injectables/PublicApiService.html":{},"coverage.html":{}}}],["services/rainviewermap.service.ts",{"_index":1206,"title":{},"body":{"injectables/RainviewermapService.html":{},"coverage.html":{}}}],["services/rainviewermap.service.ts:13",{"_index":1211,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["services/rainviewermap.service.ts:20",{"_index":1213,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["services/rainviewermap.service.ts:30",{"_index":1212,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["services/rainviewermap.service.ts:9",{"_index":1209,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["services/terms",{"_index":893,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["services/wildlife",{"_index":133,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{}}}],["setcookie",{"_index":540,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setcookie(name",{"_index":557,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["setcookiesfromdata",{"_index":541,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setcookiesfromdata(data",{"_index":562,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["setheaders",{"_index":514,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["setrefreshtimeout",{"_index":542,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setrefreshtimeout(expirationseconds",{"_index":565,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["setrefreshtimeoutfromcookieifloggedin",{"_index":543,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["settimeout",{"_index":336,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"interfaces/Token.html":{}}}],["shadow.png",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadowsize",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadowurl",{"_index":1313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":1437,"title":{},"body":{"license.html":{}}}],["sharereplay",{"_index":1185,"title":{},"body":{"injectables/PublicApiService.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["sharereplay(1",{"_index":1189,"title":{},"body":{"injectables/PublicApiService.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["sign",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["signal:${new",{"_index":720,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["signup",{"_index":81,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["signup(firstname",{"_index":569,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["signup.component.html",{"_index":1233,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.scss",{"_index":1232,"title":{},"body":{"components/SignupComponent.html":{}}}],["signupcomponent",{"_index":80,"title":{"components/SignupComponent.html":{}},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupform",{"_index":1235,"title":{},"body":{"components/SignupComponent.html":{}}}],["size",{"_index":1037,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["slice(1).join",{"_index":723,"title":{},"body":{"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{}}}],["software",{"_index":1414,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/Animal.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"injectables/PublicApiService.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"injectables/RainviewermapService.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"injectables/WildlifeDetectionApiService.html":{},"index.html":{}}}],["species",{"_index":785,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{}}}],["species.name",{"_index":1145,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["spinner",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"components/ManualreportingComponent.html":{}}}],["spring",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../animaltoicon.ts",{"_index":1353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.component.ts",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mediadisplay.ts",{"_index":1354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mont",{"_index":1355,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":473,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/adddevice/adddevice.component.ts",{"_index":10,"title":{},"body":{"components/AdddeviceComponent.html":{},"coverage.html":{}}}],["src/app/components/adddevice/adddevice.component.ts:16",{"_index":26,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["src/app/components/adddevice/adddevice.component.ts:20",{"_index":27,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["src/app/components/detectionlist/detectionlist.component.ts",{"_index":771,"title":{},"body":{"components/DetectionlistComponent.html":{},"coverage.html":{}}}],["src/app/components/detectionlist/detectionlist.component.ts:22",{"_index":791,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["src/app/components/detectionlist/detectionlist.component.ts:23",{"_index":794,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["src/app/components/detectionlist/detectionlist.component.ts:24",{"_index":795,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["src/app/components/detectionlist/detectionlist.component.ts:26",{"_index":788,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["src/app/components/detectionlist/detectionlist.component.ts:33",{"_index":800,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["src/app/components/detectionlist/detectionlist.component.ts:35",{"_index":781,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["src/app/components/detectionlist/detectionlist.component.ts:38",{"_index":783,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":993,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:13",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":1000,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:26",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:34",{"_index":1004,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/manualreporting/manualreporting.component.ts",{"_index":1056,"title":{},"body":{"components/ManualreportingComponent.html":{},"coverage.html":{}}}],["src/app/components/manualreporting/manualreporting.component.ts:18",{"_index":1094,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["src/app/components/manualreporting/manualreporting.component.ts:31",{"_index":1086,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["src/app/components/manualreporting/manualreporting.component.ts:32",{"_index":1099,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["src/app/components/manualreporting/manualreporting.component.ts:33",{"_index":1096,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["src/app/components/manualreporting/manualreporting.component.ts:35",{"_index":1087,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["src/app/components/manualreporting/manualreporting.component.ts:37",{"_index":1073,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["src/app/components/manualreporting/manualreporting.component.ts:44",{"_index":1095,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["src/app/components/manualreporting/manualreporting.component.ts:45",{"_index":1080,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["src/app/components/manualreporting/manualreporting.component.ts:49",{"_index":1078,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["src/app/components/manualreporting/manualreporting.component.ts:59",{"_index":1082,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["src/app/components/manualreporting/manualreporting.component.ts:85",{"_index":1075,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["src/app/components/manualreporting/manualreporting.component.ts:89",{"_index":1077,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["src/app/components/map/map.component.ts",{"_index":1306,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/signup/signup.component.ts",{"_index":1231,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/components/signup/signup.component.ts:14",{"_index":1249,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:20",{"_index":1239,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:24",{"_index":1248,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:26",{"_index":1245,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:34",{"_index":1246,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:46",{"_index":1244,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:57",{"_index":1240,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:75",{"_index":1247,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:79",{"_index":1242,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/guards/login.guard.ts",{"_index":1047,"title":{},"body":{"guards/LoginGuard.html":{},"coverage.html":{}}}],["src/app/guards/login.guard.ts:11",{"_index":1052,"title":{},"body":{"guards/LoginGuard.html":{}}}],["src/app/guards/login.guard.ts:9",{"_index":1048,"title":{},"body":{"guards/LoginGuard.html":{}}}],["src/app/interfaces/animal",{"_index":1103,"title":{},"body":{"components/ManualreportingComponent.html":{},"injectables/PublicApiService.html":{}}}],["src/app/interfaces/animal.ts",{"_index":364,"title":{},"body":{"interfaces/Animal.html":{},"coverage.html":{}}}],["src/app/interfaces/box",{"_index":124,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["src/app/interfaces/box.ts",{"_index":639,"title":{},"body":{"interfaces/Box.html":{},"coverage.html":{}}}],["src/app/interfaces/country",{"_index":1251,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/interfaces/country.ts",{"_index":732,"title":{},"body":{"interfaces/Country.html":{},"coverage.html":{}}}],["src/app/interfaces/position.ts",{"_index":1175,"title":{},"body":{"interfaces/Position.html":{},"coverage.html":{}}}],["src/app/interfaces/rainviewerimagepathresponse",{"_index":1214,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["src/app/interfaces/rainviewerimagepathresponse.ts",{"_index":1193,"title":{},"body":{"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{},"coverage.html":{}}}],["src/app/interfaces/report",{"_index":1105,"title":{},"body":{"components/ManualreportingComponent.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["src/app/interfaces/report.ts",{"_index":1229,"title":{},"body":{"interfaces/Report.html":{},"coverage.html":{}}}],["src/app/interfaces/wildlifedetection",{"_index":126,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/DetectionMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["src/app/interfaces/wildlifedetection.ts",{"_index":1286,"title":{},"body":{"interfaces/WildlifeDetection.html":{},"coverage.html":{}}}],["src/app/services/api",{"_index":659,"title":{},"body":{"injectables/BoxApiService.html":{},"components/DetectionlistComponent.html":{},"injectables/DeviceApiService.html":{},"injectables/GeoadminmapService.html":{},"components/ManualreportingComponent.html":{},"injectables/PublicApiService.html":{},"injectables/RainviewermapService.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{}}}],["src/app/services/authentication.service",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["src/app/services/authentication.service.ts",{"_index":532,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{},"coverage.html":{}}}],["src/app/services/authentication.service.ts:100",{"_index":566,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:107",{"_index":555,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:119",{"_index":560,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:15",{"_index":545,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:19",{"_index":575,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:20",{"_index":578,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:22",{"_index":550,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:35",{"_index":572,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:48",{"_index":553,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:55",{"_index":546,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:59",{"_index":547,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:63",{"_index":556,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:81",{"_index":568,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:91",{"_index":564,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/interceptors/auth",{"_index":490,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["src/app/services/location.service.ts",{"_index":941,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["src/app/services/location.service.ts:12",{"_index":960,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/services/location.service.ts:13",{"_index":959,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/services/location.service.ts:15",{"_index":952,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/services/location.service.ts:24",{"_index":957,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/services/location.service.ts:42",{"_index":954,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/services/location.service.ts:48",{"_index":949,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/services/location.service.ts:8",{"_index":948,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/services/marker",{"_index":90,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/BoxMarkerService.html":{},"injectables/DetectionMarkerService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["src/app/utils/animaltoicon",{"_index":746,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["src/app/utils/animaltoicon.ts",{"_index":1320,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/utils/mediadisplay",{"_index":748,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["src/app/utils/mediadisplay.ts",{"_index":1321,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/utils/mont",{"_index":1322,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1328,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1360,"title":{"index.html":{},"license.html":{}},"body":{}}],["startwith",{"_index":1101,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["state",{"_index":103,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"components/DetectionlistComponent.html":{},"guards/LoginGuard.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["state('collapsed",{"_index":809,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["state('expanded",{"_index":813,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["statements",{"_index":1300,"title":{},"body":{"coverage.html":{}}}],["stoplocaton",{"_index":946,"title":{},"body":{"injectables/LocationService.html":{}}}],["stoplocaton(map",{"_index":953,"title":{},"body":{"injectables/LocationService.html":{}}}],["stored",{"_index":1383,"title":{},"body":{"index.html":{}}}],["strassenverzeichnis&searchtext=${searchstring}&searchfield=label&returngeometry=true&contains=false&geometryformat=geojson&sr=4326",{"_index":934,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["string",{"_index":107,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Animal.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"injectables/DetectionMarkerService.html":{},"injectables/GeoadminmapService.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"injectables/PublicApiService.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"injectables/WildlifeDetectionApiService.html":{},"miscellaneous/variables.html":{}}}],["string.fromcodepoint(127397",{"_index":1280,"title":{},"body":{"components/SignupComponent.html":{}}}],["stroke",{"_index":979,"title":{},"body":{"injectables/LocationService.html":{}}}],["strokecolor",{"_index":176,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["style",{"_index":802,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["style({height",{"_index":810,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["subject",{"_index":116,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/GeoadminmapService.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"license.html":{}}}],["subject.next(searchtext",{"_index":300,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["subject.pipe",{"_index":278,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["sublicense",{"_index":1426,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":282,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["subscription",{"_index":117,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["substantial",{"_index":1439,"title":{},"body":{"license.html":{}}}],["success",{"_index":524,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{}}}],["summer",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":828,"title":{},"body":{"components/DetectionlistComponent.html":{},"modules.html":{}}}],["svg",{"_index":986,"title":{},"body":{"injectables/LocationService.html":{},"modules.html":{}}}],["swiss",{"_index":927,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["symbol",{"_index":865,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["synature",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"license.html":{}}}],["table",{"_index":843,"title":{},"body":{"components/DetectionlistComponent.html":{},"coverage.html":{}}}],["tabledetection",{"_index":857,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1329,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":1102,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["td",{"_index":858,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["test",{"_index":1389,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1396,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1388,"title":{},"body":{"index.html":{}}}],["text",{"_index":270,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["text\"}).subscribe",{"_index":1271,"title":{},"body":{"components/SignupComponent.html":{}}}],["text.length",{"_index":273,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["this._addlocationinput",{"_index":164,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["this._addsearchbar",{"_index":163,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["this.addinputtoggle",{"_index":162,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["this.addresssearch('salvenachstrasse",{"_index":932,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["this.animals",{"_index":1190,"title":{},"body":{"injectables/PublicApiService.html":{}}}],["this.apiurl",{"_index":591,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.authservice.gettoken",{"_index":517,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["this.authservice.isloggedin",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/SignupComponent.html":{}}}],["this.authservice.login(email",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.refreshtoken().then",{"_index":523,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["this.authservice.setrefreshtimeoutfromcookieifloggedin",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.signup(firstname",{"_index":1258,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.boxapi.getboxes().pipe",{"_index":167,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["this.boxmarker.createmarkers(bs",{"_index":169,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["this.boxradius",{"_index":711,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["this.client.get('/assets/boc_get.json",{"_index":674,"title":{},"body":{"injectables/BoxApiService.html":{}}}],["this.client.get(`${this.url}/data/`).pipe",{"_index":1296,"title":{},"body":{"injectables/WildlifeDetectionApiService.html":{}}}],["this.client.get(`${this.url}/devices",{"_index":671,"title":{},"body":{"injectables/BoxApiService.html":{}}}],["this.client.get(`${this.url}/public/animals`).pipe",{"_index":1191,"title":{},"body":{"injectables/PublicApiService.html":{}}}],["this.client.get(`${this.url}/public/methods`).pipe",{"_index":1188,"title":{},"body":{"injectables/PublicApiService.html":{}}}],["this.client.post(`${this.url}/data/manual",{"_index":1297,"title":{},"body":{"injectables/WildlifeDetectionApiService.html":{}}}],["this.columnstodisplay",{"_index":792,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["this.countries",{"_index":1266,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.countries.find(country",{"_index":1273,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.createmarker(box",{"_index":707,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["this.createmarker(d",{"_index":750,"title":{},"body":{"injectables/DetectionMarkerService.html":{}}}],["this.criticalcolor",{"_index":717,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["this.data",{"_index":670,"title":{},"body":{"injectables/BoxApiService.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["this.detectionapi.createdetection(report).subscribe(m",{"_index":1143,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.detectionapi.getwildlifedata().pipe",{"_index":190,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["this.detectionmarker.createmarkers(dts",{"_index":192,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["this.dialogref.close(m",{"_index":1144,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.dialogref.open(manualreportingcomponent",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fb.group",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.filter(name",{"_index":1120,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.filteredoptions",{"_index":1112,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.getapiimagepath().then(path",{"_index":1221,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["this.getcurrentlocation",{"_index":1267,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.geticon",{"_index":975,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.goodcolor",{"_index":715,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["this.http",{"_index":209,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["this.http.get('https://api.rainviewer.com/public/weather",{"_index":1226,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["this.http.get(apicountryurl).subscribe((res",{"_index":1265,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.http.get(apiurl",{"_index":1269,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.http.get(path).subscribe(data",{"_index":935,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["this.http.get(this.mockdataboxpath).subscribe((res",{"_index":170,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["this.http.get(this.poispath).subscribe((res",{"_index":193,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["this.httpclient.get(url",{"_index":608,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.httpclient.post(url",{"_index":592,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.isauthroute(req.url",{"_index":510,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["this.isloggedin",{"_index":609,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.loadcountries",{"_index":1252,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.loading",{"_index":1142,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.locationcircle",{"_index":971,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.locationmarker",{"_index":969,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.locationmarker._icon.classlist.add('disabled",{"_index":984,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.locationmarker._icon.classlist.remove('disabled",{"_index":983,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.locationservice",{"_index":213,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["this.loginform.value.email",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.mapstatustocolor(box.batterystatus",{"_index":712,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["this.methods",{"_index":1187,"title":{},"body":{"injectables/PublicApiService.html":{}}}],["this.normalcolor",{"_index":716,"title":{},"body":{"injectables/BoxMarkerService.html":{}}}],["this.options",{"_index":274,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["this.publicapi.getanimals().pipe(tap(d",{"_index":1097,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.publicapi.getdetectionmethods().pipe(map(methods",{"_index":1083,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.readcookie('refreshtoken",{"_index":606,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.readcookie('token",{"_index":602,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.readcookie('token').length",{"_index":603,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.redirect",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.refreshtimeout",{"_index":625,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.refreshtoken",{"_index":627,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.reportform.get(\"location\")?.setvalue(this.data",{"_index":1122,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.reportform.get(\"species\")?.valuechanges.pipe",{"_index":1113,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.reportform.value",{"_index":1124,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.router.navigate",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.router.navigate(['/login",{"_index":527,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["this.router.parseurl('/login",{"_index":1055,"title":{},"body":{"guards/LoginGuard.html":{}}}],["this.selectedfile",{"_index":1110,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.setcookie('refreshtoken",{"_index":600,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.setcookie('token",{"_index":599,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.setcookie('tokenexpires",{"_index":622,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.setcookiesfromdata(data",{"_index":594,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.setrefreshtimeout(data.expiresin",{"_index":624,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.setrefreshtimeout(timedelta",{"_index":616,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["this.signupform.controls['country'].setvalue(currentcountry?.id",{"_index":1275,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.controls['country'].setvalue(this.countries.find(country",{"_index":1276,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.value.country",{"_index":1257,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.value.email",{"_index":1253,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.value.firstname",{"_index":1255,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.value.lastname",{"_index":1256,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.value.password",{"_index":1254,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.species",{"_index":1098,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.species.filter(o",{"_index":1146,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.species.slice",{"_index":1121,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["this.updatelocation(e",{"_index":966,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.wildlife.getwildlifedata().pipe",{"_index":796,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["tile",{"_index":1216,"title":{},"body":{"injectables/RainviewermapService.html":{}}}],["tilearealstatistik",{"_index":912,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["tilegemeinde",{"_index":922,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["time",{"_index":784,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{}}}],["timedelta",{"_index":611,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["timepath",{"_index":1202,"title":{"interfaces/TimePath.html":{}},"body":{"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{},"coverage.html":{}}}],["title",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":672,"title":{},"body":{"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"components/SignupComponent.html":{}}}],["toggle",{"_index":229,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["token",{"_index":563,"title":{"interfaces/Token.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{},"coverage.html":{}}}],["token/refresh",{"_index":607,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["tooltipanchor",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":874,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["topleft",{"_index":267,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["topright",{"_index":218,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["tort",{"_index":1461,"title":{},"body":{"license.html":{}}}],["tos",{"_index":890,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["total",{"_index":787,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{},"interfaces/Position.html":{},"interfaces/Report.html":{},"interfaces/WildlifeDetection.html":{}}}],["tr.example",{"_index":845,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["tr.tabledetection",{"_index":849,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["transition",{"_index":803,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["transition('expanded",{"_index":814,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/AppComponent.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["trigger",{"_index":804,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["trigger('detailexpand",{"_index":808,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["true",{"_index":243,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"interfaces/BoundingBox.html":{},"injectables/LocationService.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":981,"title":{},"body":{"injectables/LocationService.html":{}}}],["tslib",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["turnlocationoff",{"_index":358,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["turnlocationon",{"_index":355,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["type",{"_index":109,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Animal.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"interfaces/Box.html":{},"injectables/BoxApiService.html":{},"injectables/BoxMarkerService.html":{},"interfaces/Country.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/Position.html":{},"injectables/PublicApiService.html":{},"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"injectables/RainviewermapService.html":{},"interfaces/Report.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/TimePath.html":{},"interfaces/Token.html":{},"interfaces/WildlifeDetection.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1115,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["undefined",{"_index":958,"title":{},"body":{"injectables/LocationService.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["unit",{"_index":1387,"title":{},"body":{"index.html":{}}}],["up",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["updatelocation",{"_index":947,"title":{},"body":{"injectables/LocationService.html":{}}}],["updatelocation(e",{"_index":955,"title":{},"body":{"injectables/LocationService.html":{}}}],["url",{"_index":503,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthenticationService.html":{},"injectables/BoxApiService.html":{},"injectables/PublicApiService.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{},"miscellaneous/functions.html":{}}}],["url.includes('/login",{"_index":528,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["url.includes('signup",{"_index":529,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["url.includes('token/refresh",{"_index":530,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["urltree",{"_index":1054,"title":{},"body":{"guards/LoginGuard.html":{}}}],["usage",{"_index":931,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["use",{"_index":896,"title":{},"body":{"injectables/GeoadminmapService.html":{},"index.html":{},"license.html":{}}}],["use.html",{"_index":894,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["useclass",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":55,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["user_id",{"_index":650,"title":{},"body":{"interfaces/Box.html":{}}}],["users",{"_index":907,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["usevalue",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":45,"title":{},"body":{"components/AdddeviceComponent.html":{}}}],["v.tolowercase",{"_index":1118,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["validators",{"_index":34,"title":{},"body":{"components/AdddeviceComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["validators.required",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["value",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/BoxMarkerService.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{},"miscellaneous/variables.html":{}}}],["value?.name",{"_index":1116,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["values",{"_index":1123,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["values.comment",{"_index":1141,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["values.females",{"_index":1139,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["values.location.lat",{"_index":1133,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["values.location.lng",{"_index":1134,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["values.males",{"_index":1137,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["values.method",{"_index":1130,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["values.offspring",{"_index":1140,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["values.species.id",{"_index":1129,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["values.total",{"_index":1135,"title":{},"body":{"components/ManualreportingComponent.html":{}}}],["var",{"_index":66,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"interfaces/BoundingBox.html":{},"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{}}}],["variable",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1473,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1198,"title":{},"body":{"interfaces/RainViewerImagePathResponse.html":{},"interfaces/RainViewerRadaObject.html":{},"interfaces/RainViewerSatelliteObject.html":{},"interfaces/TimePath.html":{},"index.html":{}}}],["via",{"_index":698,"title":{},"body":{"injectables/BoxMarkerService.html":{},"index.html":{}}}],["village",{"_index":104,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["void",{"_index":30,"title":{},"body":{"components/AdddeviceComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/BoundingBox.html":{},"components/DetectionlistComponent.html":{},"injectables/GeoadminmapService.html":{},"injectables/LocationService.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"injectables/RainviewermapService.html":{},"interfaces/SearchResult.html":{},"components/SignupComponent.html":{},"interfaces/Token.html":{},"injectables/WildlifeDetectionApiService.html":{}}}],["warranties",{"_index":1446,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1442,"title":{},"body":{"license.html":{}}}],["web",{"_index":903,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["weight",{"_index":867,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["welcome",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["whether",{"_index":1458,"title":{},"body":{"license.html":{}}}],["whitesmoke",{"_index":854,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["width",{"_index":844,"title":{},"body":{"components/DetectionlistComponent.html":{},"components/LoginComponent.html":{},"components/ManualreportingComponent.html":{},"components/SignupComponent.html":{}}}],["wildlife",{"_index":782,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["wildlifedata",{"_index":779,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["wildlifedetection",{"_index":125,"title":{"interfaces/WildlifeDetection.html":{}},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/DetectionMarkerService.html":{},"components/DetectionlistComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"interfaces/WildlifeDetection.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{}}}],["wildlifedetectionapiservice",{"_index":132,"title":{"injectables/WildlifeDetectionApiService.html":{}},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"components/DetectionlistComponent.html":{},"components/ManualreportingComponent.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{},"injectables/WildlifeDetectionApiService.html":{},"coverage.html":{}}}],["wildlifedetectionlist.map(b=>({...b",{"_index":798,"title":{},"body":{"components/DetectionlistComponent.html":{}}}],["window.location.reload",{"_index":601,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Token.html":{}}}],["winter",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1417,"title":{},"body":{"license.html":{}}}],["wälder",{"_index":921,"title":{},"body":{"injectables/GeoadminmapService.html":{}}}],["x",{"_index":106,"title":{},"body":{"interfaces/Address.html":{},"interfaces/BoundingBox.html":{},"injectables/MapMarkerService.html":{},"interfaces/SearchResult.html":{}}}],["yes",{"_index":561,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["zone.js",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdddeviceComponent.html":{"url":"components/AdddeviceComponent.html","title":"component - AdddeviceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdddeviceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/adddevice/adddevice.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adddevice\n            \n\n            \n                styleUrls\n                ./adddevice.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./adddevice.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/adddevice/adddevice.component.ts:16\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/adddevice/adddevice.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\n\n\n// 1. Create ECDSA public/private keys for the new device (you can do that using GET https://api.synature.ch/test/keys)\n// 2. Create a new device using POST https://api.synature.ch/api/devices/ (need to be admin)\n// 3. Register device for logged in user using POST https://api.synature.ch/api/devices/register\n\n\n@Component({\n  selector: 'app-adddevice',\n  templateUrl: './adddevice.component.html',\n  styleUrls: ['./adddevice.component.scss']\n})\nexport class AdddeviceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n\n\n    \n\n    \n        \n  \n    \n      Register a new device\n      \n        \n          \n            Serial Number\n            \n          \n        \n\n        Cancel\n        Register\n      \n    \n  \n\n    \n\n    \n                \n                    ./adddevice.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Register a new device                                    Serial Number                                      Cancel        Register            '\n    var COMPONENTS = [{'name': 'AdddeviceComponent', 'selector': 'app-adddevice'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetectionlistComponent', 'selector': 'app-detectionlist'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManualreportingComponent', 'selector': 'app-manualreporting'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdddeviceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/marker-services/map-marker.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        country_code\n                                \n                                \n                                        county\n                                \n                                \n                                        highway\n                                \n                                \n                                        ISO3166-2lvl4\n                                \n                                \n                                        postcode\n                                \n                                \n                                        road\n                                \n                                \n                                        state\n                                \n                                \n                                        village\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [x: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/services/marker-services/map-marker.service.ts:43\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country_code\n                                    \n                                \n                                \n                                    \n                                        country_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        county\n                                    \n                                \n                                \n                                    \n                                        county:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highway\n                                    \n                                \n                                \n                                    \n                                        highway:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ISO3166-2lvl4\n                                    \n                                \n                                \n                                    \n                                        ISO3166-2lvl4:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postcode\n                                    \n                                \n                                \n                                    \n                                        postcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        road\n                                    \n                                \n                                \n                                    \n                                        road:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        village\n                                    \n                                \n                                \n                                    \n                                        village:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport * as L from 'leaflet'\nimport { debounceTime, Observable, of, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { Box } from 'src/app/interfaces/box';\nimport { WildlifeDetection } from 'src/app/interfaces/WildlifeDetection';\n\nimport { BoxApiService } from '../api-services/box-api/box-api.service';\nimport { WildlifeDetectionApiService } from '../api-services/wildlife-detection-api/wildlife-detection-api.service';\nimport { LocationService } from '../location.service';\nimport { BoxMarkerService } from './box-marker.service';\nimport { DetectionMarkerService } from './detection-marker.service';\n\ninterface SearchResult {\n    place_id: number;\n    address: Address;\n    boundingbox: BoundingBox;\n    class: string;\n    display_name: string;\n    icon: string;\n    importance: number;\n    lat: string;\n    lon: string;\n    osm_id: number;\n    osm_type: string;\n    type: string;\n    [x: string]: any;\n}\n\ninterface Address {\n    \"ISO3166-2lvl4\": string;\n    city: string;\n    country: string;\n    country_code: string;\n    county: string;\n    highway: string;\n    postcode: string;\n    road: string;\n    state: string;\n    village: string;\n    [x: string]: any;\n}\n\ninterface BoundingBox {\n    0: string;\n    1: string;\n    2: string;\n    3: string;\n}\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MapMarkerService {\n\n    constructor(private http: HttpClient,\n        private locationService: LocationService,\n        private boxApi: BoxApiService,\n        private boxMarker: BoxMarkerService,\n        private detectionApi: WildlifeDetectionApiService,\n        private detectionMarker: DetectionMarkerService) {\n        this.addInputToggle();\n        this._addSearchBar();\n        this._addLocationInput();\n\n    }\n\n    getBoxMarkers(): Observable[]> {\n        return this.boxApi.getBoxes().pipe(\n            map(bs => this.boxMarker.createMarkers(bs))\n        );\n\n\n        /*this.http.get(this.mockDataBoxPath).subscribe((res: Box[]) => {\n            for (const box of res) {\n                const lat = box.location_lat;\n                const long = box.location_long;\n                let strokeColor: string = '#ff3333';\n                if (box.battery_status > 75) {\n                    strokeColor = '#305D63';\n                } else if (box.battery_status > 33) {\n                    strokeColor = '#5E8B7E'\n                }\n                L.circle([lat, long], { radius: 3000, color: strokeColor })\n                    .bindPopup(String(boxPopup(box)))\n                    .addTo(map);\n            }\n        });*/\n    }\n\n    getWildlifeMarkers(): Observable[]> {\n        return this.detectionApi.getwildlifeData().pipe(\n            map(dts => this.detectionMarker.createMarkers(dts))\n        );\n\n        /* this.http.get(this.poisPath).subscribe((res: Position[]): void => {\n            for (const position of res) {\n                const lat = position.locationLat;\n                const long = position.locationLong;\n\n                let marker_options: L.MarkerOptions = {};\n\n                marker_options['icon'] = getIconWithIconUrl(position);\n                L.marker([lat, long], marker_options)\n                    .bindPopup(String(positionPopup(position)))\n                    .addTo(map);\n            }\n        });*/\n    }\n\n    allowInputMarkers(map: L.Map): void {\n        // (L.control as any).toggleInput().addTo(map);\n    }\n\n    addSearchBar(mapLeaf: L.Map) {\n        (L.control as any).searchbar({ httpClient: this.http }).addTo(mapLeaf);\n    }\n\n    addLocationInput(map: L.Map) {\n        (L.control as any).locationInput({ locationService: this.locationService }).addTo(map);\n    }\n\n    private addInputToggle(): any {\n\n        (L.Control as any).ToggleInput = L.Control.extend({\n            options: {\n                position: 'topright',\n            },\n            onAdd: function (map: L.Map) {\n\n                let marker: L.Marker;\n                let checked = false;\n                var controlDiv = L.DomUtil.create('div');\n                var controlUI = L.DomUtil.create('div', 'leaflet-control-toggle', controlDiv);\n\n                controlUI.title = 'Choose Location';\n\n                var label = L.DomUtil.create('label', 'label', controlUI);\n                label.innerText = '+';\n\n                const markerAddToggleHandler = (e: L.LeafletMouseEvent) => {\n                    if (marker) marker.remove();\n                    marker = L.marker(e.latlng).addTo(map);\n                    marker.feature = { properties: { isLocationPicker: true }, type: \"Feature\", geometry: { coordinates: [e.latlng.lat, e.latlng.lng], type: 'Point' } };\n\n                    map.fireEvent('location-picked', e.latlng);\n\n                    marker.on('click', (e: L.LeafletMouseEvent) => {\n                        marker.remove();\n                        controlUI.classList.remove('leaflet-control-toggle-active');\n                        label.innerText = '+';\n                    });\n                    checked = false;\n                    label.innerText = '';\n                    label.innerHTML = '&check;';\n                }\n\n                L.DomEvent\n                    .addListener(label, 'click', L.DomEvent.stopPropagation)\n                    .addListener(label, 'click', L.DomEvent.preventDefault)\n                    .addListener(label, 'click', function (e: any) {\n                        if (!checked) {\n                            checked = true;\n                            controlUI.classList.add('leaflet-control-toggle-active')\n                            map.once('click', markerAddToggleHandler);\n                            label.innerText = '+';\n                        }\n                        checked = !checked\n                    });\n\n\n                return controlDiv;\n            }\n        });\n\n        (L.control as any).toggleInput = function (options: any) {\n            return new (L.Control as any).ToggleInput(options);\n        };\n\n    }\n\n    _addSearchBar() {\n        (L.Control as any).Searchbar = L.Control.extend({\n            options: {\n                position: 'topleft',\n            },\n\n            onAdd: function (map: L.Map) {\n\n                let subject = new Subject();\n                let subscription = new Subscription();\n                let resultSubject = new Subject();\n\n                let makeSearchCall = (text: string): Observable => {\n                    console.log('Get Request')\n                    if (text.length > 0) {\n                        return ((this.options as any).httpClient as HttpClient).get('https://nominatim.openstreetmap.org/search?q=' + text + '&format=json&polygon=1&addressdetails=1')\n                    } else {\n                        return of([]);\n                    }\n                };\n\n                subscription = subject.pipe(\n                    filter(searchText => searchText.length > 2),\n                    debounceTime(1100),\n                    distinctUntilChanged(),\n                ).subscribe(\n                    (searchText: string) => {\n                        makeSearchCall(searchText).subscribe({\n                            next: (res: SearchResult[]) => {\n                                resultSubject.next(res);\n                            },\n                            error: (err: any) => {\n                                console.error(err);\n                            }\n                        }\n                        );\n                    }\n                );\n\n                var controlDiv = L.DomUtil.create('div');\n                var controlUI = L.DomUtil.create('div', 'leaflet-control-searchbar', controlDiv);\n                controlUI.title = 'Search';\n                var input = L.DomUtil.create('input', 'searchbar-input', controlUI);\n                var icon = L.DomUtil.create('img', 'searchbar-icon', controlUI);\n                icon.src = 'assets/icons/search.png';\n                L.DomEvent\n                    .addListener(input, 'keyup', L.DomEvent.stopPropagation)\n                    .addListener(input, 'keyup', L.DomEvent.preventDefault)\n                    .addListener(input, 'keyup', function (e: any) {\n                        const searchText = e.target.value;\n                        subject.next(searchText);\n                    });\n\n                var blur_time: any;\n                var resultsDiv = L.DomUtil.create('div', 'search-results', controlUI);\n                resultSubject.subscribe(results => {\n                    resultsDiv.innerHTML = '';\n                    let names: string[] = [];\n                    for (const result of results) {\n                        if (names.includes(result.display_name) || names.length == 5) {\n                            continue;\n                        }\n                        names.push(result.display_name);\n                        let a = L.DomUtil.create('a', 'search-result', resultsDiv);\n                        let img = L.DomUtil.create('img', 'search-result-img', a);\n                        if (result.icon) {\n                            img.src = result.icon;\n                        } else {\n                            img.src = \"data:image/svg+xml;charset=utf8,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%3E%3C/svg%3E\"; //empty image\n                            img.alt = ''\n                        }\n                        let a_span = L.DomUtil.create('span', '', a);\n                        a_span.innerText = result.display_name;\n                        L.DomEvent\n                            .addListener(a, 'click', L.DomEvent.stopPropagation)\n                            .addListener(a, 'click', L.DomEvent.preventDefault)\n                            .addListener(a_span, 'click', function (e: any) {\n                                map.flyToBounds([[+result.boundingbox[0], +result.boundingbox[2]], [+result.boundingbox[1], +result.boundingbox[3]]]);\n                                input.innerText = result.display_name;\n                                resultsDiv.classList.add('hidden');\n                            });\n                    }\n                });\n                L.DomEvent.addListener(input, 'focus', function (e: any) {\n                    if (blur_time) clearTimeout(blur_time);\n                    resultsDiv.classList.remove('hidden');\n                });\n                L.DomEvent.addListener(input, 'blur', function (e: any) {\n                    blur_time = setTimeout(() => { resultsDiv.classList.add('hidden'); }, 100);\n\n                })\n                return controlDiv;\n            }\n        });\n\n        (L.control as any).searchbar = function (options: any) {\n            return new (L.Control as any).Searchbar(options);\n        };\n    }\n\n    _addLocationInput() {\n        (L.Control as any).LocationInput = L.Control.extend({\n            options: {\n                position: 'bottomright',\n            },\n            onAdd: function (map: L.Map) {\n\n                var controlDiv = L.DomUtil.create('div');\n                var controlUI = L.DomUtil.create('div', 'leaflet-control-toggle', controlDiv);\n                controlUI.title = 'Add Data';\n                var button = L.DomUtil.create('button', 'mat-mini-fab', controlUI);\n                button.setAttribute('mat-mini-fab', '');\n                button.setAttribute('color', 'primary');\n                button.setAttribute('aria-label', 'Get User Location');\n                button.innerHTML = 'location_disabled';\n\n                var is_active = false;\n                const turnLocationOn = () => {\n                    ((this.options as any).locationService as LocationService).locate(map);\n                }\n                const turnLocationOff = () => {\n                    ((this.options as any).locationService as LocationService).stopLocaton(map);\n                }\n\n                L.DomEvent\n                    .addListener(button, 'click', L.DomEvent.stopPropagation)\n                    .addListener(button, 'click', L.DomEvent.preventDefault)\n                    .addListener(button, 'click', function (e: any) {\n                        if (!is_active) {\n                            is_active = true;\n                            turnLocationOn();\n                            button.innerHTML = 'my_location';\n                        } else {\n                            is_active = false;\n                            button.innerHTML = 'location_disabled';\n                            turnLocationOff()\n                        }\n                    });\n\n\n                return controlDiv;\n            }\n        });\n\n        (L.control as any).locationInput = function (options: any) {\n            return new (L.Control as any).LocationInput(options);\n        };\n    }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Animal.html":{"url":"interfaces/Animal.html","title":"interface - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/animal.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auto_icon\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        manual_icon\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auto_icon\n                                    \n                                \n                                \n                                    \n                                        auto_icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        manual_icon\n                                    \n                                \n                                \n                                    \n                                        manual_icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Animal {\n    auto_icon: string\n    description: string\n    id: number\n    manual_icon: string\n    name: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, dialogRef: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'synature'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ManualreportingComponent } from './components/manualreporting/manualreporting.component';\nimport { AuthenticationService } from './services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'synature';\n\n  constructor(private authService: AuthenticationService, private dialogRef: MatDialog) {\n\n  }\n  openDialog() {\n    this.dialogRef.open(ManualreportingComponent)\n  }\n  ngOnInit(): void {\n    this.authService.setRefreshTimeoutFromCookieIfLoggedIn();\n  }\n\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdddeviceComponent', 'selector': 'app-adddevice'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetectionlistComponent', 'selector': 'app-detectionlist'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManualreportingComponent', 'selector': 'app-manualreporting'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdddeviceComponent\n\nAdddeviceComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdddeviceComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDetectionlistComponent\n\nDetectionlistComponent\n\nAppModule -->\n\nDetectionlistComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nManualreportingComponent\n\nManualreportingComponent\n\nAppModule -->\n\nManualreportingComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptorService\n\nAuthInterceptorService\n\nAppModule -->\n\nAuthInterceptorService->AppModule\n\n\n\n\n\nMapMarkerService\n\nMapMarkerService\n\nAppModule -->\n\nMapMarkerService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdddeviceComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            DetectionlistComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            ManualreportingComponent\n                        \n                        \n                            MapComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptorService\n                        \n                        \n                            MapMarkerService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// Services\nimport { MapMarkerService } from './services/marker-services/map-marker.service';\nimport { AuthInterceptorService } from './services/interceptors/auth-interceptor.service';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './components/map/map.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { MatSliderModule } from '@angular/material/slider';\n\n\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { ManualreportingComponent } from './components/manualreporting/manualreporting.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { DetectionlistComponent } from './components/detectionlist/detectionlist.component';\nimport { AdddeviceComponent } from './components/adddevice/adddevice.component';\n\n\nimport {LeafletMarkerClusterModule} from '@asymmetrik/ngx-leaflet-markercluster';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent,\n    LoginComponent,\n    SignupComponent,\n    ManualreportingComponent,\n    DetectionlistComponent,\n    AdddeviceComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatSliderModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatChipsModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    LeafletMarkerClusterModule\n  ],\n  providers: [\n    MapMarkerService,\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true },\n    { provide: \"BACKEND_URL\", useValue: \"https://api.synature.ch/api\"}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { MapComponent } from './components/map/map.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { LoginGuard } from './guards/login.guard';\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: '', canActivate: [LoginGuard],  children: [\n        { path: '', redirectTo: 'map', pathMatch: 'full' },\n        { path: 'map', component: MapComponent },\n        { path: '**', redirectTo: 'map' }\n  ]\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptorService.html":{"url":"interceptors/AuthInterceptorService.html","title":"interceptor - AuthInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interceptors/auth-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                isAuthRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interceptors/auth-interceptor.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors/auth-interceptor.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthRoute\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthRoute(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors/auth-interceptor.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, map, catchError, of } from 'rxjs';\nimport { AuthenticationService } from '../authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n\n  constructor(private authService: AuthenticationService, private router: Router) { }\n\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    \n    if (this.isAuthRoute(req.url)) { \n      return next.handle(req);\n    }\n    if (!req.url.startsWith('https://api.synature.ch/')) {\n      return next.handle(req);\n    }\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`\n      }\n    })\n\n    return next.handle(req).pipe(catchError(err => {\n      if ((err.status === 401 || err.status === 403) && !this.isAuthRoute(req.url) && req.url.startsWith('https://api.synature.ch:443/api/')) {\n        this.authService.refreshToken().then( success => {\n          if (success) {\n            next.handle(req);\n            return of([]);\n          }\n          return of(err);\n        }).catch(err => {\n          this.router.navigate(['/login']);\n          return of(err);\n        });\n      }\n      return of(err);\n    }));\n  }\n\n  isAuthRoute(url: string): boolean {\n    return url.includes('/login') || url.includes('signup') || url.includes('token/refresh');\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                refreshTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                readCookie\n                            \n                            \n                                refreshToken\n                            \n                            \n                                    Private\n                                setCookie\n                            \n                            \n                                    Private\n                                setCookiesFromData\n                            \n                            \n                                    Private\n                                setRefreshTimeout\n                            \n                            \n                                setRefreshTimeoutFromCookieIfLoggedIn\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            readCookie\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readCookie(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshToken\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setCookie\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCookie(name: string, value: string, expires?: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expires\n                                    \n                                                Date\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setCookiesFromData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCookiesFromData(data: Token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Token\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setRefreshTimeout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRefreshTimeout(expirationSeconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expirationSeconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRefreshTimeoutFromCookieIfLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nsetRefreshTimeoutFromCookieIfLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(firstName: string, lastName: string, email: string, password: string, countryId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    countryId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://api.synature.ch:443/api/accounts'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReturnType<> | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\ninterface Token {\n  message:string;\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  debugToken: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  private apiUrl = 'https://api.synature.ch:443/api/accounts';\n  private refreshTimeout: ReturnType | null = null;\n\n  login(email: string, password: string): Promise{\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json', 'accept': 'application/json' }) };\n    return new Promise((resolve, reject) => {\n      let url = this.apiUrl + '/login';\n      this.httpClient.post(url, {email: email, password: password}, httpOptions).subscribe(\n        {\n          next: (data) => { this.setCookiesFromData(data); resolve(true)},\n          error: (err) => { console.error(err); reject(err)}\n        }\n      );\n    });\n  }\n\n  signup(firstName: string, lastName: string, email: string, password: string, countryId: string): Promise {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json', 'accept': 'application/json' }) };\n    return new Promise((resolve, reject) => {\n      let url = this.apiUrl + '/register';\n      this.httpClient.post(url, {firstName: firstName, lastName: lastName, email: email, password: password, countryId: countryId}, httpOptions).subscribe(\n        {\n          next: (data) => { console.log(data);this.setCookiesFromData(data); resolve(true)},\n          error: (err) => { console.error(err); reject(err)}\n        }\n      );\n    });\n  }\n\n  logout(): void {\n    console.log('logging out');\n    this.setCookie('token', '', new Date());\n    this.setCookie('refreshToken', '', new Date());\n    window.location.reload();\n  }\n\n  getToken(): string { \n    return this.readCookie('token')\n  }\n\n  isLoggedIn(): boolean {\n    return this.readCookie('token').length > 0;\n  }\n\n  refreshToken(): Promise {\n    if (this.readCookie('token') === \"\") {\n      return new Promise((_, reject) => {\n        reject(false);\n      });\n    }\n    const httpOptions = { headers: new HttpHeaders({ Authorization: `Bearer ${this.readCookie('refreshToken')}`, 'Content-Type': 'application/json', 'accept': 'application/json' }) };\n    return new Promise((resolve, reject) => {\n      let url = this.apiUrl + '/token/refresh';\n      this.httpClient.get(url, httpOptions).subscribe(\n        {\n          next: (data) => { this.setCookiesFromData(data); resolve(true)},\n          error: (err) => { console.error(err); reject(err)}\n        }\n      );\n    });\n  }\n\n  setRefreshTimeoutFromCookieIfLoggedIn(): void {\n    if (this.isLoggedIn()) {\n      const expires: Date = new Date(this.readCookie('tokenExpires'));\n      let timeDelta = expires.getTime() - Date.now();\n      timeDelta /= 1000;\n      timeDelta = Math.max(timeDelta, 0);\n      this.setRefreshTimeout(timeDelta);\n    }\n  }\n\n  private setCookiesFromData(data: Token) {\n    let expirationDate = new Date();\n    expirationDate = new Date(expirationDate.setSeconds(expirationDate.getSeconds() + data.expiresIn));\n    this.setCookie('token', data.accessToken, expirationDate);\n    this.setCookie('refreshToken', data.refreshToken, expirationDate);\n    this.setCookie('tokenExpires', expirationDate.toUTCString(), expirationDate);\n    this.setRefreshTimeout(data.expiresIn);\n  }\n\n  private setRefreshTimeout(expirationSeconds: number) {\n    if (this.refreshTimeout) { \n      clearTimeout(this.refreshTimeout);\n    }\n    this.refreshTimeout = setTimeout(() => this.refreshToken(), (expirationSeconds-60)*1000);\n  }\n\n  private readCookie(name: string): string {\n    let cookieStr = document.cookie;\n    let cookies = cookieStr.split(\";\");\n    for (let cookie of cookies) {\n      let cookieName = cookie.split(\"=\")[0].trim();\n      if (cookieName === name) {\n        return cookie.split(\"=\")[1];\n      }\n    }\n    return \"\";\n  }\n\n  private setCookie(name: string, value: string, expires?: Date): void {\n    let cookieStr = name + \"=\" + value;\n    cookieStr += \";SameSite=Strict\";\n    if (expires) {\n      cookieStr += \";expires=\" + expires.toUTCString();\n    }\n    document.cookie = cookieStr;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BoundingBox.html":{"url":"interfaces/BoundingBox.html","title":"interface - BoundingBox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BoundingBox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/marker-services/map-marker.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        0\n                                \n                                \n                                        1\n                                \n                                \n                                        2\n                                \n                                \n                                        3\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        0\n                                    \n                                \n                                \n                                    \n                                        0:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        1\n                                    \n                                \n                                \n                                    \n                                        1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        2\n                                    \n                                \n                                \n                                    \n                                        2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        3\n                                    \n                                \n                                \n                                    \n                                        3:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport * as L from 'leaflet'\nimport { debounceTime, Observable, of, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { Box } from 'src/app/interfaces/box';\nimport { WildlifeDetection } from 'src/app/interfaces/WildlifeDetection';\n\nimport { BoxApiService } from '../api-services/box-api/box-api.service';\nimport { WildlifeDetectionApiService } from '../api-services/wildlife-detection-api/wildlife-detection-api.service';\nimport { LocationService } from '../location.service';\nimport { BoxMarkerService } from './box-marker.service';\nimport { DetectionMarkerService } from './detection-marker.service';\n\ninterface SearchResult {\n    place_id: number;\n    address: Address;\n    boundingbox: BoundingBox;\n    class: string;\n    display_name: string;\n    icon: string;\n    importance: number;\n    lat: string;\n    lon: string;\n    osm_id: number;\n    osm_type: string;\n    type: string;\n    [x: string]: any;\n}\n\ninterface Address {\n    \"ISO3166-2lvl4\": string;\n    city: string;\n    country: string;\n    country_code: string;\n    county: string;\n    highway: string;\n    postcode: string;\n    road: string;\n    state: string;\n    village: string;\n    [x: string]: any;\n}\n\ninterface BoundingBox {\n    0: string;\n    1: string;\n    2: string;\n    3: string;\n}\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MapMarkerService {\n\n    constructor(private http: HttpClient,\n        private locationService: LocationService,\n        private boxApi: BoxApiService,\n        private boxMarker: BoxMarkerService,\n        private detectionApi: WildlifeDetectionApiService,\n        private detectionMarker: DetectionMarkerService) {\n        this.addInputToggle();\n        this._addSearchBar();\n        this._addLocationInput();\n\n    }\n\n    getBoxMarkers(): Observable[]> {\n        return this.boxApi.getBoxes().pipe(\n            map(bs => this.boxMarker.createMarkers(bs))\n        );\n\n\n        /*this.http.get(this.mockDataBoxPath).subscribe((res: Box[]) => {\n            for (const box of res) {\n                const lat = box.location_lat;\n                const long = box.location_long;\n                let strokeColor: string = '#ff3333';\n                if (box.battery_status > 75) {\n                    strokeColor = '#305D63';\n                } else if (box.battery_status > 33) {\n                    strokeColor = '#5E8B7E'\n                }\n                L.circle([lat, long], { radius: 3000, color: strokeColor })\n                    .bindPopup(String(boxPopup(box)))\n                    .addTo(map);\n            }\n        });*/\n    }\n\n    getWildlifeMarkers(): Observable[]> {\n        return this.detectionApi.getwildlifeData().pipe(\n            map(dts => this.detectionMarker.createMarkers(dts))\n        );\n\n        /* this.http.get(this.poisPath).subscribe((res: Position[]): void => {\n            for (const position of res) {\n                const lat = position.locationLat;\n                const long = position.locationLong;\n\n                let marker_options: L.MarkerOptions = {};\n\n                marker_options['icon'] = getIconWithIconUrl(position);\n                L.marker([lat, long], marker_options)\n                    .bindPopup(String(positionPopup(position)))\n                    .addTo(map);\n            }\n        });*/\n    }\n\n    allowInputMarkers(map: L.Map): void {\n        // (L.control as any).toggleInput().addTo(map);\n    }\n\n    addSearchBar(mapLeaf: L.Map) {\n        (L.control as any).searchbar({ httpClient: this.http }).addTo(mapLeaf);\n    }\n\n    addLocationInput(map: L.Map) {\n        (L.control as any).locationInput({ locationService: this.locationService }).addTo(map);\n    }\n\n    private addInputToggle(): any {\n\n        (L.Control as any).ToggleInput = L.Control.extend({\n            options: {\n                position: 'topright',\n            },\n            onAdd: function (map: L.Map) {\n\n                let marker: L.Marker;\n                let checked = false;\n                var controlDiv = L.DomUtil.create('div');\n                var controlUI = L.DomUtil.create('div', 'leaflet-control-toggle', controlDiv);\n\n                controlUI.title = 'Choose Location';\n\n                var label = L.DomUtil.create('label', 'label', controlUI);\n                label.innerText = '+';\n\n                const markerAddToggleHandler = (e: L.LeafletMouseEvent) => {\n                    if (marker) marker.remove();\n                    marker = L.marker(e.latlng).addTo(map);\n                    marker.feature = { properties: { isLocationPicker: true }, type: \"Feature\", geometry: { coordinates: [e.latlng.lat, e.latlng.lng], type: 'Point' } };\n\n                    map.fireEvent('location-picked', e.latlng);\n\n                    marker.on('click', (e: L.LeafletMouseEvent) => {\n                        marker.remove();\n                        controlUI.classList.remove('leaflet-control-toggle-active');\n                        label.innerText = '+';\n                    });\n                    checked = false;\n                    label.innerText = '';\n                    label.innerHTML = '&check;';\n                }\n\n                L.DomEvent\n                    .addListener(label, 'click', L.DomEvent.stopPropagation)\n                    .addListener(label, 'click', L.DomEvent.preventDefault)\n                    .addListener(label, 'click', function (e: any) {\n                        if (!checked) {\n                            checked = true;\n                            controlUI.classList.add('leaflet-control-toggle-active')\n                            map.once('click', markerAddToggleHandler);\n                            label.innerText = '+';\n                        }\n                        checked = !checked\n                    });\n\n\n                return controlDiv;\n            }\n        });\n\n        (L.control as any).toggleInput = function (options: any) {\n            return new (L.Control as any).ToggleInput(options);\n        };\n\n    }\n\n    _addSearchBar() {\n        (L.Control as any).Searchbar = L.Control.extend({\n            options: {\n                position: 'topleft',\n            },\n\n            onAdd: function (map: L.Map) {\n\n                let subject = new Subject();\n                let subscription = new Subscription();\n                let resultSubject = new Subject();\n\n                let makeSearchCall = (text: string): Observable => {\n                    console.log('Get Request')\n                    if (text.length > 0) {\n                        return ((this.options as any).httpClient as HttpClient).get('https://nominatim.openstreetmap.org/search?q=' + text + '&format=json&polygon=1&addressdetails=1')\n                    } else {\n                        return of([]);\n                    }\n                };\n\n                subscription = subject.pipe(\n                    filter(searchText => searchText.length > 2),\n                    debounceTime(1100),\n                    distinctUntilChanged(),\n                ).subscribe(\n                    (searchText: string) => {\n                        makeSearchCall(searchText).subscribe({\n                            next: (res: SearchResult[]) => {\n                                resultSubject.next(res);\n                            },\n                            error: (err: any) => {\n                                console.error(err);\n                            }\n                        }\n                        );\n                    }\n                );\n\n                var controlDiv = L.DomUtil.create('div');\n                var controlUI = L.DomUtil.create('div', 'leaflet-control-searchbar', controlDiv);\n                controlUI.title = 'Search';\n                var input = L.DomUtil.create('input', 'searchbar-input', controlUI);\n                var icon = L.DomUtil.create('img', 'searchbar-icon', controlUI);\n                icon.src = 'assets/icons/search.png';\n                L.DomEvent\n                    .addListener(input, 'keyup', L.DomEvent.stopPropagation)\n                    .addListener(input, 'keyup', L.DomEvent.preventDefault)\n                    .addListener(input, 'keyup', function (e: any) {\n                        const searchText = e.target.value;\n                        subject.next(searchText);\n                    });\n\n                var blur_time: any;\n                var resultsDiv = L.DomUtil.create('div', 'search-results', controlUI);\n                resultSubject.subscribe(results => {\n                    resultsDiv.innerHTML = '';\n                    let names: string[] = [];\n                    for (const result of results) {\n                        if (names.includes(result.display_name) || names.length == 5) {\n                            continue;\n                        }\n                        names.push(result.display_name);\n                        let a = L.DomUtil.create('a', 'search-result', resultsDiv);\n                        let img = L.DomUtil.create('img', 'search-result-img', a);\n                        if (result.icon) {\n                            img.src = result.icon;\n                        } else {\n                            img.src = \"data:image/svg+xml;charset=utf8,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%3E%3C/svg%3E\"; //empty image\n                            img.alt = ''\n                        }\n                        let a_span = L.DomUtil.create('span', '', a);\n                        a_span.innerText = result.display_name;\n                        L.DomEvent\n                            .addListener(a, 'click', L.DomEvent.stopPropagation)\n                            .addListener(a, 'click', L.DomEvent.preventDefault)\n                            .addListener(a_span, 'click', function (e: any) {\n                                map.flyToBounds([[+result.boundingbox[0], +result.boundingbox[2]], [+result.boundingbox[1], +result.boundingbox[3]]]);\n                                input.innerText = result.display_name;\n                                resultsDiv.classList.add('hidden');\n                            });\n                    }\n                });\n                L.DomEvent.addListener(input, 'focus', function (e: any) {\n                    if (blur_time) clearTimeout(blur_time);\n                    resultsDiv.classList.remove('hidden');\n                });\n                L.DomEvent.addListener(input, 'blur', function (e: any) {\n                    blur_time = setTimeout(() => { resultsDiv.classList.add('hidden'); }, 100);\n\n                })\n                return controlDiv;\n            }\n        });\n\n        (L.control as any).searchbar = function (options: any) {\n            return new (L.Control as any).Searchbar(options);\n        };\n    }\n\n    _addLocationInput() {\n        (L.Control as any).LocationInput = L.Control.extend({\n            options: {\n                position: 'bottomright',\n            },\n            onAdd: function (map: L.Map) {\n\n                var controlDiv = L.DomUtil.create('div');\n                var controlUI = L.DomUtil.create('div', 'leaflet-control-toggle', controlDiv);\n                controlUI.title = 'Add Data';\n                var button = L.DomUtil.create('button', 'mat-mini-fab', controlUI);\n                button.setAttribute('mat-mini-fab', '');\n                button.setAttribute('color', 'primary');\n                button.setAttribute('aria-label', 'Get User Location');\n                button.innerHTML = 'location_disabled';\n\n                var is_active = false;\n                const turnLocationOn = () => {\n                    ((this.options as any).locationService as LocationService).locate(map);\n                }\n                const turnLocationOff = () => {\n                    ((this.options as any).locationService as LocationService).stopLocaton(map);\n                }\n\n                L.DomEvent\n                    .addListener(button, 'click', L.DomEvent.stopPropagation)\n                    .addListener(button, 'click', L.DomEvent.preventDefault)\n                    .addListener(button, 'click', function (e: any) {\n                        if (!is_active) {\n                            is_active = true;\n                            turnLocationOn();\n                            button.innerHTML = 'my_location';\n                        } else {\n                            is_active = false;\n                            button.innerHTML = 'location_disabled';\n                            turnLocationOff()\n                        }\n                    });\n\n\n                return controlDiv;\n            }\n        });\n\n        (L.control as any).locationInput = function (options: any) {\n            return new (L.Control as any).LocationInput(options);\n        };\n    }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Box.html":{"url":"interfaces/Box.html","title":"interface - Box","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Box\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/box.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        batteryStatus\n                                \n                                \n                                        connectivityStatus\n                                \n                                \n                                        detectionCount\n                                \n                                \n                                        id\n                                \n                                \n                                        lastHeartbeat\n                                \n                                \n                                        locationLat\n                                \n                                \n                                        locationLong\n                                \n                                \n                                        name\n                                \n                                \n                                        ping\n                                \n                                \n                                        registeredAt\n                                \n                                \n                                        serialNumber\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        batteryStatus\n                                    \n                                \n                                \n                                    \n                                        batteryStatus:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connectivityStatus\n                                    \n                                \n                                \n                                    \n                                        connectivityStatus:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        detectionCount\n                                    \n                                \n                                \n                                    \n                                        detectionCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastHeartbeat\n                                    \n                                \n                                \n                                    \n                                        lastHeartbeat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locationLat\n                                    \n                                \n                                \n                                    \n                                        locationLat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locationLong\n                                    \n                                \n                                \n                                    \n                                        locationLong:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ping\n                                    \n                                \n                                \n                                    \n                                        ping:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registeredAt\n                                    \n                                \n                                \n                                    \n                                        registeredAt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialNumber\n                                    \n                                \n                                \n                                    \n                                        serialNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Box {\n    batteryStatus: number\n    connectivityStatus: number\n    detectionCount: number\n    id: string\n    lastHeartbeat: number\n    locationLat: number\n    locationLong: number\n    name: string\n    ping: number\n    registeredAt: number\n    serialNumber: string\n    type: string\n}\n\n/*\n*\n\n\n\n********** OLD BOX '*****\nid?: number;\n    user_id: number;\n    code: string;\n    public_key: string;\n    registered_at: number;\n    last_heartbeat: number;\n    location_long: number;\n    location_lat: number;\n    connectivity_status: number;\n    battery_status: number;\n    ping: number;\n    detectionCount: number;\n*/\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BoxApiService.html":{"url":"injectables/BoxApiService.html","title":"injectable - BoxApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BoxApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-services/box-api/box-api.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBoxes\n                            \n                            \n                                getMockBoxes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, client: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-services/box-api/box-api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBoxes\n                        \n                        \n                    \n                \n            \n            \n                \ngetBoxes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-services/box-api/box-api.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMockBoxes\n                        \n                        \n                    \n                \n            \n            \n                \ngetMockBoxes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-services/box-api/box-api.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-services/box-api/box-api.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Box } from 'src/app/interfaces/box';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoxApiService {\n\n\n  private data: Observable\n\n  constructor(@Inject('BACKEND_URL') private url: string, private client: HttpClient) {\n  }\n\n  getBoxes(): Observable {\n    return this.data = this.data || this.client.get(`${this.url}/devices/`);\n  }\n\n  //TODO delete me\n  getMockBoxes(): Observable {\n    return this.client.get('/assets/boc_get.json');\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BoxMarkerService.html":{"url":"injectables/BoxMarkerService.html","title":"injectable - BoxMarkerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BoxMarkerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/marker-services/box-marker.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                boxRadius\n                            \n                            \n                                    Private\n                                criticalColor\n                            \n                            \n                                    Private\n                                goodColor\n                            \n                            \n                                    Private\n                                normalColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                boxPopup\n                            \n                            \n                                createMarker\n                            \n                            \n                                createMarkers\n                            \n                            \n                                    Private\n                                mapStatustoColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/marker-services/box-marker.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            boxPopup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    boxPopup(data: Box)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/box-marker.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Box\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMarker\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMarker(box: Box)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/box-marker.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    box\n                                    \n                                                Box\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         L.Circle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMarkers\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMarkers(boxes: Box[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/box-marker.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    boxes\n                                    \n                                                Box[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     L.Circle[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mapStatustoColor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapStatustoColor(battery: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/box-marker.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    battery\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            boxRadius\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/marker-services/box-marker.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criticalColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#ff3333'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/marker-services/box-marker.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            goodColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#305D63'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/marker-services/box-marker.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            normalColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#5E8B7E'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/marker-services/box-marker.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Feature } from 'geojson';\nimport * as L from 'leaflet';\nimport { Box } from 'src/app/interfaces/box';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoxMarkerService {\n\n\n  //TODO via config ? => could range from customer to customer\n  private criticalColor = '#ff3333';\n  private normalColor = '#5E8B7E';\n  private goodColor = '#305D63';\n\n  // TODO depends on which kind of box => decide in mapping\n  private boxRadius = 3000;\n\n  constructor() { }\n\n\n  createMarkers(boxes: Box[]): L.Circle[] {\n    return boxes.map(box => this.createMarker(box));\n  }\n\n  createMarker(box: Box): L.Circle {\n    let c = L.circle(\n      [box.locationLat, box.locationLong],\n      { radius: this.boxRadius, color: this.mapStatustoColor(box.batteryStatus) }\n    )\n      .bindPopup(this.boxPopup(box));\n    c.feature = { type: \"Feature\", properties: box, geometry: { type: \"Point\", coordinates: [box.locationLat, box.locationLong]}}\n    return c;\n  }\n\n\n\n  private mapStatustoColor(battery: number): string {\n    return battery > 33 ? battery > 75 ? this.goodColor : this.normalColor : this.criticalColor;\n  }\n\n  private boxPopup(data: Box): string {\n    return `Device name: ${data.name}\n    First Signal:${new Date(data.registeredAt * 1000).toDateString().split(' ').slice(1).join(' ')} ${new Date(data.registeredAt * 1000).toLocaleTimeString()}\n    Last Signal:${new Date(data.lastHeartbeat * 1000).toDateString().split(' ').slice(1).join(' ')} ${new Date(data.lastHeartbeat * 1000).toLocaleTimeString()}\n    Connectivity:${data.connectivityStatus}/5\n    Battery:${data.batteryStatus}%\n    Location:${data.locationLat}° N,${data.locationLong}° E\n    Detections:${data.detectionCount}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Country.html":{"url":"interfaces/Country.html","title":"interface - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/country.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        continent\n                                \n                                \n                                        currency\n                                \n                                \n                                        currencySymbol\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        phone\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        continent\n                                    \n                                \n                                \n                                    \n                                        continent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currencySymbol\n                                    \n                                \n                                \n                                    \n                                        currencySymbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Country {\n    id: number,\n    name: string,\n    phone: number,\n    code: string,\n    currencySymbol: string,\n    currency: string,\n    continent: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DetectionMarkerService.html":{"url":"injectables/DetectionMarkerService.html","title":"injectable - DetectionMarkerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DetectionMarkerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/marker-services/detection-marker.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMarker\n                            \n                            \n                                createMarkers\n                            \n                            \n                                    Private\n                                destinationPopup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/marker-services/detection-marker.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMarker\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMarker(d: WildlifeDetection)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/detection-marker.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    d\n                                    \n                                                WildlifeDetection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         L.Marker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMarkers\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMarkers(detection: WildlifeDetection[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/detection-marker.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    detection\n                                    \n                                                WildlifeDetection[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     L.Marker[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            destinationPopup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destinationPopup(data: WildlifeDetection)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/detection-marker.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                WildlifeDetection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { WildlifeDetection } from 'src/app/interfaces/WildlifeDetection';\nimport * as L from 'leaflet';\nimport { getIconWithIconUrl } from 'src/app/utils/animalToIcon';\nimport { getMediaDisplayHTML } from 'src/app/utils/mediaDisplay';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DetectionMarkerService {\n\n  constructor() { }\n\n\n  createMarkers(detection: WildlifeDetection[]): L.Marker[] {\n    return detection.map(d => this.createMarker(d));\n  }\n\n  createMarker(d: WildlifeDetection): L.Marker {\n    const options: L.MarkerOptions = {};\n    let m = L.marker([d.locationLat, d.locationLong], { icon: getIconWithIconUrl(d.icon) })\n      .bindPopup(this.destinationPopup(d));\n    m.feature = { type: \"Feature\", properties: d, geometry: { type: \"Point\", coordinates: [d.locationLat, d.locationLong] } }\n    return m;\n  }\n\n  private destinationPopup(data: WildlifeDetection): string {\n    return `${data.animalName}\n    Detected on:${new Date(data.recordedAt).toDateString().split(' ').slice(1).join(' ')} ${new Date(data.recordedAt).toLocaleTimeString()}\n    Method:${data.method}\n    Location:${data.locationLat}° N,${data.locationLong}° E\n    Individuals:${data.total}\n    Females, Males, Offspring:${data.female}, ${data.male}, ${data.offspring}\n    ${getMediaDisplayHTML(data)}\n`\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetectionlistComponent.html":{"url":"components/DetectionlistComponent.html","title":"component - DetectionlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetectionlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/detectionlist/detectionlist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detectionlist\n            \n\n            \n                styleUrls\n                ./detectionlist.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./detectionlist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnnames\n                            \n                            \n                                columnsToDisplay\n                            \n                            \n                                columnsToDisplayWithExpand\n                            \n                            \n                                expandedElement\n                            \n                            \n                                wildlifedata$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wildlife: WildlifeDetectionApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/detectionlist/detectionlist.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wildlife\n                                                  \n                                                        \n                                                                        WildlifeDetectionApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/detectionlist/detectionlist.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnnames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    \"Date and Time\",\n    \"Species\",\n    \"Method\",\n    \"Total\"\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/detectionlist/detectionlist.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnsToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['displayDate', 'animalName', 'method', 'total']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/detectionlist/detectionlist.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnsToDisplayWithExpand\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...this.columnsToDisplay, 'expand']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/detectionlist/detectionlist.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WildlifeDetection | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/detectionlist/detectionlist.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wildlifedata$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.wildlife.getwildlifeData().pipe(\n    map(wildlifedetectionlist => wildlifedetectionlist.map(b=>({...b, displayDate: new Date(b.recordedAt).toLocaleString()}))),\n    )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/detectionlist/detectionlist.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport { WildlifeDetection } from '../../interfaces/WildlifeDetection';\nimport { map } from 'rxjs';\nimport { WildlifeDetectionApiService } from 'src/app/services/api-services/wildlife-detection-api/wildlife-detection-api.service';\n\n@Component({\n  selector: 'app-detectionlist',\n  templateUrl: './detectionlist.component.html',\n  styleUrls: ['./detectionlist.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded  collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\n\n\nexport class DetectionlistComponent implements OnInit {\n  columnsToDisplay = ['displayDate', 'animalName', 'method', 'total'];\n  columnsToDisplayWithExpand = [...this.columnsToDisplay, 'expand'];\n  expandedElement: WildlifeDetection | null;\n\n  columnnames = [\n    \"Date and Time\",\n    \"Species\",\n    \"Method\",\n    \"Total\"\n  ]\n\n  wildlifedata$ = this.wildlife.getwildlifeData().pipe(\n    map(wildlifedetectionlist => wildlifedetectionlist.map(b=>({...b, displayDate: new Date(b.recordedAt).toLocaleString()}))),\n    );\n\n  constructor(private wildlife: WildlifeDetectionApiService) { }\n  ngOnInit(): void { }\n}\n\n    \n\n    \n        \n  List of wildlife detections\n  \n    \n       {{columnnames[i]}} \n       {{element[column]}}  \n    \n    \n      &nbsp;\n      \n        \n          keyboard_arrow_down\n          keyboard_arrow_up\n        \n      \n    \n\n    \n      \n        \n          \n            \n            \n              \n            Your browser does not support the audio element.\n             -->\n            \n            deleteDelete\n            editEdit\n          \n          \n            \n              pin_dropLocation: {{element.locationLat}} °N, {{element.locationLong}} °E\n            \n            \n              femaleFemales: {{element.female}}\n            \n            \n              maleMales: {{element.male}}\n            \n            \n              cribOffspring: {{element.offspring}}\n            \n            {{element.comment}}\n          \n        \n      \n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./detectionlist.component.scss\n                \n                table {\n  width: 100%;\n}\n\ntr.example-detail-row {\n  height: 0;\n}\n\ntr.tabledetection-row:not(.example-expanded-row):hover {\n  background: whitesmoke;\n}\n\ntr.tabledetection-row:not(.example-expanded-row):active {\n  background: #efefef;\n}\n\n.tabledetection-row td {\n  border-bottom-width: 0;\n}\n\n.tabledetection-detail {\n  overflow: hidden;\n  display: flex;\n}\n\n\n.tabledetection-symbol {\n  font-weight: bold;\n  line-height: normal;\n}\n\n.tabledetection-diagram {\n  height:15vh;\n  margin-top: 15px;\n}\n\n.tabledetection-description {\n  padding: 16px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  List of wildlife detections             {{columnnames[i]}}        {{element[column]}}                                         keyboard_arrow_down          keyboard_arrow_up                                                                                                Your browser does not support the audio element.             -->                        deleteDelete            editEdit                                              pin_dropLocation: {{element.locationLat}} °N, {{element.locationLong}} °E                                      femaleFemales: {{element.female}}                                      maleMales: {{element.male}}                                      cribOffspring: {{element.offspring}}                        {{element.comment}}                                              '\n    var COMPONENTS = [{'name': 'AdddeviceComponent', 'selector': 'app-adddevice'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetectionlistComponent', 'selector': 'app-detectionlist'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManualreportingComponent', 'selector': 'app-manualreporting'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetectionlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceApiService.html":{"url":"injectables/DeviceApiService.html","title":"injectable - DeviceApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeviceApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-services/device-api/device-api.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-services/device-api/device-api.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceApiService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeoadminmapService.html":{"url":"injectables/GeoadminmapService.html","title":"injectable - GeoadminmapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeoadminmapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-services/geoadminmap.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-services/geoadminmap.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit(control: L.Control.Layers)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-services/geoadminmap.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            L.Control.Layers\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as L from 'leaflet'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeoadminmapService {\n  /*\n    ToS: https://www.geo.admin.ch/en/geo-services/geo-services/terms-of-use.html\n    The acquisition and use of data or services is free of charge, subject to the provisions on fair use.\n    The integration of geoservices in web applications with an average of 10,000 users per day or desktop applications corresponds to fair use.\n  */\n  constructor(private http: HttpClient) {\n    \n   }\n\n  init(control: L.Control.Layers) {\n    const tileArealStatistik = L.tileLayer('https://wmts0.geo.admin.ch/1.0.0/ch.bfs.arealstatistik/default/2018/3857/{z}/{x}/{y}.png', { attribution: '&copy; GeoAdmin', opacity: 0.5 });\n    //control.addOverlay(tileArealStatistik, \"GeoAdmin: Arealstatistik (Wälder)\");\n    const tileGemeinde = L.tileLayer('https://wmts0.geo.admin.ch/1.0.0/ch.swisstopo.swissboundaries3d-gemeinde-flaeche.fill/default/current/3857/{z}/{x}/{y}.png', { attribution: '&copy; GeoAdmin' });\n    control.addOverlay(tileGemeinde, \"Swiss Municipal Areas\");\n\n  }\n  /*\n    addressSearch(searchstring: string, control: L.Control.Layers, map: L.Map) {\n      // Usage this.addressSearch('Salvenachstrasse', control, map);\n      let path = `https://api3.geo.admin.ch/rest/services/api/MapServer/find?layer=ch.swisstopo.amtliches-strassenverzeichnis&searchText=${searchstring}&searchField=label&returnGeometry=true&contains=false&geometryFormat=geojson&sr=4326`\n      this.http.get(path).subscribe(data => {\n        let gjL = L.geoJSON((data as any).results[0]);\n        control.addOverlay(gjL, 'GEO');\n      })\n    }*/\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/location.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                locationCircle\n                            \n                            \n                                locationMarker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getIcon\n                            \n                            \n                                locate\n                            \n                            \n                                stopLocaton\n                            \n                            \n                                updateLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/location.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIcon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/location.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     L.DivIcon\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            locate\n                        \n                        \n                    \n                \n            \n            \n                \nlocate(map: L.Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/location.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                            L.Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopLocaton\n                        \n                        \n                    \n                \n            \n            \n                \nstopLocaton(map: L.Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/location.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                            L.Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLocation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLocation(e: LocationEvent, map: L.Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/location.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            LocationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    map\n                                    \n                                            L.Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationCircle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.Circle | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/location.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationMarker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.Marker | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/location.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as L from 'leaflet';\nimport { LocationEvent } from 'leaflet';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  constructor() { }\n\n  locationMarker: L.Marker | undefined;\n  locationCircle: L.Circle | undefined;\n\n  locate(map: L.Map) {\n    map.locate({watch: false, enableHighAccuracy: true})\n    .once('locationfound', (e) => {\n      map.flyToBounds(e.latlng.toBounds(e.accuracy));\n    })\n    .on('locationfound', (e) => this.updateLocation(e, map))\n    .on('locationerror', (e) => {console.error(e)});\n  }\n\n  updateLocation(e: LocationEvent, map: L.Map) {\n    if (this.locationMarker) {\n      map.removeLayer(this.locationMarker);\n    }\n    if (this.locationCircle) {\n      map.removeLayer(this.locationCircle);\n    }\n    const radius = e.accuracy / 2;\n    const latlng = e.latlng;\n    let icon = this.getIcon();\n\n    this.locationMarker = L.marker(latlng, {icon: icon}).addTo(map);\n    this.locationCircle = L.circle(latlng, radius, {stroke: false}).addTo(map);\n    //@ts-ignore\n    this.locationMarker._icon.classList.remove('disabled');\n\n  }\n\n  stopLocaton(map: L.Map) {\n    //@ts-ignore\n    this.locationMarker._icon.classList.add('disabled');\n    map.stopLocate();\n  }\n\n  private getIcon(): L.DivIcon {\n    const svg = '';\n\n    let iconSize = 20;\n\n    return L.divIcon({\n      html: svg,\n        iconSize: [iconSize, iconSize],\n        iconAnchor: [iconSize/2, iconSize/2],\n        popupAnchor: [0, 0],\n        className: 'location-marker'\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            redirect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    redirect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    email: ['', Validators.required],\n    password: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm = this.fb.group({\n    email: ['', Validators.required],\n    password: ['', Validators.required]\n  });\n\n  constructor(private fb: FormBuilder, private authService: AuthenticationService, private router: Router) { }\n\n  ngOnInit(): void {\n    if (this.authService.isLoggedIn()) {\n      this.redirect()\n    }\n  };\n\n  onSubmit() {\n    const email: string = this.loginForm.value.email, password: string = this.loginForm.value.password;\n\n    this.authService.login(email, password).then( (success) => {\n      this.redirect();\n    } ).catch((err) => { console.log(err)})\n  }\n\n  private redirect() {\n    this.router.navigate(['/']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Welcome to the data mangement platform for\n      rangers and biologists\n    \n      Please login\n      \n        \n          \n            Email\n            \n          \n        \n        \n          \n            Password\n            \n          \n        \n        Login\n        Don't have an account? Sign up!\n      \n    \n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                form {\n    display: flex;\n    flex-direction: column;\n    max-width: 800px;\n    width: 80vw;\n    margin:auto;\n    margin-top: 50px;\n}\nlabel {\n    display: block;\n    font-size: 1.4em;\n}\n\ninput {\n    margin: 0 0 15px 0;\n    width: 100%;\n    height: 1.4em;\n}\n\n.center {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Welcome to the data mangement platform for      rangers and biologists          Please login                                    Email                                                            Password                                      Login        Don\\'t have an account? Sign up!            '\n    var COMPONENTS = [{'name': 'AdddeviceComponent', 'selector': 'app-adddevice'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetectionlistComponent', 'selector': 'app-detectionlist'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManualreportingComponent', 'selector': 'app-manualreporting'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuard.html":{"url":"guards/LoginGuard.html","title":"guard - LoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/login.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/login.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/login.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n  constructor(private authService: AuthenticationService, private router: Router) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    if (!this.authService.isLoggedIn()) {\n      return this.router.parseUrl('/login');\n    }\n    return true;\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManualreportingComponent.html":{"url":"components/ManualreportingComponent.html","title":"component - ManualreportingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManualreportingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/manualreporting/manualreporting.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manualreporting\n            \n\n            \n                styleUrls\n                ./manualreporting.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./manualreporting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                detectionMethods$\n                            \n                            \n                                filteredOptions$\n                            \n                            \n                                loading\n                            \n                            \n                                reportForm\n                            \n                            \n                                selectedFile\n                            \n                            \n                                species\n                            \n                            \n                                species$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFn\n                            \n                            \n                                    Private\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type, dialogRef: MatDialogRef, detectionApi: WildlifeDetectionApiService, publicApi: PublicApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/manualreporting/manualreporting.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detectionApi\n                                                  \n                                                        \n                                                                        WildlifeDetectionApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publicApi\n                                                  \n                                                        \n                                                                        PublicApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFn\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFn(species: Animal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/manualreporting/manualreporting.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    species\n                                    \n                                                Animal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/manualreporting/manualreporting.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Animal[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/manualreporting/manualreporting.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFileSelected\n                        \n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/manualreporting/manualreporting.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/manualreporting/manualreporting.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detectionMethods$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.publicApi.getDetectionMethods().pipe(map(methods => methods.filter(m => !m.includes(\"SMART_\"))))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/manualreporting/manualreporting.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredOptions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/manualreporting/manualreporting.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/manualreporting/manualreporting.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reportForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    species: new FormControl('', [Validators.required]),\n    method: new FormControl('', [Validators.required]),\n    total: new FormControl(1, [Validators.required]),\n    females: new FormControl(0, []),\n    males: new FormControl(0, []),\n    offspring: new FormControl(0, []),\n    date: new FormControl('', [Validators.required]),\n    time: new FormControl('', [Validators.required]),\n    comment: new FormControl('', [Validators.required]),\n    location: new FormControl('', [Validators.required])\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/manualreporting/manualreporting.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/manualreporting/manualreporting.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            species\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Animal[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/manualreporting/manualreporting.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            species$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.publicApi.getAnimals().pipe(tap(d => this.species = d))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/manualreporting/manualreporting.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { map, Observable, of, startWith, tap } from 'rxjs';\nimport { Animal } from 'src/app/interfaces/animal';\nimport { Report } from 'src/app/interfaces/report';\nimport { WildlifeDetectionApiService } from 'src/app/services/api-services/wildlife-detection-api/wildlife-detection-api.service';\nimport { PublicApiService } from 'src/app/services/api-services/public-api/public-api.service';\n\n\n@Component({\n  selector: 'app-manualreporting',\n  templateUrl: './manualreporting.component.html',\n  styleUrls: ['./manualreporting.component.scss']\n})\nexport class ManualreportingComponent implements OnInit {\n\n  reportForm = new FormGroup({\n    species: new FormControl('', [Validators.required]),\n    method: new FormControl('', [Validators.required]),\n    total: new FormControl(1, [Validators.required]),\n    females: new FormControl(0, []),\n    males: new FormControl(0, []),\n    offspring: new FormControl(0, []),\n    date: new FormControl('', [Validators.required]),\n    time: new FormControl('', [Validators.required]),\n    comment: new FormControl('', [Validators.required]),\n    location: new FormControl('', [Validators.required])\n  });\n\n  detectionMethods$ = this.publicApi.getDetectionMethods().pipe(map(methods => methods.filter(m => !m.includes(\"SMART_\"))));\n  species$ = this.publicApi.getAnimals().pipe(tap(d => this.species = d));\n  species: Animal[];\n\n  loading = false;\n\n  filteredOptions$: Observable;\n\n  constructor(@Inject(MAT_DIALOG_DATA) private data: { lat: number, lng: number },\n  private dialogRef: MatDialogRef, \n  private detectionApi: WildlifeDetectionApiService, \n  private publicApi: PublicApiService) { }\n\n  selectedFile = null;\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  ngOnInit(): void {\n    this.filteredOptions$ = this.reportForm.get(\"species\")?.valueChanges.pipe(\n      startWith(''),\n      map(value => (typeof value === 'string' ? value : value?.name)),\n      map(v => v.toLowerCase()),\n      map(name => (name ? this.filter(name) : this.species.slice())),\n    ) || of([]);\n    this.reportForm.get(\"location\")?.setValue(this.data);\n  }\n\n  onSave() {\n    const values = this.reportForm.value;\n    const date = new Date(this.reportForm.value.date)\n    date.setHours(values.time.split(\":\")[0])\n    date.setMinutes(values.time.split(\":\")[1])\n    let report: Report = {\n      animalId: values.species.id,\n      method: values.method,\n      detectedAt: date.toISOString(),\n      locationLat: values.location.lat,\n      locationLong: values.location.lng,\n      total: values.total,\n      male: values.males,\n      female: values.females,\n      offspring: values.offspring,\n      comment: values.comment\n    }\n\n    this.loading = true;\n    this.detectionApi.createDetection(report).subscribe(m => {\n      this.dialogRef.close(m);\n      this.loading = false;\n    });\n  }\n\n\n  displayFn(species: Animal): string {\n    return species.name;\n  }\n\n  private filter(name: string): Animal[] {\n    return this.species.filter(o => o.name.toLowerCase().includes(name))\n  }\n\n}\n\n    \n\n    \n        \n  Report data\n  \n\n    \n\n      \n        Species\n        \n        \n          \n            {{option.name}}\n          \n        \n        \n               {{ s.name }} \n            -->\n      \n\n      \n        Select monitoring method\n        \n           {{ m }} \n        \n      \n\n      \n        Total Individuals\n        \n      \n\n\n      \n        Females (optional)\n        \n         Cannot exceed total ({{input.value?.length || 0}}/10)\n      \n\n\n      \n        Males (optional)\n        \n         Cannot exceed total ({{input.value?.length || 0}}/10)\n      \n\n      \n        Offspring (optional)\n        \n         Cannot exceed total ({{input.value?.length || 0}}/10)\n      \n\n      \n        Date\n        \n      \n\n      \n        Time\n        \n      \n\n      \n        Comment\n        \n      \n\n\n    \n\n     -->\n\n    Cancel\n    Save \n\n  \n\n    \n\n    \n                \n                    ./manualreporting.component.scss\n                \n                .container {\n  padding: 16px;\n}\nform{\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n}\n.example-full-width {\n  width: 100%;\n}\n.flex{\n  display: inline-flex\n}\nmat-spinner{\n  margin: auto ;\n  margin-left: 8px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Report data                    Species                                      {{option.name}}                                         {{ s.name }}             -->                    Select monitoring method                   {{ m }}                             Total Individuals                            Females (optional)                 Cannot exceed total ({{input.value?.length || 0}}/10)                    Males (optional)                 Cannot exceed total ({{input.value?.length || 0}}/10)                    Offspring (optional)                 Cannot exceed total ({{input.value?.length || 0}}/10)                    Date                            Time                            Comment                       -->    Cancel    Save   '\n    var COMPONENTS = [{'name': 'AdddeviceComponent', 'selector': 'app-adddevice'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetectionlistComponent', 'selector': 'app-detectionlist'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManualreportingComponent', 'selector': 'app-manualreporting'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManualreportingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapMarkerService.html":{"url":"injectables/MapMarkerService.html","title":"injectable - MapMarkerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapMarkerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/marker-services/map-marker.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _addLocationInput\n                            \n                            \n                                _addSearchBar\n                            \n                            \n                                    Private\n                                addInputToggle\n                            \n                            \n                                addLocationInput\n                            \n                            \n                                addSearchBar\n                            \n                            \n                                allowInputMarkers\n                            \n                            \n                                getBoxMarkers\n                            \n                            \n                                getWildlifeMarkers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, locationService: LocationService, boxApi: BoxApiService, boxMarker: BoxMarkerService, detectionApi: WildlifeDetectionApiService, detectionMarker: DetectionMarkerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/marker-services/map-marker.service.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locationService\n                                                  \n                                                        \n                                                                        LocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        boxApi\n                                                  \n                                                        \n                                                                        BoxApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        boxMarker\n                                                  \n                                                        \n                                                                        BoxMarkerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detectionApi\n                                                  \n                                                        \n                                                                        WildlifeDetectionApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detectionMarker\n                                                  \n                                                        \n                                                                        DetectionMarkerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _addLocationInput\n                        \n                        \n                    \n                \n            \n            \n                \n_addLocationInput()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/map-marker.service.ts:286\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _addSearchBar\n                        \n                        \n                    \n                \n            \n            \n                \n_addSearchBar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/map-marker.service.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addInputToggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addInputToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/map-marker.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addLocationInput\n                        \n                        \n                    \n                \n            \n            \n                \naddLocationInput(map: L.Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/map-marker.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                            L.Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSearchBar\n                        \n                        \n                    \n                \n            \n            \n                \naddSearchBar(mapLeaf: L.Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/map-marker.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapLeaf\n                                    \n                                            L.Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allowInputMarkers\n                        \n                        \n                    \n                \n            \n            \n                \nallowInputMarkers(map: L.Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/map-marker.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                            L.Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBoxMarkers\n                        \n                        \n                    \n                \n            \n            \n                \ngetBoxMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/map-marker.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWildlifeMarkers\n                        \n                        \n                    \n                \n            \n            \n                \ngetWildlifeMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker-services/map-marker.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport * as L from 'leaflet'\nimport { debounceTime, Observable, of, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { Box } from 'src/app/interfaces/box';\nimport { WildlifeDetection } from 'src/app/interfaces/WildlifeDetection';\n\nimport { BoxApiService } from '../api-services/box-api/box-api.service';\nimport { WildlifeDetectionApiService } from '../api-services/wildlife-detection-api/wildlife-detection-api.service';\nimport { LocationService } from '../location.service';\nimport { BoxMarkerService } from './box-marker.service';\nimport { DetectionMarkerService } from './detection-marker.service';\n\ninterface SearchResult {\n    place_id: number;\n    address: Address;\n    boundingbox: BoundingBox;\n    class: string;\n    display_name: string;\n    icon: string;\n    importance: number;\n    lat: string;\n    lon: string;\n    osm_id: number;\n    osm_type: string;\n    type: string;\n    [x: string]: any;\n}\n\ninterface Address {\n    \"ISO3166-2lvl4\": string;\n    city: string;\n    country: string;\n    country_code: string;\n    county: string;\n    highway: string;\n    postcode: string;\n    road: string;\n    state: string;\n    village: string;\n    [x: string]: any;\n}\n\ninterface BoundingBox {\n    0: string;\n    1: string;\n    2: string;\n    3: string;\n}\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MapMarkerService {\n\n    constructor(private http: HttpClient,\n        private locationService: LocationService,\n        private boxApi: BoxApiService,\n        private boxMarker: BoxMarkerService,\n        private detectionApi: WildlifeDetectionApiService,\n        private detectionMarker: DetectionMarkerService) {\n        this.addInputToggle();\n        this._addSearchBar();\n        this._addLocationInput();\n\n    }\n\n    getBoxMarkers(): Observable[]> {\n        return this.boxApi.getBoxes().pipe(\n            map(bs => this.boxMarker.createMarkers(bs))\n        );\n\n\n        /*this.http.get(this.mockDataBoxPath).subscribe((res: Box[]) => {\n            for (const box of res) {\n                const lat = box.location_lat;\n                const long = box.location_long;\n                let strokeColor: string = '#ff3333';\n                if (box.battery_status > 75) {\n                    strokeColor = '#305D63';\n                } else if (box.battery_status > 33) {\n                    strokeColor = '#5E8B7E'\n                }\n                L.circle([lat, long], { radius: 3000, color: strokeColor })\n                    .bindPopup(String(boxPopup(box)))\n                    .addTo(map);\n            }\n        });*/\n    }\n\n    getWildlifeMarkers(): Observable[]> {\n        return this.detectionApi.getwildlifeData().pipe(\n            map(dts => this.detectionMarker.createMarkers(dts))\n        );\n\n        /* this.http.get(this.poisPath).subscribe((res: Position[]): void => {\n            for (const position of res) {\n                const lat = position.locationLat;\n                const long = position.locationLong;\n\n                let marker_options: L.MarkerOptions = {};\n\n                marker_options['icon'] = getIconWithIconUrl(position);\n                L.marker([lat, long], marker_options)\n                    .bindPopup(String(positionPopup(position)))\n                    .addTo(map);\n            }\n        });*/\n    }\n\n    allowInputMarkers(map: L.Map): void {\n        // (L.control as any).toggleInput().addTo(map);\n    }\n\n    addSearchBar(mapLeaf: L.Map) {\n        (L.control as any).searchbar({ httpClient: this.http }).addTo(mapLeaf);\n    }\n\n    addLocationInput(map: L.Map) {\n        (L.control as any).locationInput({ locationService: this.locationService }).addTo(map);\n    }\n\n    private addInputToggle(): any {\n\n        (L.Control as any).ToggleInput = L.Control.extend({\n            options: {\n                position: 'topright',\n            },\n            onAdd: function (map: L.Map) {\n\n                let marker: L.Marker;\n                let checked = false;\n                var controlDiv = L.DomUtil.create('div');\n                var controlUI = L.DomUtil.create('div', 'leaflet-control-toggle', controlDiv);\n\n                controlUI.title = 'Choose Location';\n\n                var label = L.DomUtil.create('label', 'label', controlUI);\n                label.innerText = '+';\n\n                const markerAddToggleHandler = (e: L.LeafletMouseEvent) => {\n                    if (marker) marker.remove();\n                    marker = L.marker(e.latlng).addTo(map);\n                    marker.feature = { properties: { isLocationPicker: true }, type: \"Feature\", geometry: { coordinates: [e.latlng.lat, e.latlng.lng], type: 'Point' } };\n\n                    map.fireEvent('location-picked', e.latlng);\n\n                    marker.on('click', (e: L.LeafletMouseEvent) => {\n                        marker.remove();\n                        controlUI.classList.remove('leaflet-control-toggle-active');\n                        label.innerText = '+';\n                    });\n                    checked = false;\n                    label.innerText = '';\n                    label.innerHTML = '&check;';\n                }\n\n                L.DomEvent\n                    .addListener(label, 'click', L.DomEvent.stopPropagation)\n                    .addListener(label, 'click', L.DomEvent.preventDefault)\n                    .addListener(label, 'click', function (e: any) {\n                        if (!checked) {\n                            checked = true;\n                            controlUI.classList.add('leaflet-control-toggle-active')\n                            map.once('click', markerAddToggleHandler);\n                            label.innerText = '+';\n                        }\n                        checked = !checked\n                    });\n\n\n                return controlDiv;\n            }\n        });\n\n        (L.control as any).toggleInput = function (options: any) {\n            return new (L.Control as any).ToggleInput(options);\n        };\n\n    }\n\n    _addSearchBar() {\n        (L.Control as any).Searchbar = L.Control.extend({\n            options: {\n                position: 'topleft',\n            },\n\n            onAdd: function (map: L.Map) {\n\n                let subject = new Subject();\n                let subscription = new Subscription();\n                let resultSubject = new Subject();\n\n                let makeSearchCall = (text: string): Observable => {\n                    console.log('Get Request')\n                    if (text.length > 0) {\n                        return ((this.options as any).httpClient as HttpClient).get('https://nominatim.openstreetmap.org/search?q=' + text + '&format=json&polygon=1&addressdetails=1')\n                    } else {\n                        return of([]);\n                    }\n                };\n\n                subscription = subject.pipe(\n                    filter(searchText => searchText.length > 2),\n                    debounceTime(1100),\n                    distinctUntilChanged(),\n                ).subscribe(\n                    (searchText: string) => {\n                        makeSearchCall(searchText).subscribe({\n                            next: (res: SearchResult[]) => {\n                                resultSubject.next(res);\n                            },\n                            error: (err: any) => {\n                                console.error(err);\n                            }\n                        }\n                        );\n                    }\n                );\n\n                var controlDiv = L.DomUtil.create('div');\n                var controlUI = L.DomUtil.create('div', 'leaflet-control-searchbar', controlDiv);\n                controlUI.title = 'Search';\n                var input = L.DomUtil.create('input', 'searchbar-input', controlUI);\n                var icon = L.DomUtil.create('img', 'searchbar-icon', controlUI);\n                icon.src = 'assets/icons/search.png';\n                L.DomEvent\n                    .addListener(input, 'keyup', L.DomEvent.stopPropagation)\n                    .addListener(input, 'keyup', L.DomEvent.preventDefault)\n                    .addListener(input, 'keyup', function (e: any) {\n                        const searchText = e.target.value;\n                        subject.next(searchText);\n                    });\n\n                var blur_time: any;\n                var resultsDiv = L.DomUtil.create('div', 'search-results', controlUI);\n                resultSubject.subscribe(results => {\n                    resultsDiv.innerHTML = '';\n                    let names: string[] = [];\n                    for (const result of results) {\n                        if (names.includes(result.display_name) || names.length == 5) {\n                            continue;\n                        }\n                        names.push(result.display_name);\n                        let a = L.DomUtil.create('a', 'search-result', resultsDiv);\n                        let img = L.DomUtil.create('img', 'search-result-img', a);\n                        if (result.icon) {\n                            img.src = result.icon;\n                        } else {\n                            img.src = \"data:image/svg+xml;charset=utf8,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%3E%3C/svg%3E\"; //empty image\n                            img.alt = ''\n                        }\n                        let a_span = L.DomUtil.create('span', '', a);\n                        a_span.innerText = result.display_name;\n                        L.DomEvent\n                            .addListener(a, 'click', L.DomEvent.stopPropagation)\n                            .addListener(a, 'click', L.DomEvent.preventDefault)\n                            .addListener(a_span, 'click', function (e: any) {\n                                map.flyToBounds([[+result.boundingbox[0], +result.boundingbox[2]], [+result.boundingbox[1], +result.boundingbox[3]]]);\n                                input.innerText = result.display_name;\n                                resultsDiv.classList.add('hidden');\n                            });\n                    }\n                });\n                L.DomEvent.addListener(input, 'focus', function (e: any) {\n                    if (blur_time) clearTimeout(blur_time);\n                    resultsDiv.classList.remove('hidden');\n                });\n                L.DomEvent.addListener(input, 'blur', function (e: any) {\n                    blur_time = setTimeout(() => { resultsDiv.classList.add('hidden'); }, 100);\n\n                })\n                return controlDiv;\n            }\n        });\n\n        (L.control as any).searchbar = function (options: any) {\n            return new (L.Control as any).Searchbar(options);\n        };\n    }\n\n    _addLocationInput() {\n        (L.Control as any).LocationInput = L.Control.extend({\n            options: {\n                position: 'bottomright',\n            },\n            onAdd: function (map: L.Map) {\n\n                var controlDiv = L.DomUtil.create('div');\n                var controlUI = L.DomUtil.create('div', 'leaflet-control-toggle', controlDiv);\n                controlUI.title = 'Add Data';\n                var button = L.DomUtil.create('button', 'mat-mini-fab', controlUI);\n                button.setAttribute('mat-mini-fab', '');\n                button.setAttribute('color', 'primary');\n                button.setAttribute('aria-label', 'Get User Location');\n                button.innerHTML = 'location_disabled';\n\n                var is_active = false;\n                const turnLocationOn = () => {\n                    ((this.options as any).locationService as LocationService).locate(map);\n                }\n                const turnLocationOff = () => {\n                    ((this.options as any).locationService as LocationService).stopLocaton(map);\n                }\n\n                L.DomEvent\n                    .addListener(button, 'click', L.DomEvent.stopPropagation)\n                    .addListener(button, 'click', L.DomEvent.preventDefault)\n                    .addListener(button, 'click', function (e: any) {\n                        if (!is_active) {\n                            is_active = true;\n                            turnLocationOn();\n                            button.innerHTML = 'my_location';\n                        } else {\n                            is_active = false;\n                            button.innerHTML = 'location_disabled';\n                            turnLocationOff()\n                        }\n                    });\n\n\n                return controlDiv;\n            }\n        });\n\n        (L.control as any).locationInput = function (options: any) {\n            return new (L.Control as any).LocationInput(options);\n        };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Position.html":{"url":"interfaces/Position.html","title":"interface - Position","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Position\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/position.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animalId\n                                \n                                \n                                        animalName\n                                \n                                \n                                        female\n                                \n                                \n                                        icon\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        locationLat\n                                \n                                \n                                        locationLong\n                                \n                                \n                                        male\n                                \n                                \n                                        media\n                                \n                                \n                                        mediaType\n                                \n                                \n                                        method\n                                \n                                \n                                        offspring\n                                \n                                \n                                        recordedAt\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animalId\n                                    \n                                \n                                \n                                    \n                                        animalId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        animalName\n                                    \n                                \n                                \n                                    \n                                        animalName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        female\n                                    \n                                \n                                \n                                    \n                                        female:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locationLat\n                                    \n                                \n                                \n                                    \n                                        locationLat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locationLong\n                                    \n                                \n                                \n                                    \n                                        locationLong:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        male\n                                    \n                                \n                                \n                                    \n                                        male:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                    \n                                \n                                \n                                    \n                                        media:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mediaType\n                                    \n                                \n                                \n                                    \n                                        mediaType:     \"img\" | \"audio\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"img\" | \"audio\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offspring\n                                    \n                                \n                                \n                                    \n                                        offspring:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recordedAt\n                                    \n                                \n                                \n                                    \n                                        recordedAt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Position {\n    id?: number;\n    animalId: number;\n    animalName: string;\n    method: string;\n    media: string;\n    locationLong: number;\n    locationLat: number;\n    recordedAt: number;\n    total: number;\n    female: number;\n    male: number;\n    offspring: number;\n    mediaType: \"img\"|\"audio\";\n    icon: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PublicApiService.html":{"url":"injectables/PublicApiService.html","title":"injectable - PublicApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PublicApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-services/public-api/public-api.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animals$\n                            \n                            \n                                    Private\n                                methods$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAnimals\n                            \n                            \n                                getDetectionMethods\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, client: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-services/public-api/public-api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAnimals\n                        \n                        \n                    \n                \n            \n            \n                \ngetAnimals()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-services/public-api/public-api.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDetectionMethods\n                        \n                        \n                    \n                \n            \n            \n                \ngetDetectionMethods()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-services/public-api/public-api.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            animals$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-services/public-api/public-api.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            methods$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-services/public-api/public-api.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable, shareReplay } from 'rxjs';\nimport { Animal } from 'src/app/interfaces/animal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublicApiService {\n\n  private methods$: Observable;\n  private animals$: Observable;\n\n  constructor(@Inject(\"BACKEND_URL\") private url: string, private client: HttpClient) { }\n\n\n  getDetectionMethods(): Observable {\n    return this.methods$ = this.methods$ ?? this.client.get(`${this.url}/public/methods`).pipe(\n      shareReplay(1)\n    );\n  }\n\n  getAnimals(): Observable {\n    return this.animals$ = this.animals$ ?? this.client.get(`${this.url}/public/animals`).pipe(\n      shareReplay(1)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RainViewerImagePathResponse.html":{"url":"interfaces/RainViewerImagePathResponse.html","title":"interface - RainViewerImagePathResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RainViewerImagePathResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/RainViewerImagePathResponse.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        generated\n                                \n                                \n                                        host\n                                \n                                \n                                        radar\n                                \n                                \n                                        satellite\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        generated\n                                    \n                                \n                                \n                                    \n                                        generated:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radar\n                                    \n                                \n                                \n                                    \n                                        radar:         RainViewerRadaObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RainViewerRadaObject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        satellite\n                                    \n                                \n                                \n                                    \n                                        satellite:         RainViewerSatelliteObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RainViewerSatelliteObject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RainViewerImagePathResponse{\n    version: string,\n    generated: number,\n    host: string,\n    radar: RainViewerRadaObject,\n    satellite: RainViewerSatelliteObject,\n}\n\ninterface RainViewerRadaObject {\n    past: TimePath[],\n    nowcast: TimePath[]\n}\n\ninterface RainViewerSatelliteObject {\n    infrared: TimePath[]\n}\n\ninterface TimePath {\n    time: Date,\n    path: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RainViewerRadaObject.html":{"url":"interfaces/RainViewerRadaObject.html","title":"interface - RainViewerRadaObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RainViewerRadaObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/RainViewerImagePathResponse.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        nowcast\n                                \n                                \n                                        past\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nowcast\n                                    \n                                \n                                \n                                    \n                                        nowcast:         TimePath[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimePath[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        past\n                                    \n                                \n                                \n                                    \n                                        past:         TimePath[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimePath[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RainViewerImagePathResponse{\n    version: string,\n    generated: number,\n    host: string,\n    radar: RainViewerRadaObject,\n    satellite: RainViewerSatelliteObject,\n}\n\ninterface RainViewerRadaObject {\n    past: TimePath[],\n    nowcast: TimePath[]\n}\n\ninterface RainViewerSatelliteObject {\n    infrared: TimePath[]\n}\n\ninterface TimePath {\n    time: Date,\n    path: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RainViewerSatelliteObject.html":{"url":"interfaces/RainViewerSatelliteObject.html","title":"interface - RainViewerSatelliteObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RainViewerSatelliteObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/RainViewerImagePathResponse.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        infrared\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        infrared\n                                    \n                                \n                                \n                                    \n                                        infrared:         TimePath[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimePath[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RainViewerImagePathResponse{\n    version: string,\n    generated: number,\n    host: string,\n    radar: RainViewerRadaObject,\n    satellite: RainViewerSatelliteObject,\n}\n\ninterface RainViewerRadaObject {\n    past: TimePath[],\n    nowcast: TimePath[]\n}\n\ninterface RainViewerSatelliteObject {\n    infrared: TimePath[]\n}\n\ninterface TimePath {\n    time: Date,\n    path: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RainviewermapService.html":{"url":"injectables/RainviewermapService.html","title":"injectable - RainviewermapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RainviewermapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-services/rainviewermap.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _checkCoverage\n                            \n                            \n                                getAPIImagePath\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-services/rainviewermap.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _checkCoverage\n                        \n                        \n                    \n                \n            \n            \n                \n_checkCoverage(control: L.Control.Layers)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-services/rainviewermap.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            L.Control.Layers\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAPIImagePath\n                        \n                        \n                    \n                \n            \n            \n                \ngetAPIImagePath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-services/rainviewermap.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit(control: L.Control.Layers)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-services/rainviewermap.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            L.Control.Layers\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as L from 'leaflet'\nimport { RainViewerImagePathResponse } from 'src/app/interfaces/RainViewerImagePathResponse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RainviewermapService {\n\n  constructor(private http: HttpClient) { }\n\n  _checkCoverage(control: L.Control.Layers): void {\n    let path = 'https://tilecache.rainviewer.com/v2/coverage/0/256/{z}/{x}/{y}/0/0_0.png';\n    const tile = L.tileLayer(path, { attribution: '&copy; RainViewer' });\n\n    control.addOverlay(tile, \"RainViewer Coverage\");\n  }\n\n  init(control: L.Control.Layers) {\n    this.getAPIImagePath().then(path => {\n      let APIPath = `https://tilecache.rainviewer.com/v2/radar/${path}/512/{z}/{x}/{y}/1/0_0.png`;\n    const tile = L.tileLayer(APIPath, { attribution: '&copy; RainViewer' });\n\n    control.addOverlay(tile, \"Rain\");\n    });\n\n  }\n\n  getAPIImagePath(): Promise {\n    return new Promise((resolve, reject) => {\n      this.http.get('https://api.rainviewer.com/public/weather-maps.json').subscribe(\n        {\n          next: (data: RainViewerImagePathResponse) => {\n            resolve(data.radar.nowcast[0].path)\n          },\n          error: (err: any) => {console.error(err)}\n        }\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Report.html":{"url":"interfaces/Report.html","title":"interface - Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/report.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animalId\n                                \n                                \n                                        comment\n                                \n                                \n                                        detectedAt\n                                \n                                \n                                        female\n                                \n                                \n                                        locationLat\n                                \n                                \n                                        locationLong\n                                \n                                \n                                        male\n                                \n                                \n                                        method\n                                \n                                \n                                        offspring\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animalId\n                                    \n                                \n                                \n                                    \n                                        animalId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        detectedAt\n                                    \n                                \n                                \n                                    \n                                        detectedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        female\n                                    \n                                \n                                \n                                    \n                                        female:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locationLat\n                                    \n                                \n                                \n                                    \n                                        locationLat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locationLong\n                                    \n                                \n                                \n                                    \n                                        locationLong:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        male\n                                    \n                                \n                                \n                                    \n                                        male:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offspring\n                                    \n                                \n                                \n                                    \n                                        offspring:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Report {\n  animalId: number\n  method: string\n  detectedAt: string\n  locationLat: number\n  locationLong: number\n  comment: string\n  total: number\n  female: number\n  male: number\n  offspring: number\n}\n\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/marker-services/map-marker.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        boundingbox\n                                \n                                \n                                        class\n                                \n                                \n                                        display_name\n                                \n                                \n                                        icon\n                                \n                                \n                                        importance\n                                \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                                \n                                        osm_id\n                                \n                                \n                                        osm_type\n                                \n                                \n                                        place_id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [x: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/services/marker-services/map-marker.service.ts:29\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        boundingbox\n                                    \n                                \n                                \n                                    \n                                        boundingbox:         BoundingBox\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BoundingBox\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_name\n                                    \n                                \n                                \n                                    \n                                        display_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        importance\n                                    \n                                \n                                \n                                    \n                                        importance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        osm_id\n                                    \n                                \n                                \n                                    \n                                        osm_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        osm_type\n                                    \n                                \n                                \n                                    \n                                        osm_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        place_id\n                                    \n                                \n                                \n                                    \n                                        place_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport * as L from 'leaflet'\nimport { debounceTime, Observable, of, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { Box } from 'src/app/interfaces/box';\nimport { WildlifeDetection } from 'src/app/interfaces/WildlifeDetection';\n\nimport { BoxApiService } from '../api-services/box-api/box-api.service';\nimport { WildlifeDetectionApiService } from '../api-services/wildlife-detection-api/wildlife-detection-api.service';\nimport { LocationService } from '../location.service';\nimport { BoxMarkerService } from './box-marker.service';\nimport { DetectionMarkerService } from './detection-marker.service';\n\ninterface SearchResult {\n    place_id: number;\n    address: Address;\n    boundingbox: BoundingBox;\n    class: string;\n    display_name: string;\n    icon: string;\n    importance: number;\n    lat: string;\n    lon: string;\n    osm_id: number;\n    osm_type: string;\n    type: string;\n    [x: string]: any;\n}\n\ninterface Address {\n    \"ISO3166-2lvl4\": string;\n    city: string;\n    country: string;\n    country_code: string;\n    county: string;\n    highway: string;\n    postcode: string;\n    road: string;\n    state: string;\n    village: string;\n    [x: string]: any;\n}\n\ninterface BoundingBox {\n    0: string;\n    1: string;\n    2: string;\n    3: string;\n}\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MapMarkerService {\n\n    constructor(private http: HttpClient,\n        private locationService: LocationService,\n        private boxApi: BoxApiService,\n        private boxMarker: BoxMarkerService,\n        private detectionApi: WildlifeDetectionApiService,\n        private detectionMarker: DetectionMarkerService) {\n        this.addInputToggle();\n        this._addSearchBar();\n        this._addLocationInput();\n\n    }\n\n    getBoxMarkers(): Observable[]> {\n        return this.boxApi.getBoxes().pipe(\n            map(bs => this.boxMarker.createMarkers(bs))\n        );\n\n\n        /*this.http.get(this.mockDataBoxPath).subscribe((res: Box[]) => {\n            for (const box of res) {\n                const lat = box.location_lat;\n                const long = box.location_long;\n                let strokeColor: string = '#ff3333';\n                if (box.battery_status > 75) {\n                    strokeColor = '#305D63';\n                } else if (box.battery_status > 33) {\n                    strokeColor = '#5E8B7E'\n                }\n                L.circle([lat, long], { radius: 3000, color: strokeColor })\n                    .bindPopup(String(boxPopup(box)))\n                    .addTo(map);\n            }\n        });*/\n    }\n\n    getWildlifeMarkers(): Observable[]> {\n        return this.detectionApi.getwildlifeData().pipe(\n            map(dts => this.detectionMarker.createMarkers(dts))\n        );\n\n        /* this.http.get(this.poisPath).subscribe((res: Position[]): void => {\n            for (const position of res) {\n                const lat = position.locationLat;\n                const long = position.locationLong;\n\n                let marker_options: L.MarkerOptions = {};\n\n                marker_options['icon'] = getIconWithIconUrl(position);\n                L.marker([lat, long], marker_options)\n                    .bindPopup(String(positionPopup(position)))\n                    .addTo(map);\n            }\n        });*/\n    }\n\n    allowInputMarkers(map: L.Map): void {\n        // (L.control as any).toggleInput().addTo(map);\n    }\n\n    addSearchBar(mapLeaf: L.Map) {\n        (L.control as any).searchbar({ httpClient: this.http }).addTo(mapLeaf);\n    }\n\n    addLocationInput(map: L.Map) {\n        (L.control as any).locationInput({ locationService: this.locationService }).addTo(map);\n    }\n\n    private addInputToggle(): any {\n\n        (L.Control as any).ToggleInput = L.Control.extend({\n            options: {\n                position: 'topright',\n            },\n            onAdd: function (map: L.Map) {\n\n                let marker: L.Marker;\n                let checked = false;\n                var controlDiv = L.DomUtil.create('div');\n                var controlUI = L.DomUtil.create('div', 'leaflet-control-toggle', controlDiv);\n\n                controlUI.title = 'Choose Location';\n\n                var label = L.DomUtil.create('label', 'label', controlUI);\n                label.innerText = '+';\n\n                const markerAddToggleHandler = (e: L.LeafletMouseEvent) => {\n                    if (marker) marker.remove();\n                    marker = L.marker(e.latlng).addTo(map);\n                    marker.feature = { properties: { isLocationPicker: true }, type: \"Feature\", geometry: { coordinates: [e.latlng.lat, e.latlng.lng], type: 'Point' } };\n\n                    map.fireEvent('location-picked', e.latlng);\n\n                    marker.on('click', (e: L.LeafletMouseEvent) => {\n                        marker.remove();\n                        controlUI.classList.remove('leaflet-control-toggle-active');\n                        label.innerText = '+';\n                    });\n                    checked = false;\n                    label.innerText = '';\n                    label.innerHTML = '&check;';\n                }\n\n                L.DomEvent\n                    .addListener(label, 'click', L.DomEvent.stopPropagation)\n                    .addListener(label, 'click', L.DomEvent.preventDefault)\n                    .addListener(label, 'click', function (e: any) {\n                        if (!checked) {\n                            checked = true;\n                            controlUI.classList.add('leaflet-control-toggle-active')\n                            map.once('click', markerAddToggleHandler);\n                            label.innerText = '+';\n                        }\n                        checked = !checked\n                    });\n\n\n                return controlDiv;\n            }\n        });\n\n        (L.control as any).toggleInput = function (options: any) {\n            return new (L.Control as any).ToggleInput(options);\n        };\n\n    }\n\n    _addSearchBar() {\n        (L.Control as any).Searchbar = L.Control.extend({\n            options: {\n                position: 'topleft',\n            },\n\n            onAdd: function (map: L.Map) {\n\n                let subject = new Subject();\n                let subscription = new Subscription();\n                let resultSubject = new Subject();\n\n                let makeSearchCall = (text: string): Observable => {\n                    console.log('Get Request')\n                    if (text.length > 0) {\n                        return ((this.options as any).httpClient as HttpClient).get('https://nominatim.openstreetmap.org/search?q=' + text + '&format=json&polygon=1&addressdetails=1')\n                    } else {\n                        return of([]);\n                    }\n                };\n\n                subscription = subject.pipe(\n                    filter(searchText => searchText.length > 2),\n                    debounceTime(1100),\n                    distinctUntilChanged(),\n                ).subscribe(\n                    (searchText: string) => {\n                        makeSearchCall(searchText).subscribe({\n                            next: (res: SearchResult[]) => {\n                                resultSubject.next(res);\n                            },\n                            error: (err: any) => {\n                                console.error(err);\n                            }\n                        }\n                        );\n                    }\n                );\n\n                var controlDiv = L.DomUtil.create('div');\n                var controlUI = L.DomUtil.create('div', 'leaflet-control-searchbar', controlDiv);\n                controlUI.title = 'Search';\n                var input = L.DomUtil.create('input', 'searchbar-input', controlUI);\n                var icon = L.DomUtil.create('img', 'searchbar-icon', controlUI);\n                icon.src = 'assets/icons/search.png';\n                L.DomEvent\n                    .addListener(input, 'keyup', L.DomEvent.stopPropagation)\n                    .addListener(input, 'keyup', L.DomEvent.preventDefault)\n                    .addListener(input, 'keyup', function (e: any) {\n                        const searchText = e.target.value;\n                        subject.next(searchText);\n                    });\n\n                var blur_time: any;\n                var resultsDiv = L.DomUtil.create('div', 'search-results', controlUI);\n                resultSubject.subscribe(results => {\n                    resultsDiv.innerHTML = '';\n                    let names: string[] = [];\n                    for (const result of results) {\n                        if (names.includes(result.display_name) || names.length == 5) {\n                            continue;\n                        }\n                        names.push(result.display_name);\n                        let a = L.DomUtil.create('a', 'search-result', resultsDiv);\n                        let img = L.DomUtil.create('img', 'search-result-img', a);\n                        if (result.icon) {\n                            img.src = result.icon;\n                        } else {\n                            img.src = \"data:image/svg+xml;charset=utf8,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%3E%3C/svg%3E\"; //empty image\n                            img.alt = ''\n                        }\n                        let a_span = L.DomUtil.create('span', '', a);\n                        a_span.innerText = result.display_name;\n                        L.DomEvent\n                            .addListener(a, 'click', L.DomEvent.stopPropagation)\n                            .addListener(a, 'click', L.DomEvent.preventDefault)\n                            .addListener(a_span, 'click', function (e: any) {\n                                map.flyToBounds([[+result.boundingbox[0], +result.boundingbox[2]], [+result.boundingbox[1], +result.boundingbox[3]]]);\n                                input.innerText = result.display_name;\n                                resultsDiv.classList.add('hidden');\n                            });\n                    }\n                });\n                L.DomEvent.addListener(input, 'focus', function (e: any) {\n                    if (blur_time) clearTimeout(blur_time);\n                    resultsDiv.classList.remove('hidden');\n                });\n                L.DomEvent.addListener(input, 'blur', function (e: any) {\n                    blur_time = setTimeout(() => { resultsDiv.classList.add('hidden'); }, 100);\n\n                })\n                return controlDiv;\n            }\n        });\n\n        (L.control as any).searchbar = function (options: any) {\n            return new (L.Control as any).Searchbar(options);\n        };\n    }\n\n    _addLocationInput() {\n        (L.Control as any).LocationInput = L.Control.extend({\n            options: {\n                position: 'bottomright',\n            },\n            onAdd: function (map: L.Map) {\n\n                var controlDiv = L.DomUtil.create('div');\n                var controlUI = L.DomUtil.create('div', 'leaflet-control-toggle', controlDiv);\n                controlUI.title = 'Add Data';\n                var button = L.DomUtil.create('button', 'mat-mini-fab', controlUI);\n                button.setAttribute('mat-mini-fab', '');\n                button.setAttribute('color', 'primary');\n                button.setAttribute('aria-label', 'Get User Location');\n                button.innerHTML = 'location_disabled';\n\n                var is_active = false;\n                const turnLocationOn = () => {\n                    ((this.options as any).locationService as LocationService).locate(map);\n                }\n                const turnLocationOff = () => {\n                    ((this.options as any).locationService as LocationService).stopLocaton(map);\n                }\n\n                L.DomEvent\n                    .addListener(button, 'click', L.DomEvent.stopPropagation)\n                    .addListener(button, 'click', L.DomEvent.preventDefault)\n                    .addListener(button, 'click', function (e: any) {\n                        if (!is_active) {\n                            is_active = true;\n                            turnLocationOn();\n                            button.innerHTML = 'my_location';\n                        } else {\n                            is_active = false;\n                            button.innerHTML = 'location_disabled';\n                            turnLocationOff()\n                        }\n                    });\n\n\n                return controlDiv;\n            }\n        });\n\n        (L.control as any).locationInput = function (options: any) {\n            return new (L.Control as any).LocationInput(options);\n        };\n    }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countries\n                            \n                            \n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getCurrentLocation\n                            \n                            \n                                getFlagEmoji\n                            \n                            \n                                    Private\n                                loadCountries\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthenticationService, router: Router, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/signup/signup.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCurrentLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signup/signup.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFlagEmoji\n                        \n                        \n                    \n                \n            \n            \n                \ngetFlagEmoji(countryCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signup/signup.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    countryCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadCountries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCountries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signup/signup.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signup/signup.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signup/signup.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            redirect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    redirect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signup/signup.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/signup/signup.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    email: ['', Validators.required],\n    password: ['', Validators.required],\n    country: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/signup/signup.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Country } from 'src/app/interfaces/country';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  signupForm = this.fb.group({\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    email: ['', Validators.required],\n    password: ['', Validators.required],\n    country: ['', Validators.required]\n  });\n\n  constructor(private fb: FormBuilder, private authService: AuthenticationService, private router: Router, private http: HttpClient) { }\n\n  countries: Country[] = [];\n\n  ngOnInit(): void {\n    if (this.authService.isLoggedIn()) {\n      this.redirect()\n    }\n\n    this.loadCountries();\n  };\n\n  onSubmit() {\n    const email: string = this.signupForm.value.email,\n      password: string = this.signupForm.value.password,\n      firstName: string = this.signupForm.value.firstName,\n      lastName: string = this.signupForm.value.lastName,\n      countryId: string = this.signupForm.value.country;\n\n    this.authService.signup(firstName, lastName, email, password, countryId).then((success) => {\n      this.redirect();\n    }).catch((err) => { console.log(err) })\n  }\n\n  private loadCountries() {\n    //TODO: Fetch from backend not from hardcoded list\n    const APICountryURL = 'https://api.synature.ch:443/api/public/countries';\n\n\n    this.http.get(APICountryURL).subscribe((res: Country[]) => {\n      this.countries = res;\n      this.getCurrentLocation();\n    });\n  }\n\n  private getCurrentLocation() {\n    const APIURL = 'https://ipapi.co/country';\n    this.http.get(APIURL, {responseType: \"text\"}).subscribe({\n      next: (data: any) => {\n        const currentCountry = this.countries.find(country => country.code === data);\n        if (currentCountry != null) {\n          this.signupForm.controls['country'].setValue(currentCountry?.id);\n        } else {\n          this.signupForm.controls['country'].setValue(this.countries.find(country => country.code === 'CH')?.id);\n        }\n      },\n      error: (err) => {\n        console.error(err);\n      }\n    });\n  }\n\n\n  private redirect() {\n  this.router.navigate(['/']);\n}\n\ngetFlagEmoji(countryCode: string) {\n  return countryCode.toUpperCase().replace(/./g, char =>\n    String.fromCodePoint(127397 + char.charCodeAt(0))\n  );\n}\n  \n}\n\n    \n\n    \n        \n    \n        \n        Welcome to the data mangement platform for\n            rangers and biologists\n        \n            Please Sign Up\n            \n                \n                    \n                        First Name\n                        \n                    \n                \n                \n                    \n                        Last Name\n                        \n                    \n                \n                \n                    \n                        Email\n                        \n                    \n                \n                \n                    \n                        Password\n                        \n                    \n                \n                \n                    \n                        \n                            \n                                {{getFlagEmoji(country.code)}} {{country.name}}\n                        \n                    \n                \n                Sign Up\n                Already have an account? Login!\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./signup.component.scss\n                \n                form {\n    display: flex;\n    flex-direction: column;\n    max-width: 800px;\n    width: 80vw;\n    margin:auto;\n    margin-top: 50px;\n}\nlabel {\n    display: block;\n    font-size: 1.4em;\n}\n\ninput {\n    margin: 0 0 15px 0;\n    width: 100%;\n    height: 1.4em;\n}\n\n.center {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    width: 50%;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Welcome to the data mangement platform for            rangers and biologists                    Please Sign Up                                                                        First Name                                                                                                                        Last Name                                                                                                                        Email                                                                                                                        Password                                                                                                                                                                                    {{getFlagEmoji(country.code)}} {{country.name}}                                                                            Sign Up                Already have an account? Login!                        '\n    var COMPONENTS = [{'name': 'AdddeviceComponent', 'selector': 'app-adddevice'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetectionlistComponent', 'selector': 'app-detectionlist'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManualreportingComponent', 'selector': 'app-manualreporting'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimePath.html":{"url":"interfaces/TimePath.html","title":"interface - TimePath","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimePath\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/RainViewerImagePathResponse.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        path\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RainViewerImagePathResponse{\n    version: string,\n    generated: number,\n    host: string,\n    radar: RainViewerRadaObject,\n    satellite: RainViewerSatelliteObject,\n}\n\ninterface RainViewerRadaObject {\n    past: TimePath[],\n    nowcast: TimePath[]\n}\n\ninterface RainViewerSatelliteObject {\n    infrared: TimePath[]\n}\n\ninterface TimePath {\n    time: Date,\n    path: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessToken\n                                \n                                \n                                        debugToken\n                                \n                                \n                                        expiresIn\n                                \n                                \n                                        message\n                                \n                                \n                                        refreshToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugToken\n                                    \n                                \n                                \n                                    \n                                        debugToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                    \n                                \n                                \n                                    \n                                        expiresIn:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\ninterface Token {\n  message:string;\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  debugToken: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  private apiUrl = 'https://api.synature.ch:443/api/accounts';\n  private refreshTimeout: ReturnType | null = null;\n\n  login(email: string, password: string): Promise{\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json', 'accept': 'application/json' }) };\n    return new Promise((resolve, reject) => {\n      let url = this.apiUrl + '/login';\n      this.httpClient.post(url, {email: email, password: password}, httpOptions).subscribe(\n        {\n          next: (data) => { this.setCookiesFromData(data); resolve(true)},\n          error: (err) => { console.error(err); reject(err)}\n        }\n      );\n    });\n  }\n\n  signup(firstName: string, lastName: string, email: string, password: string, countryId: string): Promise {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json', 'accept': 'application/json' }) };\n    return new Promise((resolve, reject) => {\n      let url = this.apiUrl + '/register';\n      this.httpClient.post(url, {firstName: firstName, lastName: lastName, email: email, password: password, countryId: countryId}, httpOptions).subscribe(\n        {\n          next: (data) => { console.log(data);this.setCookiesFromData(data); resolve(true)},\n          error: (err) => { console.error(err); reject(err)}\n        }\n      );\n    });\n  }\n\n  logout(): void {\n    console.log('logging out');\n    this.setCookie('token', '', new Date());\n    this.setCookie('refreshToken', '', new Date());\n    window.location.reload();\n  }\n\n  getToken(): string { \n    return this.readCookie('token')\n  }\n\n  isLoggedIn(): boolean {\n    return this.readCookie('token').length > 0;\n  }\n\n  refreshToken(): Promise {\n    if (this.readCookie('token') === \"\") {\n      return new Promise((_, reject) => {\n        reject(false);\n      });\n    }\n    const httpOptions = { headers: new HttpHeaders({ Authorization: `Bearer ${this.readCookie('refreshToken')}`, 'Content-Type': 'application/json', 'accept': 'application/json' }) };\n    return new Promise((resolve, reject) => {\n      let url = this.apiUrl + '/token/refresh';\n      this.httpClient.get(url, httpOptions).subscribe(\n        {\n          next: (data) => { this.setCookiesFromData(data); resolve(true)},\n          error: (err) => { console.error(err); reject(err)}\n        }\n      );\n    });\n  }\n\n  setRefreshTimeoutFromCookieIfLoggedIn(): void {\n    if (this.isLoggedIn()) {\n      const expires: Date = new Date(this.readCookie('tokenExpires'));\n      let timeDelta = expires.getTime() - Date.now();\n      timeDelta /= 1000;\n      timeDelta = Math.max(timeDelta, 0);\n      this.setRefreshTimeout(timeDelta);\n    }\n  }\n\n  private setCookiesFromData(data: Token) {\n    let expirationDate = new Date();\n    expirationDate = new Date(expirationDate.setSeconds(expirationDate.getSeconds() + data.expiresIn));\n    this.setCookie('token', data.accessToken, expirationDate);\n    this.setCookie('refreshToken', data.refreshToken, expirationDate);\n    this.setCookie('tokenExpires', expirationDate.toUTCString(), expirationDate);\n    this.setRefreshTimeout(data.expiresIn);\n  }\n\n  private setRefreshTimeout(expirationSeconds: number) {\n    if (this.refreshTimeout) { \n      clearTimeout(this.refreshTimeout);\n    }\n    this.refreshTimeout = setTimeout(() => this.refreshToken(), (expirationSeconds-60)*1000);\n  }\n\n  private readCookie(name: string): string {\n    let cookieStr = document.cookie;\n    let cookies = cookieStr.split(\";\");\n    for (let cookie of cookies) {\n      let cookieName = cookie.split(\"=\")[0].trim();\n      if (cookieName === name) {\n        return cookie.split(\"=\")[1];\n      }\n    }\n    return \"\";\n  }\n\n  private setCookie(name: string, value: string, expires?: Date): void {\n    let cookieStr = name + \"=\" + value;\n    cookieStr += \";SameSite=Strict\";\n    if (expires) {\n      cookieStr += \";expires=\" + expires.toUTCString();\n    }\n    document.cookie = cookieStr;\n  }\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WildlifeDetection.html":{"url":"interfaces/WildlifeDetection.html","title":"interface - WildlifeDetection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WildlifeDetection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/WildlifeDetection.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animalName\n                                \n                                \n                                        comment\n                                \n                                \n                                        description\n                                \n                                \n                                        female\n                                \n                                \n                                        icon\n                                \n                                \n                                        locationLat\n                                \n                                \n                                        locationLong\n                                \n                                \n                                        male\n                                \n                                \n                                        media\n                                \n                                \n                                        mediaType\n                                \n                                \n                                        method\n                                \n                                \n                                        offspring\n                                \n                                \n                                        recordedAt\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animalName\n                                    \n                                \n                                \n                                    \n                                        animalName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        female\n                                    \n                                \n                                \n                                    \n                                        female:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locationLat\n                                    \n                                \n                                \n                                    \n                                        locationLat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locationLong\n                                    \n                                \n                                \n                                    \n                                        locationLong:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        male\n                                    \n                                \n                                \n                                    \n                                        male:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                    \n                                \n                                \n                                    \n                                        media:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mediaType\n                                    \n                                \n                                \n                                    \n                                        mediaType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offspring\n                                    \n                                \n                                \n                                    \n                                        offspring:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recordedAt\n                                    \n                                \n                                \n                                    \n                                        recordedAt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WildlifeDetection {\n  recordedAt: number;\n  animalName: string;\n  method: string;\n  total: number;\n  description: string;\n  icon: string;\n  female: number;\n  male: number;\n  offspring: number;\n  locationLong: number;\n  locationLat: number;\n  media: string;\n  comment: string;\n  mediaType:string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WildlifeDetectionApiService.html":{"url":"injectables/WildlifeDetectionApiService.html","title":"injectable - WildlifeDetectionApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WildlifeDetectionApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-services/wildlife-detection-api/wildlife-detection-api.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDetection\n                            \n                            \n                                getwildlifeData\n                            \n                            \n                                invalidateCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, client: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-services/wildlife-detection-api/wildlife-detection-api.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createDetection\n                        \n                        \n                    \n                \n            \n            \n                \ncreateDetection(detection: Report)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-services/wildlife-detection-api/wildlife-detection-api.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    detection\n                                    \n                                                Report\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getwildlifeData\n                        \n                        \n                    \n                \n            \n            \n                \ngetwildlifeData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-services/wildlife-detection-api/wildlife-detection-api.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invalidateCache\n                        \n                        \n                    \n                \n            \n            \n                \ninvalidateCache()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-services/wildlife-detection-api/wildlife-detection-api.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-services/wildlife-detection-api/wildlife-detection-api.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable, of, shareReplay } from 'rxjs';\nimport { Report } from 'src/app/interfaces/report';\nimport { WildlifeDetection } from 'src/app/interfaces/WildlifeDetection';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WildlifeDetectionApiService {\n\n  private data: Observable | undefined;\n\n  constructor(@Inject(\"BACKEND_URL\") private url: string, private client: HttpClient) {\n\n  }\n\n\n  getwildlifeData(): Observable {\n    return this.data = this.data || this.client.get(`${this.url}/data/`).pipe(\n      shareReplay(1)\n    )\n  }\n\n\n  createDetection(detection: Report): Observable {\n    return this.client.post(`${this.url}/data/manual`, detection);\n  }\n\n  invalidateCache() {\n    this.data = undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/adddevice/adddevice.component.ts\n            \n            component\n            AdddeviceComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/detectionlist/detectionlist.component.ts\n            \n            component\n            DetectionlistComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/manualreporting/manualreporting.component.ts\n            \n            component\n            ManualreportingComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/map/map.component.ts\n            \n            component\n            MapComponent\n            \n                0 %\n                (0/37)\n            \n        \n        \n            \n                \n                src/app/components/map/map.component.ts\n            \n            variable\n            iconDefault\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/map/map.component.ts\n            \n            variable\n            iconRetinaUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/map/map.component.ts\n            \n            variable\n            iconUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/map/map.component.ts\n            \n            variable\n            shadowUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/guards/login.guard.ts\n            \n            guard\n            LoginGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/RainViewerImagePathResponse.ts\n            \n            interface\n            RainViewerImagePathResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/RainViewerImagePathResponse.ts\n            \n            interface\n            RainViewerRadaObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/RainViewerImagePathResponse.ts\n            \n            interface\n            RainViewerSatelliteObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/RainViewerImagePathResponse.ts\n            \n            interface\n            TimePath\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/WildlifeDetection.ts\n            \n            interface\n            WildlifeDetection\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/interfaces/animal.ts\n            \n            interface\n            Animal\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/box.ts\n            \n            interface\n            Box\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/interfaces/country.ts\n            \n            interface\n            Country\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/interfaces/position.ts\n            \n            interface\n            Position\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/interfaces/report.ts\n            \n            interface\n            Report\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/api-services/box-api/box-api.service.ts\n            \n            injectable\n            BoxApiService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/api-services/device-api/device-api.service.ts\n            \n            injectable\n            DeviceApiService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/api-services/geoadminmap.service.ts\n            \n            injectable\n            GeoadminmapService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/api-services/public-api/public-api.service.ts\n            \n            injectable\n            PublicApiService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/api-services/rainviewermap.service.ts\n            \n            injectable\n            RainviewermapService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/api-services/wildlife-detection-api/wildlife-detection-api.service.ts\n            \n            injectable\n            WildlifeDetectionApiService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            Token\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/interceptors/auth-interceptor.service.ts\n            \n            interceptor\n            AuthInterceptorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/location.service.ts\n            \n            injectable\n            LocationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/marker-services/box-marker.service.ts\n            \n            injectable\n            BoxMarkerService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/marker-services/detection-marker.service.ts\n            \n            injectable\n            DetectionMarkerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/marker-services/map-marker.service.ts\n            \n            injectable\n            MapMarkerService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/marker-services/map-marker.service.ts\n            \n            interface\n            Address\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/marker-services/map-marker.service.ts\n            \n            interface\n            BoundingBox\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/marker-services/map-marker.service.ts\n            \n            interface\n            SearchResult\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/utils/animalToIcon.ts\n            \n            function\n            getIconWithIconUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mediaDisplay.ts\n            \n            function\n            getMediaDisplayHTML\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mont-to-season.mapper.ts\n            \n            function\n            mapToSeason\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mont-to-season.mapper.ts\n            \n            variable\n            monthToSeasonMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.0\n        \n            @angular/cdk : ^13.3.9\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/material : ^13.3.9\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @asymmetrik/ngx-leaflet-markercluster : ^13.0.1\n        \n            bootstrap : ^5.1.3\n        \n            font-awesome : ^4.7.0\n        \n            leaflet : ^1.8.0\n        \n            leaflet-locationpicker : ^0.3.3\n        \n            leaflet.markercluster : ^1.5.3\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getIconWithIconUrl   (src/.../animalToIcon.ts)\n                        \n                        \n                            getMediaDisplayHTML   (src/.../mediaDisplay.ts)\n                        \n                        \n                            mapToSeason   (src/.../mont-to-season.mapper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils/animalToIcon.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getIconWithIconUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetIconWithIconUrl(url)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Icon\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/utils/mediaDisplay.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getMediaDisplayHTML\n                        \n                        \n                    \n                \n            \n            \n                \ngetMediaDisplayHTML(data)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/utils/mont-to-season.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            mapToSeason\n                        \n                        \n                    \n                \n            \n            \n                \nmapToSeason(month)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    month\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSynature\nThis project was generated with Angular CLI version 13.3.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Synature\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdddeviceComponent\n\nAdddeviceComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdddeviceComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDetectionlistComponent\n\nDetectionlistComponent\n\nAppModule -->\n\nDetectionlistComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nManualreportingComponent\n\nManualreportingComponent\n\nAppModule -->\n\nManualreportingComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptorService\n\nAuthInterceptorService\n\nAppModule -->\n\nAuthInterceptorService->AppModule\n\n\n\n\n\nMapMarkerService\n\nMapMarkerService\n\nAppModule -->\n\nMapMarkerService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            iconDefault   (src/.../map.component.ts)\n                        \n                        \n                            iconRetinaUrl   (src/.../map.component.ts)\n                        \n                        \n                            iconUrl   (src/.../map.component.ts)\n                        \n                        \n                            monthToSeasonMap   (src/.../mont-to-season.mapper.ts)\n                        \n                        \n                            shadowUrl   (src/.../map.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map/map.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            iconDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : L.icon({\n    iconRetinaUrl,\n    iconUrl,\n    shadowUrl,\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    tooltipAnchor: [16, -28],\n    shadowSize: [41, 41]\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconRetinaUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/marker-icon-2x.png'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/marker-icon.png'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shadowUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/marker-shadow.png'\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/mont-to-season.mapper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            monthToSeasonMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'Winter',\n    'Winter',\n    'Spring',\n    'Spring',\n    'Spring',\n    'Summer',\n    'Summer',\n    'Summer',\n    'Fall',\n    'Fall',\n    'Fall',\n    'Winter'\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
